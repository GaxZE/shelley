{
	"id": 0,
	"name": "@actionishope/shelley",
	"kind": 0,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 39,
			"name": "BlockquoteCustomProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 40,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/Blockquote/Blockquote.tsx",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 41,
					"name": "desc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Describe the quote with inline elemnts like cite and/or links to the source."
					},
					"sources": [
						{
							"fileName": "src/components/Blockquote/Blockquote.tsx",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 42,
					"name": "descVol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Changes the volume of the description."
					},
					"sources": [
						{
							"fileName": "src/components/Blockquote/Blockquote.tsx",
							"line": 13,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 35,
						"name": "Volume"
					}
				},
				{
					"id": 43,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Variant index."
					},
					"sources": [
						{
							"fileName": "src/components/Blockquote/Blockquote.tsx",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "Variant"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						40,
						41,
						42,
						43
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Blockquote/Blockquote.tsx",
					"line": 8,
					"character": 17
				}
			]
		},
		{
			"id": 45,
			"name": "ButtonCustomProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Leveraging Adobes 'useButton' for the lions share of features.\nN.B: Omitting 'elementType' as preference is to use existing 'as'.",
				"text": "Adobe docs: https://react-spectrum.adobe.com/react-aria/useButton.html\n"
			},
			"children": [
				{
					"id": 90,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/button/src/index.d.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-controls"
					}
				},
				{
					"id": 97,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/dom.d.ts",
							"line": 29,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-describedby"
					}
				},
				{
					"id": 98,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that provide a detailed, extended description for the object."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/dom.d.ts",
							"line": 34,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-details"
					}
				},
				{
					"id": 88,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/button/src/index.d.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-expanded"
					}
				},
				{
					"id": 89,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/button/src/index.d.ts",
							"line": 53,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-haspopup"
					}
				},
				{
					"id": 95,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/dom.d.ts",
							"line": 19,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-label"
					}
				},
				{
					"id": 96,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/dom.d.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-labelledby"
					}
				},
				{
					"id": 91,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/button/src/index.d.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-pressed"
					}
				},
				{
					"id": 69,
					"name": "autoFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the element should receive focus on render."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/events.d.ts",
							"line": 101,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.autoFocus"
					}
				},
				{
					"id": 53,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The content to display in the button."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/button/src/index.d.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.children"
					}
				},
				{
					"id": 93,
					"name": "excludeFromTabOrder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether to exclude the element from the sequential tab order. If true,\nthe element will not be focusable via the keyboard by tabbing. This should\nbe avoided except in rare scenarios where an alternative means of accessing\nthe element or its functionality via the keyboard is available."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/dom.d.ts",
							"line": 61,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.excludeFromTabOrder"
					}
				},
				{
					"id": 51,
					"name": "fullWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Applies width of 100%."
					},
					"sources": [
						{
							"fileName": "src/components/Button/Button.tsx",
							"line": 33,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 85,
					"name": "href",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A URL to link to if elementType=\"a\"."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/button/src/index.d.ts",
							"line": 42,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.href"
					}
				},
				{
					"id": 46,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Define an Icon node, postion via #iconPos."
					},
					"sources": [
						{
							"fileName": "src/components/Button/Button.tsx",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 47,
					"name": "iconPos",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The position of the icon relative to the label."
					},
					"sources": [
						{
							"fileName": "src/components/Button/Button.tsx",
							"line": 25,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 31,
						"name": "AlignPos"
					}
				},
				{
					"id": 94,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id)."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/dom.d.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.id"
					}
				},
				{
					"id": 52,
					"name": "isDisabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the button is disabled."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/button/src/index.d.ts",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.isDisabled"
					}
				},
				{
					"id": 87,
					"name": "rel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel)."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/button/src/index.d.ts",
							"line": 46,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.rel"
					}
				},
				{
					"id": 86,
					"name": "target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The target window for the link."
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/button/src/index.d.ts",
							"line": 44,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.target"
					}
				},
				{
					"id": 48,
					"name": "tone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Tone index, defines the color palette."
					},
					"sources": [
						{
							"fileName": "src/components/Button/Button.tsx",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 33,
						"name": "Accent"
					}
				},
				{
					"id": 92,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "The behavior of the button when used in an HTML form.",
						"tags": [
							{
								"tag": "default",
								"text": "'button'\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/button/src/index.d.ts",
							"line": 62,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "button"
							},
							{
								"type": "literal",
								"value": "submit"
							},
							{
								"type": "literal",
								"value": "reset"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.type"
					}
				},
				{
					"id": 49,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Variant index, defines the 'look'."
					},
					"sources": [
						{
							"fileName": "src/components/Button/Button.tsx",
							"line": 29,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "Variant"
					}
				},
				{
					"id": 50,
					"name": "vol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines how 'loud' the Button should be in term of it's size."
					},
					"sources": [
						{
							"fileName": "src/components/Button/Button.tsx",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 35,
						"name": "Volume"
					}
				},
				{
					"id": 73,
					"name": "onBlur",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/events.d.ts",
							"line": 66,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 74,
							"name": "onBlur",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Handler that is called when the element loses focus."
							},
							"parameters": [
								{
									"id": 75,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "FocusEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onBlur"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onBlur"
					}
				},
				{
					"id": 70,
					"name": "onFocus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/events.d.ts",
							"line": 64,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 71,
							"name": "onFocus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Handler that is called when the element receives focus."
							},
							"parameters": [
								{
									"id": 72,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "FocusEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onFocus"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onFocus"
					}
				},
				{
					"id": 76,
					"name": "onFocusChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/events.d.ts",
							"line": 68,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "onFocusChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Handler that is called when the element's focus status changes."
							},
							"parameters": [
								{
									"id": 78,
									"name": "isFocused",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onFocusChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onFocusChange"
					}
				},
				{
					"id": 79,
					"name": "onKeyDown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/events.d.ts",
							"line": 57,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 80,
							"name": "onKeyDown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Handler that is called when a key is pressed."
							},
							"parameters": [
								{
									"id": 81,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "KeyboardEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onKeyDown"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onKeyDown"
					}
				},
				{
					"id": 82,
					"name": "onKeyUp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/events.d.ts",
							"line": 59,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 83,
							"name": "onKeyUp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Handler that is called when a key is released."
							},
							"parameters": [
								{
									"id": 84,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "KeyboardEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onKeyUp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onKeyUp"
					}
				},
				{
					"id": 54,
					"name": "onPress",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/events.d.ts",
							"line": 82,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 55,
							"name": "onPress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Handler that is called when the press is released over the target."
							},
							"parameters": [
								{
									"id": 56,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "PressEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onPress"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPress"
					}
				},
				{
					"id": 63,
					"name": "onPressChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/events.d.ts",
							"line": 91,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 64,
							"name": "onPressChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Handler that is called when the press state changes."
							},
							"parameters": [
								{
									"id": 65,
									"name": "isPressed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onPressChange"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPressChange"
					}
				},
				{
					"id": 60,
					"name": "onPressEnd",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/events.d.ts",
							"line": 89,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 61,
							"name": "onPressEnd",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Handler that is called when a press interaction ends, either\nover the target or when the pointer leaves the target."
							},
							"parameters": [
								{
									"id": 62,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "PressEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onPressEnd"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPressEnd"
					}
				},
				{
					"id": 57,
					"name": "onPressStart",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/events.d.ts",
							"line": 84,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 58,
							"name": "onPressStart",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Handler that is called when a press interaction starts."
							},
							"parameters": [
								{
									"id": 59,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "PressEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onPressStart"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPressStart"
					}
				},
				{
					"id": 66,
					"name": "onPressUp",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@react-types/shared/src/events.d.ts",
							"line": 96,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 67,
							"name": "onPressUp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Handler that is called when a press is released over the target, regardless of\nwhether it started on the target or not."
							},
							"parameters": [
								{
									"id": 68,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "PressEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Omit.onPressUp"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPressUp"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						90,
						97,
						98,
						88,
						89,
						95,
						96,
						91,
						69,
						53,
						93,
						51,
						85,
						46,
						47,
						94,
						52,
						87,
						86,
						48,
						92,
						49,
						50
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						73,
						70,
						76,
						79,
						82,
						54,
						63,
						60,
						57,
						66
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Button/Button.tsx",
					"line": 20,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "AriaButtonProps"
						},
						{
							"type": "literal",
							"value": "elementType"
						}
					],
					"name": "Omit"
				}
			]
		},
		{
			"id": 103,
			"name": "ButtonGroupCustomProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 104,
					"name": "buttonClassName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Adds a class to each button."
					},
					"sources": [
						{
							"fileName": "src/components/ButtonGroup/ButtonGroup.tsx",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 105,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Disables all the buttons."
					},
					"sources": [
						{
							"fileName": "src/components/ButtonGroup/ButtonGroup.tsx",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 110,
					"name": "fullWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/ButtonGroup/ButtonGroup.tsx",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 109,
					"name": "orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Orient around vertical or horizontal."
					},
					"sources": [
						{
							"fileName": "src/components/ButtonGroup/ButtonGroup.tsx",
							"line": 19,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					}
				},
				{
					"id": 106,
					"name": "tone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Tone index."
					},
					"sources": [
						{
							"fileName": "src/components/ButtonGroup/ButtonGroup.tsx",
							"line": 13,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 33,
						"name": "Accent"
					}
				},
				{
					"id": 107,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Variant index."
					},
					"sources": [
						{
							"fileName": "src/components/ButtonGroup/ButtonGroup.tsx",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "Variant"
					}
				},
				{
					"id": 108,
					"name": "vol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Changes the volume of the buttons."
					},
					"sources": [
						{
							"fileName": "src/components/ButtonGroup/ButtonGroup.tsx",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 35,
						"name": "Volume"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						104,
						105,
						110,
						109,
						106,
						107,
						108
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/ButtonGroup/ButtonGroup.tsx",
					"line": 7,
					"character": 17
				}
			]
		},
		{
			"id": 112,
			"name": "GridProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 138,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.about"
					}
				},
				{
					"id": 120,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1823,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.accessKey"
					}
				},
				{
					"id": 160,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-activedescendant"
					}
				},
				{
					"id": 161,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-atomic"
					}
				},
				{
					"id": 162,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-autocomplete"
					}
				},
				{
					"id": 163,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-busy"
					}
				},
				{
					"id": 164,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-checked"
					}
				},
				{
					"id": 165,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colcount"
					}
				},
				{
					"id": 166,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colindex"
					}
				},
				{
					"id": 167,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colspan"
					}
				},
				{
					"id": 168,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-controls"
					}
				},
				{
					"id": 169,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-current"
					}
				},
				{
					"id": 170,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-describedby"
					}
				},
				{
					"id": 171,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-details"
					}
				},
				{
					"id": 172,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-disabled"
					}
				},
				{
					"id": 173,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-dropeffect"
					}
				},
				{
					"id": 174,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-errormessage"
					}
				},
				{
					"id": 175,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-expanded"
					}
				},
				{
					"id": 176,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-flowto"
					}
				},
				{
					"id": 177,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-grabbed"
					}
				},
				{
					"id": 178,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-haspopup"
					}
				},
				{
					"id": 179,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-hidden"
					}
				},
				{
					"id": 180,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-invalid"
					}
				},
				{
					"id": 181,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-keyshortcuts"
					}
				},
				{
					"id": 182,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-label"
					}
				},
				{
					"id": 183,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-labelledby"
					}
				},
				{
					"id": 184,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-level"
					}
				},
				{
					"id": 185,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-live"
					}
				},
				{
					"id": 186,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-modal"
					}
				},
				{
					"id": 187,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-multiline"
					}
				},
				{
					"id": 188,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-multiselectable"
					}
				},
				{
					"id": 189,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-orientation"
					}
				},
				{
					"id": 190,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-owns"
					}
				},
				{
					"id": 191,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-placeholder"
					}
				},
				{
					"id": 192,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-posinset"
					}
				},
				{
					"id": 193,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-pressed"
					}
				},
				{
					"id": 194,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-readonly"
					}
				},
				{
					"id": 195,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-relevant"
					}
				},
				{
					"id": 196,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-required"
					}
				},
				{
					"id": 197,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-roledescription"
					}
				},
				{
					"id": 198,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowcount"
					}
				},
				{
					"id": 199,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowindex"
					}
				},
				{
					"id": 200,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowspan"
					}
				},
				{
					"id": 201,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-selected"
					}
				},
				{
					"id": 202,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-setsize"
					}
				},
				{
					"id": 203,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-sort"
					}
				},
				{
					"id": 204,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuemax"
					}
				},
				{
					"id": 205,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuemin"
					}
				},
				{
					"id": 206,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuenow"
					}
				},
				{
					"id": 207,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuetext"
					}
				},
				{
					"id": 146,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 147,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 148,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoSave"
					}
				},
				{
					"id": 208,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.children"
					}
				},
				{
					"id": 121,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.className"
					}
				},
				{
					"id": 149,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.color"
					}
				},
				{
					"id": 122,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1825,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 123,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1826,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 209,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 210,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 211,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										211
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 139,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.datatype"
					}
				},
				{
					"id": 116,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1817,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 117,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1818,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 124,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1827,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.dir"
					}
				},
				{
					"id": 125,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1828,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.draggable"
					}
				},
				{
					"id": 114,
					"name": "formatted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Designed to toggle child formatting/alignment rules."
					},
					"sources": [
						{
							"fileName": "src/components/Grid/Grid.tsx",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 126,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1829,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.hidden"
					}
				},
				{
					"id": 127,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1830,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.id"
					}
				},
				{
					"id": 140,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.inlist"
					}
				},
				{
					"id": 158,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.inputMode"
					}
				},
				{
					"id": 159,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.is"
					}
				},
				{
					"id": 153,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemID"
					}
				},
				{
					"id": 150,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemProp"
					}
				},
				{
					"id": 154,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemRef"
					}
				},
				{
					"id": 151,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemScope"
					}
				},
				{
					"id": 152,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemType"
					}
				},
				{
					"id": 128,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.lang"
					}
				},
				{
					"id": 250,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAbort"
					}
				},
				{
					"id": 251,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAbortCapture"
					}
				},
				{
					"id": 366,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationEnd"
					}
				},
				{
					"id": 367,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 368,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationIteration"
					}
				},
				{
					"id": 369,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 364,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationStart"
					}
				},
				{
					"id": 365,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 294,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAuxClick"
					}
				},
				{
					"id": 295,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 230,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBeforeInput"
					}
				},
				{
					"id": 231,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 226,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBlur"
					}
				},
				{
					"id": 227,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBlurCapture"
					}
				},
				{
					"id": 252,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlay"
					}
				},
				{
					"id": 253,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 254,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 255,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 228,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onChange"
					}
				},
				{
					"id": 229,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onChangeCapture"
					}
				},
				{
					"id": 296,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onClick"
					}
				},
				{
					"id": 297,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onClickCapture"
					}
				},
				{
					"id": 218,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionEnd"
					}
				},
				{
					"id": 219,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 220,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionStart"
					}
				},
				{
					"id": 221,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 222,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 223,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 298,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onContextMenu"
					}
				},
				{
					"id": 299,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 212,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCopy"
					}
				},
				{
					"id": 213,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCopyCapture"
					}
				},
				{
					"id": 214,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCut"
					}
				},
				{
					"id": 215,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCutCapture"
					}
				},
				{
					"id": 300,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDoubleClick"
					}
				},
				{
					"id": 301,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 302,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDrag"
					}
				},
				{
					"id": 303,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragCapture"
					}
				},
				{
					"id": 304,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnd"
					}
				},
				{
					"id": 305,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEndCapture"
					}
				},
				{
					"id": 306,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnter"
					}
				},
				{
					"id": 307,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 308,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragExit"
					}
				},
				{
					"id": 309,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragExitCapture"
					}
				},
				{
					"id": 310,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragLeave"
					}
				},
				{
					"id": 311,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 312,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragOver"
					}
				},
				{
					"id": 313,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragOverCapture"
					}
				},
				{
					"id": 314,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragStart"
					}
				},
				{
					"id": 315,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragStartCapture"
					}
				},
				{
					"id": 316,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDrop"
					}
				},
				{
					"id": 317,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDropCapture"
					}
				},
				{
					"id": 256,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDurationChange"
					}
				},
				{
					"id": 257,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 258,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEmptied"
					}
				},
				{
					"id": 259,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 260,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEncrypted"
					}
				},
				{
					"id": 261,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 262,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEnded"
					}
				},
				{
					"id": 263,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEndedCapture"
					}
				},
				{
					"id": 242,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onError"
					}
				},
				{
					"id": 243,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onErrorCapture"
					}
				},
				{
					"id": 224,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onFocus"
					}
				},
				{
					"id": 225,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onFocusCapture"
					}
				},
				{
					"id": 356,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 357,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 232,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInput"
					}
				},
				{
					"id": 233,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInputCapture"
					}
				},
				{
					"id": 238,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInvalid"
					}
				},
				{
					"id": 239,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInvalidCapture"
					}
				},
				{
					"id": 244,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyDown"
					}
				},
				{
					"id": 245,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 246,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyPress"
					}
				},
				{
					"id": 247,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 248,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyUp"
					}
				},
				{
					"id": 249,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 240,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoad"
					}
				},
				{
					"id": 241,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadCapture"
					}
				},
				{
					"id": 268,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadStart"
					}
				},
				{
					"id": 269,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 264,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedData"
					}
				},
				{
					"id": 265,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 266,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 267,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 358,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 359,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 318,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseDown"
					}
				},
				{
					"id": 319,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 320,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseEnter"
					}
				},
				{
					"id": 321,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseLeave"
					}
				},
				{
					"id": 322,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseMove"
					}
				},
				{
					"id": 323,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 324,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOut"
					}
				},
				{
					"id": 325,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 326,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOver"
					}
				},
				{
					"id": 327,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 328,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseUp"
					}
				},
				{
					"id": 329,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 216,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPaste"
					}
				},
				{
					"id": 217,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPasteCapture"
					}
				},
				{
					"id": 270,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPause"
					}
				},
				{
					"id": 271,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPauseCapture"
					}
				},
				{
					"id": 272,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlay"
					}
				},
				{
					"id": 273,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlayCapture"
					}
				},
				{
					"id": 274,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlaying"
					}
				},
				{
					"id": 275,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlayingCapture"
					}
				},
				{
					"id": 346,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerCancel"
					}
				},
				{
					"id": 347,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 340,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerDown"
					}
				},
				{
					"id": 341,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 348,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerEnter"
					}
				},
				{
					"id": 349,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 350,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerLeave"
					}
				},
				{
					"id": 351,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 342,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerMove"
					}
				},
				{
					"id": 343,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 354,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOut"
					}
				},
				{
					"id": 355,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 352,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOver"
					}
				},
				{
					"id": 353,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 344,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerUp"
					}
				},
				{
					"id": 345,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 276,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onProgress"
					}
				},
				{
					"id": 277,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onProgressCapture"
					}
				},
				{
					"id": 278,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onRateChange"
					}
				},
				{
					"id": 279,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 234,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onReset"
					}
				},
				{
					"id": 235,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onResetCapture"
					}
				},
				{
					"id": 360,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onScroll"
					}
				},
				{
					"id": 361,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onScrollCapture"
					}
				},
				{
					"id": 280,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeeked"
					}
				},
				{
					"id": 281,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeekedCapture"
					}
				},
				{
					"id": 282,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeeking"
					}
				},
				{
					"id": 283,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeekingCapture"
					}
				},
				{
					"id": 330,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSelect"
					}
				},
				{
					"id": 331,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSelectCapture"
					}
				},
				{
					"id": 284,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onStalled"
					}
				},
				{
					"id": 285,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onStalledCapture"
					}
				},
				{
					"id": 236,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSubmit"
					}
				},
				{
					"id": 237,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSubmitCapture"
					}
				},
				{
					"id": 286,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSuspend"
					}
				},
				{
					"id": 287,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSuspendCapture"
					}
				},
				{
					"id": 288,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTimeUpdate"
					}
				},
				{
					"id": 289,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 332,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchCancel"
					}
				},
				{
					"id": 333,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 334,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchEnd"
					}
				},
				{
					"id": 335,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 336,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchMove"
					}
				},
				{
					"id": 337,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 338,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchStart"
					}
				},
				{
					"id": 339,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 370,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTransitionEnd"
					}
				},
				{
					"id": 371,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 290,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onVolumeChange"
					}
				},
				{
					"id": 291,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 292,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWaiting"
					}
				},
				{
					"id": 293,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWaitingCapture"
					}
				},
				{
					"id": 362,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWheel"
					}
				},
				{
					"id": 363,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWheelCapture"
					}
				},
				{
					"id": 129,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1832,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.placeholder"
					}
				},
				{
					"id": 141,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.prefix"
					}
				},
				{
					"id": 142,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.property"
					}
				},
				{
					"id": 136,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 143,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.resource"
					}
				},
				{
					"id": 155,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.results"
					}
				},
				{
					"id": 137,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.role"
					}
				},
				{
					"id": 156,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.security"
					}
				},
				{
					"id": 130,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.slot"
					}
				},
				{
					"id": 131,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1834,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 132,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1835,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.style"
					}
				},
				{
					"id": 118,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1819,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 119,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1820,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 133,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 113,
					"name": "tag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "HTML tag to render as the root for your grid."
					},
					"sources": [
						{
							"fileName": "src/components/Grid/Grid.tsx",
							"line": 8,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 134,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.title"
					}
				},
				{
					"id": 135,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.translate"
					}
				},
				{
					"id": 144,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.typeof"
					}
				},
				{
					"id": 157,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.unselectable"
					}
				},
				{
					"id": 115,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Variant index."
					},
					"sources": [
						{
							"fileName": "src/components/Grid/Grid.tsx",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 145,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1854,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.vocab"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						138,
						120,
						160,
						161,
						162,
						163,
						164,
						165,
						166,
						167,
						168,
						169,
						170,
						171,
						172,
						173,
						174,
						175,
						176,
						177,
						178,
						179,
						180,
						181,
						182,
						183,
						184,
						185,
						186,
						187,
						188,
						189,
						190,
						191,
						192,
						193,
						194,
						195,
						196,
						197,
						198,
						199,
						200,
						201,
						202,
						203,
						204,
						205,
						206,
						207,
						146,
						147,
						148,
						208,
						121,
						149,
						122,
						123,
						209,
						139,
						116,
						117,
						124,
						125,
						114,
						126,
						127,
						140,
						158,
						159,
						153,
						150,
						154,
						151,
						152,
						128,
						250,
						251,
						366,
						367,
						368,
						369,
						364,
						365,
						294,
						295,
						230,
						231,
						226,
						227,
						252,
						253,
						254,
						255,
						228,
						229,
						296,
						297,
						218,
						219,
						220,
						221,
						222,
						223,
						298,
						299,
						212,
						213,
						214,
						215,
						300,
						301,
						302,
						303,
						304,
						305,
						306,
						307,
						308,
						309,
						310,
						311,
						312,
						313,
						314,
						315,
						316,
						317,
						256,
						257,
						258,
						259,
						260,
						261,
						262,
						263,
						242,
						243,
						224,
						225,
						356,
						357,
						232,
						233,
						238,
						239,
						244,
						245,
						246,
						247,
						248,
						249,
						240,
						241,
						268,
						269,
						264,
						265,
						266,
						267,
						358,
						359,
						318,
						319,
						320,
						321,
						322,
						323,
						324,
						325,
						326,
						327,
						328,
						329,
						216,
						217,
						270,
						271,
						272,
						273,
						274,
						275,
						346,
						347,
						340,
						341,
						348,
						349,
						350,
						351,
						342,
						343,
						354,
						355,
						352,
						353,
						344,
						345,
						276,
						277,
						278,
						279,
						234,
						235,
						360,
						361,
						280,
						281,
						282,
						283,
						330,
						331,
						284,
						285,
						236,
						237,
						286,
						287,
						288,
						289,
						332,
						333,
						334,
						335,
						336,
						337,
						338,
						339,
						370,
						371,
						290,
						291,
						292,
						293,
						362,
						363,
						129,
						141,
						142,
						136,
						143,
						155,
						137,
						156,
						130,
						131,
						132,
						118,
						119,
						133,
						113,
						134,
						135,
						144,
						157,
						115,
						145
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Grid/Grid.tsx",
					"line": 6,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLBaseElement"
						}
					],
					"name": "HTMLAttributes"
				}
			]
		},
		{
			"id": 372,
			"name": "IconProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "Icon props extending those of an svg element."
			},
			"children": [
				{
					"id": 411,
					"name": "accentHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2462,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.accentHeight"
					}
				},
				{
					"id": 412,
					"name": "accumulate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2463,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "sum"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.accumulate"
					}
				},
				{
					"id": 413,
					"name": "additive",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2464,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "sum"
							},
							{
								"type": "literal",
								"value": "replace"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.additive"
					}
				},
				{
					"id": 414,
					"name": "alignmentBaseline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2465,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "alphabetic"
							},
							{
								"type": "literal",
								"value": "hanging"
							},
							{
								"type": "literal",
								"value": "ideographic"
							},
							{
								"type": "literal",
								"value": "mathematical"
							},
							{
								"type": "literal",
								"value": "auto"
							},
							{
								"type": "literal",
								"value": "baseline"
							},
							{
								"type": "literal",
								"value": "before-edge"
							},
							{
								"type": "literal",
								"value": "text-before-edge"
							},
							{
								"type": "literal",
								"value": "middle"
							},
							{
								"type": "literal",
								"value": "central"
							},
							{
								"type": "literal",
								"value": "after-edge"
							},
							{
								"type": "literal",
								"value": "text-after-edge"
							},
							{
								"type": "literal",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.alignmentBaseline"
					}
				},
				{
					"id": 415,
					"name": "allowReorder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2467,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.allowReorder"
					}
				},
				{
					"id": 416,
					"name": "alphabetic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2468,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.alphabetic"
					}
				},
				{
					"id": 373,
					"name": "alt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Alternative text via VisuallyHidden"
					},
					"sources": [
						{
							"fileName": "src/components/Icon/Icon.tsx",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 417,
					"name": "amplitude",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2469,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.amplitude"
					}
				},
				{
					"id": 418,
					"name": "arabicForm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2470,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "initial"
							},
							{
								"type": "literal",
								"value": "medial"
							},
							{
								"type": "literal",
								"value": "terminal"
							},
							{
								"type": "literal",
								"value": "isolated"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.arabicForm"
					}
				},
				{
					"id": 645,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-activedescendant"
					}
				},
				{
					"id": 646,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-atomic"
					}
				},
				{
					"id": 647,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-autocomplete"
					}
				},
				{
					"id": 648,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-busy"
					}
				},
				{
					"id": 649,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-checked"
					}
				},
				{
					"id": 650,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-colcount"
					}
				},
				{
					"id": 651,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-colindex"
					}
				},
				{
					"id": 652,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-colspan"
					}
				},
				{
					"id": 390,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-controls"
					}
				},
				{
					"id": 653,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-current"
					}
				},
				{
					"id": 396,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-describedby"
					}
				},
				{
					"id": 397,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-details"
					}
				},
				{
					"id": 654,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-disabled"
					}
				},
				{
					"id": 655,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-dropeffect"
					}
				},
				{
					"id": 656,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-errormessage"
					}
				},
				{
					"id": 388,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-expanded"
					}
				},
				{
					"id": 657,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-flowto"
					}
				},
				{
					"id": 658,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-grabbed"
					}
				},
				{
					"id": 389,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-haspopup"
					}
				},
				{
					"id": 659,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-hidden"
					}
				},
				{
					"id": 660,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-invalid"
					}
				},
				{
					"id": 661,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-keyshortcuts"
					}
				},
				{
					"id": 394,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-label"
					}
				},
				{
					"id": 395,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-labelledby"
					}
				},
				{
					"id": 662,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-level"
					}
				},
				{
					"id": 663,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-live"
					}
				},
				{
					"id": 664,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-modal"
					}
				},
				{
					"id": 665,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-multiline"
					}
				},
				{
					"id": 666,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-multiselectable"
					}
				},
				{
					"id": 667,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-orientation"
					}
				},
				{
					"id": 668,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-owns"
					}
				},
				{
					"id": 669,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-placeholder"
					}
				},
				{
					"id": 670,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-posinset"
					}
				},
				{
					"id": 391,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-pressed"
					}
				},
				{
					"id": 671,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-readonly"
					}
				},
				{
					"id": 672,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-relevant"
					}
				},
				{
					"id": 673,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-required"
					}
				},
				{
					"id": 674,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-roledescription"
					}
				},
				{
					"id": 675,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-rowcount"
					}
				},
				{
					"id": 676,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-rowindex"
					}
				},
				{
					"id": 677,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-rowspan"
					}
				},
				{
					"id": 678,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-selected"
					}
				},
				{
					"id": 679,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-setsize"
					}
				},
				{
					"id": 680,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-sort"
					}
				},
				{
					"id": 681,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuemax"
					}
				},
				{
					"id": 682,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuemin"
					}
				},
				{
					"id": 683,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuenow"
					}
				},
				{
					"id": 684,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuetext"
					}
				},
				{
					"id": 419,
					"name": "ascent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2471,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.ascent"
					}
				},
				{
					"id": 420,
					"name": "attributeName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2472,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.attributeName"
					}
				},
				{
					"id": 421,
					"name": "attributeType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2473,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.attributeType"
					}
				},
				{
					"id": 422,
					"name": "autoReverse",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoReverse"
					}
				},
				{
					"id": 423,
					"name": "azimuth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2475,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.azimuth"
					}
				},
				{
					"id": 424,
					"name": "baseFrequency",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2476,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.baseFrequency"
					}
				},
				{
					"id": 426,
					"name": "baseProfile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2478,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.baseProfile"
					}
				},
				{
					"id": 425,
					"name": "baselineShift",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2477,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.baselineShift"
					}
				},
				{
					"id": 427,
					"name": "bbox",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2479,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.bbox"
					}
				},
				{
					"id": 428,
					"name": "begin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2480,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.begin"
					}
				},
				{
					"id": 429,
					"name": "bias",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2481,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.bias"
					}
				},
				{
					"id": 430,
					"name": "by",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2482,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.by"
					}
				},
				{
					"id": 431,
					"name": "calcMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2483,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.calcMode"
					}
				},
				{
					"id": 432,
					"name": "capHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2484,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.capHeight"
					}
				},
				{
					"id": 381,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.children"
					}
				},
				{
					"id": 399,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2441,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.className"
					}
				},
				{
					"id": 433,
					"name": "clip",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2485,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.clip"
					}
				},
				{
					"id": 377,
					"name": "clipPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2486,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.clipPath"
					}
				},
				{
					"id": 434,
					"name": "clipPathUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2487,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.clipPathUnits"
					}
				},
				{
					"id": 435,
					"name": "clipRule",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2488,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.clipRule"
					}
				},
				{
					"id": 436,
					"name": "colorInterpolation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2489,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.colorInterpolation"
					}
				},
				{
					"id": 437,
					"name": "colorInterpolationFilters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2490,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "auto"
							},
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "literal",
								"value": "sRGB"
							},
							{
								"type": "literal",
								"value": "linearRGB"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.colorInterpolationFilters"
					}
				},
				{
					"id": 438,
					"name": "colorProfile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2491,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.colorProfile"
					}
				},
				{
					"id": 439,
					"name": "colorRendering",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2492,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.colorRendering"
					}
				},
				{
					"id": 440,
					"name": "contentScriptType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2493,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.contentScriptType"
					}
				},
				{
					"id": 441,
					"name": "contentStyleType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2494,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.contentStyleType"
					}
				},
				{
					"id": 410,
					"name": "crossOrigin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2459,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": ""
							},
							{
								"type": "literal",
								"value": "anonymous"
							},
							{
								"type": "literal",
								"value": "use-credentials"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.crossOrigin"
					}
				},
				{
					"id": 442,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2495,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.cursor"
					}
				},
				{
					"id": 443,
					"name": "cx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2496,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.cx"
					}
				},
				{
					"id": 444,
					"name": "cy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2497,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.cy"
					}
				},
				{
					"id": 445,
					"name": "d",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2498,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.d"
					}
				},
				{
					"id": 685,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 686,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 687,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										687
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 446,
					"name": "decelerate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2499,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.decelerate"
					}
				},
				{
					"id": 447,
					"name": "descent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2500,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.descent"
					}
				},
				{
					"id": 448,
					"name": "diffuseConstant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2501,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.diffuseConstant"
					}
				},
				{
					"id": 449,
					"name": "direction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2502,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.direction"
					}
				},
				{
					"id": 450,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2503,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.display"
					}
				},
				{
					"id": 451,
					"name": "divisor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2504,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.divisor"
					}
				},
				{
					"id": 452,
					"name": "dominantBaseline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2505,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.dominantBaseline"
					}
				},
				{
					"id": 453,
					"name": "dur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2506,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.dur"
					}
				},
				{
					"id": 454,
					"name": "dx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2507,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.dx"
					}
				},
				{
					"id": 455,
					"name": "dy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2508,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.dy"
					}
				},
				{
					"id": 456,
					"name": "edgeMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2509,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.edgeMode"
					}
				},
				{
					"id": 457,
					"name": "elevation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2510,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.elevation"
					}
				},
				{
					"id": 458,
					"name": "enableBackground",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2511,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.enableBackground"
					}
				},
				{
					"id": 459,
					"name": "end",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2512,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.end"
					}
				},
				{
					"id": 460,
					"name": "exponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2513,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.exponent"
					}
				},
				{
					"id": 461,
					"name": "externalResourcesRequired",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.externalResourcesRequired"
					}
				},
				{
					"id": 462,
					"name": "fill",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2515,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fill"
					}
				},
				{
					"id": 463,
					"name": "fillOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2516,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fillOpacity"
					}
				},
				{
					"id": 464,
					"name": "fillRule",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2517,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "literal",
								"value": "nonzero"
							},
							{
								"type": "literal",
								"value": "evenodd"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fillRule"
					}
				},
				{
					"id": 378,
					"name": "filter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2518,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.filter"
					}
				},
				{
					"id": 465,
					"name": "filterRes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2519,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.filterRes"
					}
				},
				{
					"id": 466,
					"name": "filterUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2520,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.filterUnits"
					}
				},
				{
					"id": 467,
					"name": "floodColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2521,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.floodColor"
					}
				},
				{
					"id": 468,
					"name": "floodOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2522,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.floodOpacity"
					}
				},
				{
					"id": 469,
					"name": "focusable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2523,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "auto"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.focusable"
					}
				},
				{
					"id": 470,
					"name": "fontFamily",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2524,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fontFamily"
					}
				},
				{
					"id": 471,
					"name": "fontSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2525,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fontSize"
					}
				},
				{
					"id": 472,
					"name": "fontSizeAdjust",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2526,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fontSizeAdjust"
					}
				},
				{
					"id": 473,
					"name": "fontStretch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2527,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fontStretch"
					}
				},
				{
					"id": 474,
					"name": "fontStyle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2528,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fontStyle"
					}
				},
				{
					"id": 475,
					"name": "fontVariant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2529,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fontVariant"
					}
				},
				{
					"id": 476,
					"name": "fontWeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2530,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fontWeight"
					}
				},
				{
					"id": 477,
					"name": "format",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2531,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.format"
					}
				},
				{
					"id": 478,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2532,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.from"
					}
				},
				{
					"id": 479,
					"name": "fx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2533,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fx"
					}
				},
				{
					"id": 480,
					"name": "fy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2534,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.fy"
					}
				},
				{
					"id": 481,
					"name": "g1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2535,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.g1"
					}
				},
				{
					"id": 482,
					"name": "g2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2536,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.g2"
					}
				},
				{
					"id": 483,
					"name": "glyphName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2537,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.glyphName"
					}
				},
				{
					"id": 484,
					"name": "glyphOrientationHorizontal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2538,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.glyphOrientationHorizontal"
					}
				},
				{
					"id": 485,
					"name": "glyphOrientationVertical",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2539,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.glyphOrientationVertical"
					}
				},
				{
					"id": 486,
					"name": "glyphRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2540,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.glyphRef"
					}
				},
				{
					"id": 487,
					"name": "gradientTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2541,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.gradientTransform"
					}
				},
				{
					"id": 488,
					"name": "gradientUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2542,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.gradientUnits"
					}
				},
				{
					"id": 489,
					"name": "hanging",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2543,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.hanging"
					}
				},
				{
					"id": 400,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2443,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.height"
					}
				},
				{
					"id": 490,
					"name": "horizAdvX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2544,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.horizAdvX"
					}
				},
				{
					"id": 491,
					"name": "horizOriginX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2545,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.horizOriginX"
					}
				},
				{
					"id": 386,
					"name": "href",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2546,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.href"
					}
				},
				{
					"id": 393,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2444,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.id"
					}
				},
				{
					"id": 492,
					"name": "ideographic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2547,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.ideographic"
					}
				},
				{
					"id": 493,
					"name": "imageRendering",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2548,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.imageRendering"
					}
				},
				{
					"id": 495,
					"name": "in",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2550,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.in"
					}
				},
				{
					"id": 494,
					"name": "in2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2549,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.in2"
					}
				},
				{
					"id": 496,
					"name": "intercept",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2551,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.intercept"
					}
				},
				{
					"id": 501,
					"name": "k",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2556,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.k"
					}
				},
				{
					"id": 497,
					"name": "k1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2552,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.k1"
					}
				},
				{
					"id": 498,
					"name": "k2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2553,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.k2"
					}
				},
				{
					"id": 499,
					"name": "k3",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2554,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.k3"
					}
				},
				{
					"id": 500,
					"name": "k4",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2555,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.k4"
					}
				},
				{
					"id": 502,
					"name": "kernelMatrix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2557,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.kernelMatrix"
					}
				},
				{
					"id": 503,
					"name": "kernelUnitLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2558,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.kernelUnitLength"
					}
				},
				{
					"id": 504,
					"name": "kerning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.kerning"
					}
				},
				{
					"id": 844,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 138,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Key"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.key"
					}
				},
				{
					"id": 505,
					"name": "keyPoints",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2560,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.keyPoints"
					}
				},
				{
					"id": 506,
					"name": "keySplines",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2561,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.keySplines"
					}
				},
				{
					"id": 507,
					"name": "keyTimes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2562,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.keyTimes"
					}
				},
				{
					"id": 401,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2445,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.lang"
					}
				},
				{
					"id": 508,
					"name": "lengthAdjust",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2563,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.lengthAdjust"
					}
				},
				{
					"id": 509,
					"name": "letterSpacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.letterSpacing"
					}
				},
				{
					"id": 510,
					"name": "lightingColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2565,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.lightingColor"
					}
				},
				{
					"id": 511,
					"name": "limitingConeAngle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.limitingConeAngle"
					}
				},
				{
					"id": 512,
					"name": "local",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2567,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.local"
					}
				},
				{
					"id": 513,
					"name": "markerEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2568,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.markerEnd"
					}
				},
				{
					"id": 514,
					"name": "markerHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2569,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.markerHeight"
					}
				},
				{
					"id": 515,
					"name": "markerMid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2570,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.markerMid"
					}
				},
				{
					"id": 516,
					"name": "markerStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2571,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.markerStart"
					}
				},
				{
					"id": 517,
					"name": "markerUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2572,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.markerUnits"
					}
				},
				{
					"id": 518,
					"name": "markerWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2573,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.markerWidth"
					}
				},
				{
					"id": 379,
					"name": "mask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2574,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.mask"
					}
				},
				{
					"id": 519,
					"name": "maskContentUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2575,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.maskContentUnits"
					}
				},
				{
					"id": 520,
					"name": "maskUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2576,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.maskUnits"
					}
				},
				{
					"id": 521,
					"name": "mathematical",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2577,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.mathematical"
					}
				},
				{
					"id": 402,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2446,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.max"
					}
				},
				{
					"id": 403,
					"name": "media",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2447,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.media"
					}
				},
				{
					"id": 404,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2448,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.method"
					}
				},
				{
					"id": 405,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2449,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.min"
					}
				},
				{
					"id": 522,
					"name": "mode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2578,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.mode"
					}
				},
				{
					"id": 406,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2450,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.name"
					}
				},
				{
					"id": 523,
					"name": "numOctaves",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2579,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.numOctaves"
					}
				},
				{
					"id": 524,
					"name": "offset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2580,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.offset"
					}
				},
				{
					"id": 722,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAbort"
					}
				},
				{
					"id": 723,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAbortCapture"
					}
				},
				{
					"id": 838,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationEnd"
					}
				},
				{
					"id": 839,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationEndCapture"
					}
				},
				{
					"id": 840,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationIteration"
					}
				},
				{
					"id": 841,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationIterationCapture"
					}
				},
				{
					"id": 836,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationStart"
					}
				},
				{
					"id": 837,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationStartCapture"
					}
				},
				{
					"id": 766,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAuxClick"
					}
				},
				{
					"id": 767,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAuxClickCapture"
					}
				},
				{
					"id": 704,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBeforeInput"
					}
				},
				{
					"id": 705,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBeforeInputCapture"
					}
				},
				{
					"id": 383,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBlur"
					}
				},
				{
					"id": 701,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBlurCapture"
					}
				},
				{
					"id": 724,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlay"
					}
				},
				{
					"id": 725,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlayCapture"
					}
				},
				{
					"id": 726,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlayThrough"
					}
				},
				{
					"id": 727,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlayThroughCapture"
					}
				},
				{
					"id": 702,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onChange"
					}
				},
				{
					"id": 703,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onChangeCapture"
					}
				},
				{
					"id": 768,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onClick"
					}
				},
				{
					"id": 769,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onClickCapture"
					}
				},
				{
					"id": 694,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionEnd"
					}
				},
				{
					"id": 695,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionEndCapture"
					}
				},
				{
					"id": 696,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionStart"
					}
				},
				{
					"id": 697,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionStartCapture"
					}
				},
				{
					"id": 698,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionUpdate"
					}
				},
				{
					"id": 699,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionUpdateCapture"
					}
				},
				{
					"id": 770,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onContextMenu"
					}
				},
				{
					"id": 771,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onContextMenuCapture"
					}
				},
				{
					"id": 688,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCopy"
					}
				},
				{
					"id": 689,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCopyCapture"
					}
				},
				{
					"id": 690,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCut"
					}
				},
				{
					"id": 691,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCutCapture"
					}
				},
				{
					"id": 772,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDoubleClick"
					}
				},
				{
					"id": 773,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDoubleClickCapture"
					}
				},
				{
					"id": 774,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDrag"
					}
				},
				{
					"id": 775,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragCapture"
					}
				},
				{
					"id": 776,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEnd"
					}
				},
				{
					"id": 777,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEndCapture"
					}
				},
				{
					"id": 778,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEnter"
					}
				},
				{
					"id": 779,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEnterCapture"
					}
				},
				{
					"id": 780,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragExit"
					}
				},
				{
					"id": 781,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragExitCapture"
					}
				},
				{
					"id": 782,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragLeave"
					}
				},
				{
					"id": 783,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragLeaveCapture"
					}
				},
				{
					"id": 784,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragOver"
					}
				},
				{
					"id": 785,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragOverCapture"
					}
				},
				{
					"id": 786,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragStart"
					}
				},
				{
					"id": 787,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragStartCapture"
					}
				},
				{
					"id": 788,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDrop"
					}
				},
				{
					"id": 789,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDropCapture"
					}
				},
				{
					"id": 728,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDurationChange"
					}
				},
				{
					"id": 729,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDurationChangeCapture"
					}
				},
				{
					"id": 730,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEmptied"
					}
				},
				{
					"id": 731,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEmptiedCapture"
					}
				},
				{
					"id": 732,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEncrypted"
					}
				},
				{
					"id": 733,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEncryptedCapture"
					}
				},
				{
					"id": 734,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEnded"
					}
				},
				{
					"id": 735,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEndedCapture"
					}
				},
				{
					"id": 716,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onError"
					}
				},
				{
					"id": 717,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onErrorCapture"
					}
				},
				{
					"id": 382,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onFocus"
					}
				},
				{
					"id": 700,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onFocusCapture"
					}
				},
				{
					"id": 828,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onGotPointerCapture"
					}
				},
				{
					"id": 829,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 706,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInput"
					}
				},
				{
					"id": 707,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInputCapture"
					}
				},
				{
					"id": 712,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInvalid"
					}
				},
				{
					"id": 713,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInvalidCapture"
					}
				},
				{
					"id": 384,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyDown"
					}
				},
				{
					"id": 718,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyDownCapture"
					}
				},
				{
					"id": 719,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyPress"
					}
				},
				{
					"id": 720,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyPressCapture"
					}
				},
				{
					"id": 385,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyUp"
					}
				},
				{
					"id": 721,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyUpCapture"
					}
				},
				{
					"id": 714,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoad"
					}
				},
				{
					"id": 715,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadCapture"
					}
				},
				{
					"id": 740,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadStart"
					}
				},
				{
					"id": 741,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadStartCapture"
					}
				},
				{
					"id": 736,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedData"
					}
				},
				{
					"id": 737,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedDataCapture"
					}
				},
				{
					"id": 738,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedMetadata"
					}
				},
				{
					"id": 739,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedMetadataCapture"
					}
				},
				{
					"id": 830,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLostPointerCapture"
					}
				},
				{
					"id": 831,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 790,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseDown"
					}
				},
				{
					"id": 791,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseDownCapture"
					}
				},
				{
					"id": 792,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseEnter"
					}
				},
				{
					"id": 793,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseLeave"
					}
				},
				{
					"id": 794,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseMove"
					}
				},
				{
					"id": 795,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseMoveCapture"
					}
				},
				{
					"id": 796,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOut"
					}
				},
				{
					"id": 797,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOutCapture"
					}
				},
				{
					"id": 798,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOver"
					}
				},
				{
					"id": 799,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOverCapture"
					}
				},
				{
					"id": 800,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseUp"
					}
				},
				{
					"id": 801,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseUpCapture"
					}
				},
				{
					"id": 692,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPaste"
					}
				},
				{
					"id": 693,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPasteCapture"
					}
				},
				{
					"id": 742,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPause"
					}
				},
				{
					"id": 743,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPauseCapture"
					}
				},
				{
					"id": 744,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlay"
					}
				},
				{
					"id": 745,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlayCapture"
					}
				},
				{
					"id": 746,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlaying"
					}
				},
				{
					"id": 747,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlayingCapture"
					}
				},
				{
					"id": 818,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerCancel"
					}
				},
				{
					"id": 819,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerCancelCapture"
					}
				},
				{
					"id": 812,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerDown"
					}
				},
				{
					"id": 813,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerDownCapture"
					}
				},
				{
					"id": 820,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerEnter"
					}
				},
				{
					"id": 821,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerEnterCapture"
					}
				},
				{
					"id": 822,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerLeave"
					}
				},
				{
					"id": 823,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerLeaveCapture"
					}
				},
				{
					"id": 814,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerMove"
					}
				},
				{
					"id": 815,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerMoveCapture"
					}
				},
				{
					"id": 826,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOut"
					}
				},
				{
					"id": 827,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOutCapture"
					}
				},
				{
					"id": 824,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOver"
					}
				},
				{
					"id": 825,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOverCapture"
					}
				},
				{
					"id": 816,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerUp"
					}
				},
				{
					"id": 817,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerUpCapture"
					}
				},
				{
					"id": 748,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onProgress"
					}
				},
				{
					"id": 749,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onProgressCapture"
					}
				},
				{
					"id": 750,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onRateChange"
					}
				},
				{
					"id": 751,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onRateChangeCapture"
					}
				},
				{
					"id": 708,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onReset"
					}
				},
				{
					"id": 709,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onResetCapture"
					}
				},
				{
					"id": 832,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onScroll"
					}
				},
				{
					"id": 833,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onScrollCapture"
					}
				},
				{
					"id": 752,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeeked"
					}
				},
				{
					"id": 753,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeekedCapture"
					}
				},
				{
					"id": 754,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeeking"
					}
				},
				{
					"id": 755,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeekingCapture"
					}
				},
				{
					"id": 802,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSelect"
					}
				},
				{
					"id": 803,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSelectCapture"
					}
				},
				{
					"id": 756,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onStalled"
					}
				},
				{
					"id": 757,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onStalledCapture"
					}
				},
				{
					"id": 710,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSubmit"
					}
				},
				{
					"id": 711,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSubmitCapture"
					}
				},
				{
					"id": 758,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSuspend"
					}
				},
				{
					"id": 759,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSuspendCapture"
					}
				},
				{
					"id": 760,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTimeUpdate"
					}
				},
				{
					"id": 761,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTimeUpdateCapture"
					}
				},
				{
					"id": 804,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchCancel"
					}
				},
				{
					"id": 805,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchCancelCapture"
					}
				},
				{
					"id": 806,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchEnd"
					}
				},
				{
					"id": 807,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchEndCapture"
					}
				},
				{
					"id": 808,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchMove"
					}
				},
				{
					"id": 809,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchMoveCapture"
					}
				},
				{
					"id": 810,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchStart"
					}
				},
				{
					"id": 811,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchStartCapture"
					}
				},
				{
					"id": 842,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTransitionEnd"
					}
				},
				{
					"id": 843,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTransitionEndCapture"
					}
				},
				{
					"id": 762,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onVolumeChange"
					}
				},
				{
					"id": 763,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onVolumeChangeCapture"
					}
				},
				{
					"id": 764,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWaiting"
					}
				},
				{
					"id": 765,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWaitingCapture"
					}
				},
				{
					"id": 834,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWheel"
					}
				},
				{
					"id": 835,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWheelCapture"
					}
				},
				{
					"id": 525,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2581,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.opacity"
					}
				},
				{
					"id": 526,
					"name": "operator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2582,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.operator"
					}
				},
				{
					"id": 527,
					"name": "order",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2583,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.order"
					}
				},
				{
					"id": 528,
					"name": "orient",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2584,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.orient"
					}
				},
				{
					"id": 529,
					"name": "orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2585,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.orientation"
					}
				},
				{
					"id": 530,
					"name": "origin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2586,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.origin"
					}
				},
				{
					"id": 531,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2587,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.overflow"
					}
				},
				{
					"id": 532,
					"name": "overlinePosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2588,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.overlinePosition"
					}
				},
				{
					"id": 533,
					"name": "overlineThickness",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2589,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.overlineThickness"
					}
				},
				{
					"id": 534,
					"name": "paintOrder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2590,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.paintOrder"
					}
				},
				{
					"id": 535,
					"name": "panose1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2591,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.panose1"
					}
				},
				{
					"id": 380,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2592,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.path"
					}
				},
				{
					"id": 536,
					"name": "pathLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.pathLength"
					}
				},
				{
					"id": 537,
					"name": "patternContentUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2594,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.patternContentUnits"
					}
				},
				{
					"id": 538,
					"name": "patternTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2595,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.patternTransform"
					}
				},
				{
					"id": 539,
					"name": "patternUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2596,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.patternUnits"
					}
				},
				{
					"id": 540,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2597,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.pointerEvents"
					}
				},
				{
					"id": 541,
					"name": "points",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.points"
					}
				},
				{
					"id": 542,
					"name": "pointsAtX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2599,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.pointsAtX"
					}
				},
				{
					"id": 543,
					"name": "pointsAtY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2600,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.pointsAtY"
					}
				},
				{
					"id": 544,
					"name": "pointsAtZ",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2601,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.pointsAtZ"
					}
				},
				{
					"id": 545,
					"name": "preserveAlpha",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2602,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.preserveAlpha"
					}
				},
				{
					"id": 546,
					"name": "preserveAspectRatio",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.preserveAspectRatio"
					}
				},
				{
					"id": 547,
					"name": "primitiveUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2604,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.primitiveUnits"
					}
				},
				{
					"id": 548,
					"name": "r",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2605,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.r"
					}
				},
				{
					"id": 549,
					"name": "radius",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2606,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.radius"
					}
				},
				{
					"id": 398,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 144,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement"
							}
						],
						"name": "LegacyRef"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.ref"
					}
				},
				{
					"id": 550,
					"name": "refX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2607,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.refX"
					}
				},
				{
					"id": 551,
					"name": "refY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.refY"
					}
				},
				{
					"id": 552,
					"name": "renderingIntent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2609,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.renderingIntent"
					}
				},
				{
					"id": 553,
					"name": "repeatCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2610,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.repeatCount"
					}
				},
				{
					"id": 554,
					"name": "repeatDur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2611,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.repeatDur"
					}
				},
				{
					"id": 555,
					"name": "requiredExtensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2612,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.requiredExtensions"
					}
				},
				{
					"id": 556,
					"name": "requiredFeatures",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.requiredFeatures"
					}
				},
				{
					"id": 557,
					"name": "restart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2614,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.restart"
					}
				},
				{
					"id": 558,
					"name": "result",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2615,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.result"
					}
				},
				{
					"id": 408,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.role"
					}
				},
				{
					"id": 559,
					"name": "rotate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2616,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.rotate"
					}
				},
				{
					"id": 560,
					"name": "rx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2617,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.rx"
					}
				},
				{
					"id": 561,
					"name": "ry",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2618,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.ry"
					}
				},
				{
					"id": 562,
					"name": "scale",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2619,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.scale"
					}
				},
				{
					"id": 563,
					"name": "seed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.seed"
					}
				},
				{
					"id": 564,
					"name": "shapeRendering",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2621,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.shapeRendering"
					}
				},
				{
					"id": 565,
					"name": "slope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2622,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.slope"
					}
				},
				{
					"id": 566,
					"name": "spacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2623,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.spacing"
					}
				},
				{
					"id": 567,
					"name": "specularConstant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2624,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.specularConstant"
					}
				},
				{
					"id": 568,
					"name": "specularExponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2625,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.specularExponent"
					}
				},
				{
					"id": 569,
					"name": "speed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2626,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.speed"
					}
				},
				{
					"id": 570,
					"name": "spreadMethod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2627,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.spreadMethod"
					}
				},
				{
					"id": 571,
					"name": "startOffset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2628,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.startOffset"
					}
				},
				{
					"id": 572,
					"name": "stdDeviation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2629,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.stdDeviation"
					}
				},
				{
					"id": 573,
					"name": "stemh",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.stemh"
					}
				},
				{
					"id": 574,
					"name": "stemv",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2631,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.stemv"
					}
				},
				{
					"id": 575,
					"name": "stitchTiles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.stitchTiles"
					}
				},
				{
					"id": 576,
					"name": "stopColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2633,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.stopColor"
					}
				},
				{
					"id": 577,
					"name": "stopOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2634,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.stopOpacity"
					}
				},
				{
					"id": 578,
					"name": "strikethroughPosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2635,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.strikethroughPosition"
					}
				},
				{
					"id": 579,
					"name": "strikethroughThickness",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2636,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.strikethroughThickness"
					}
				},
				{
					"id": 375,
					"name": "string",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.string"
					}
				},
				{
					"id": 580,
					"name": "stroke",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2638,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.stroke"
					}
				},
				{
					"id": 581,
					"name": "strokeDasharray",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2639,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.strokeDasharray"
					}
				},
				{
					"id": 582,
					"name": "strokeDashoffset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2640,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.strokeDashoffset"
					}
				},
				{
					"id": 583,
					"name": "strokeLinecap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2641,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "literal",
								"value": "butt"
							},
							{
								"type": "literal",
								"value": "round"
							},
							{
								"type": "literal",
								"value": "square"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.strokeLinecap"
					}
				},
				{
					"id": 584,
					"name": "strokeLinejoin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "literal",
								"value": "round"
							},
							{
								"type": "literal",
								"value": "miter"
							},
							{
								"type": "literal",
								"value": "bevel"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.strokeLinejoin"
					}
				},
				{
					"id": 585,
					"name": "strokeMiterlimit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2643,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.strokeMiterlimit"
					}
				},
				{
					"id": 586,
					"name": "strokeOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2644,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.strokeOpacity"
					}
				},
				{
					"id": 587,
					"name": "strokeWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2645,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.strokeWidth"
					}
				},
				{
					"id": 376,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.style"
					}
				},
				{
					"id": 588,
					"name": "surfaceScale",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2646,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.surfaceScale"
					}
				},
				{
					"id": 589,
					"name": "systemLanguage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2647,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.systemLanguage"
					}
				},
				{
					"id": 409,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2458,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.tabIndex"
					}
				},
				{
					"id": 590,
					"name": "tableValues",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2648,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.tableValues"
					}
				},
				{
					"id": 387,
					"name": "target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2452,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.target"
					}
				},
				{
					"id": 591,
					"name": "targetX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2649,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.targetX"
					}
				},
				{
					"id": 592,
					"name": "targetY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2650,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.targetY"
					}
				},
				{
					"id": 593,
					"name": "textAnchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2651,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.textAnchor"
					}
				},
				{
					"id": 594,
					"name": "textDecoration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2652,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.textDecoration"
					}
				},
				{
					"id": 595,
					"name": "textLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2653,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.textLength"
					}
				},
				{
					"id": 596,
					"name": "textRendering",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2654,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.textRendering"
					}
				},
				{
					"id": 597,
					"name": "to",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2655,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.to"
					}
				},
				{
					"id": 598,
					"name": "transform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.transform"
					}
				},
				{
					"id": 392,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2453,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.type"
					}
				},
				{
					"id": 599,
					"name": "u1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2657,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.u1"
					}
				},
				{
					"id": 600,
					"name": "u2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.u2"
					}
				},
				{
					"id": 601,
					"name": "underlinePosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2659,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.underlinePosition"
					}
				},
				{
					"id": 602,
					"name": "underlineThickness",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.underlineThickness"
					}
				},
				{
					"id": 603,
					"name": "unicode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2661,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.unicode"
					}
				},
				{
					"id": 604,
					"name": "unicodeBidi",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.unicodeBidi"
					}
				},
				{
					"id": 605,
					"name": "unicodeRange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2663,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.unicodeRange"
					}
				},
				{
					"id": 606,
					"name": "unitsPerEm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.unitsPerEm"
					}
				},
				{
					"id": 607,
					"name": "vAlphabetic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2665,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.vAlphabetic"
					}
				},
				{
					"id": 614,
					"name": "vHanging",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2672,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.vHanging"
					}
				},
				{
					"id": 615,
					"name": "vIdeographic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2673,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.vIdeographic"
					}
				},
				{
					"id": 618,
					"name": "vMathematical",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2677,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.vMathematical"
					}
				},
				{
					"id": 608,
					"name": "values",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2666,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.values"
					}
				},
				{
					"id": 609,
					"name": "vectorEffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2667,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.vectorEffect"
					}
				},
				{
					"id": 610,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2668,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.version"
					}
				},
				{
					"id": 611,
					"name": "vertAdvY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2669,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.vertAdvY"
					}
				},
				{
					"id": 612,
					"name": "vertOriginX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2670,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.vertOriginX"
					}
				},
				{
					"id": 613,
					"name": "vertOriginY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2671,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.vertOriginY"
					}
				},
				{
					"id": 374,
					"name": "viewBox",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Defaults to \"0 0 16 16\" based on vaadin icon set:\n https://github.com/vaadin/vaadin-icons/tree/master/assets/svg\nFor material-ui set to \"0 0 24 24\".]"
					},
					"sources": [
						{
							"fileName": "src/components/Icon/Icon.tsx",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "Pick.viewBox"
					}
				},
				{
					"id": 616,
					"name": "viewTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2675,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.viewTarget"
					}
				},
				{
					"id": 617,
					"name": "visibility",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2676,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.visibility"
					}
				},
				{
					"id": 407,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2454,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.width"
					}
				},
				{
					"id": 619,
					"name": "widths",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2678,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.widths"
					}
				},
				{
					"id": 620,
					"name": "wordSpacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2679,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.wordSpacing"
					}
				},
				{
					"id": 621,
					"name": "writingMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2680,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.writingMode"
					}
				},
				{
					"id": 624,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2683,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.x"
					}
				},
				{
					"id": 622,
					"name": "x1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2681,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.x1"
					}
				},
				{
					"id": 623,
					"name": "x2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2682,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.x2"
					}
				},
				{
					"id": 625,
					"name": "xChannelSelector",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2684,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xChannelSelector"
					}
				},
				{
					"id": 626,
					"name": "xHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2685,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xHeight"
					}
				},
				{
					"id": 627,
					"name": "xlinkActuate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2686,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xlinkActuate"
					}
				},
				{
					"id": 628,
					"name": "xlinkArcrole",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2687,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xlinkArcrole"
					}
				},
				{
					"id": 629,
					"name": "xlinkHref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2688,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xlinkHref"
					}
				},
				{
					"id": 630,
					"name": "xlinkRole",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2689,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xlinkRole"
					}
				},
				{
					"id": 631,
					"name": "xlinkShow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2690,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xlinkShow"
					}
				},
				{
					"id": 632,
					"name": "xlinkTitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2691,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xlinkTitle"
					}
				},
				{
					"id": 633,
					"name": "xlinkType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2692,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xlinkType"
					}
				},
				{
					"id": 634,
					"name": "xmlBase",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2693,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xmlBase"
					}
				},
				{
					"id": 635,
					"name": "xmlLang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2694,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xmlLang"
					}
				},
				{
					"id": 638,
					"name": "xmlSpace",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2697,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xmlSpace"
					}
				},
				{
					"id": 636,
					"name": "xmlns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2695,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xmlns"
					}
				},
				{
					"id": 637,
					"name": "xmlnsXlink",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2696,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.xmlnsXlink"
					}
				},
				{
					"id": 641,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2700,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.y"
					}
				},
				{
					"id": 639,
					"name": "y1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2698,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.y1"
					}
				},
				{
					"id": 640,
					"name": "y2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.y2"
					}
				},
				{
					"id": 642,
					"name": "yChannelSelector",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.yChannelSelector"
					}
				},
				{
					"id": 643,
					"name": "z",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2702,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.z"
					}
				},
				{
					"id": 644,
					"name": "zoomAndPan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2703,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.zoomAndPan"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						411,
						412,
						413,
						414,
						415,
						416,
						373,
						417,
						418,
						645,
						646,
						647,
						648,
						649,
						650,
						651,
						652,
						390,
						653,
						396,
						397,
						654,
						655,
						656,
						388,
						657,
						658,
						389,
						659,
						660,
						661,
						394,
						395,
						662,
						663,
						664,
						665,
						666,
						667,
						668,
						669,
						670,
						391,
						671,
						672,
						673,
						674,
						675,
						676,
						677,
						678,
						679,
						680,
						681,
						682,
						683,
						684,
						419,
						420,
						421,
						422,
						423,
						424,
						426,
						425,
						427,
						428,
						429,
						430,
						431,
						432,
						381,
						399,
						433,
						377,
						434,
						435,
						436,
						437,
						438,
						439,
						440,
						441,
						410,
						442,
						443,
						444,
						445,
						685,
						446,
						447,
						448,
						449,
						450,
						451,
						452,
						453,
						454,
						455,
						456,
						457,
						458,
						459,
						460,
						461,
						462,
						463,
						464,
						378,
						465,
						466,
						467,
						468,
						469,
						470,
						471,
						472,
						473,
						474,
						475,
						476,
						477,
						478,
						479,
						480,
						481,
						482,
						483,
						484,
						485,
						486,
						487,
						488,
						489,
						400,
						490,
						491,
						386,
						393,
						492,
						493,
						495,
						494,
						496,
						501,
						497,
						498,
						499,
						500,
						502,
						503,
						504,
						844,
						505,
						506,
						507,
						401,
						508,
						509,
						510,
						511,
						512,
						513,
						514,
						515,
						516,
						517,
						518,
						379,
						519,
						520,
						521,
						402,
						403,
						404,
						405,
						522,
						406,
						523,
						524,
						722,
						723,
						838,
						839,
						840,
						841,
						836,
						837,
						766,
						767,
						704,
						705,
						383,
						701,
						724,
						725,
						726,
						727,
						702,
						703,
						768,
						769,
						694,
						695,
						696,
						697,
						698,
						699,
						770,
						771,
						688,
						689,
						690,
						691,
						772,
						773,
						774,
						775,
						776,
						777,
						778,
						779,
						780,
						781,
						782,
						783,
						784,
						785,
						786,
						787,
						788,
						789,
						728,
						729,
						730,
						731,
						732,
						733,
						734,
						735,
						716,
						717,
						382,
						700,
						828,
						829,
						706,
						707,
						712,
						713,
						384,
						718,
						719,
						720,
						385,
						721,
						714,
						715,
						740,
						741,
						736,
						737,
						738,
						739,
						830,
						831,
						790,
						791,
						792,
						793,
						794,
						795,
						796,
						797,
						798,
						799,
						800,
						801,
						692,
						693,
						742,
						743,
						744,
						745,
						746,
						747,
						818,
						819,
						812,
						813,
						820,
						821,
						822,
						823,
						814,
						815,
						826,
						827,
						824,
						825,
						816,
						817,
						748,
						749,
						750,
						751,
						708,
						709,
						832,
						833,
						752,
						753,
						754,
						755,
						802,
						803,
						756,
						757,
						710,
						711,
						758,
						759,
						760,
						761,
						804,
						805,
						806,
						807,
						808,
						809,
						810,
						811,
						842,
						843,
						762,
						763,
						764,
						765,
						834,
						835,
						525,
						526,
						527,
						528,
						529,
						530,
						531,
						532,
						533,
						534,
						535,
						380,
						536,
						537,
						538,
						539,
						540,
						541,
						542,
						543,
						544,
						545,
						546,
						547,
						548,
						549,
						398,
						550,
						551,
						552,
						553,
						554,
						555,
						556,
						557,
						558,
						408,
						559,
						560,
						561,
						562,
						563,
						564,
						565,
						566,
						567,
						568,
						569,
						570,
						571,
						572,
						573,
						574,
						575,
						576,
						577,
						578,
						579,
						375,
						580,
						581,
						582,
						583,
						584,
						585,
						586,
						587,
						376,
						588,
						589,
						409,
						590,
						387,
						591,
						592,
						593,
						594,
						595,
						596,
						597,
						598,
						392,
						599,
						600,
						601,
						602,
						603,
						604,
						605,
						606,
						607,
						614,
						615,
						618,
						608,
						609,
						610,
						611,
						612,
						613,
						374,
						616,
						617,
						407,
						619,
						620,
						621,
						624,
						622,
						623,
						625,
						626,
						627,
						628,
						629,
						630,
						631,
						632,
						633,
						634,
						635,
						638,
						636,
						637,
						641,
						639,
						640,
						642,
						643,
						644
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Icon/Icon.tsx",
					"line": 9,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "SVGSVGElement"
								}
							],
							"name": "React.SVGProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "SVGSVGElement"
											}
										],
										"name": "React.SVGProps"
									}
								},
								{
									"type": "literal",
									"value": "color"
								}
							],
							"name": "Exclude"
						}
					],
					"name": "Pick"
				}
			]
		},
		{
			"id": 845,
			"name": "InputBaseProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 850,
					"name": "endAdornment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Place a component so as to appear inside the TextInput end."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 846,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide an error message that triggers the stylable error state."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 847,
					"name": "hint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide some hint text to the label component."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 851,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The label to associated with the input."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 853,
					"name": "labelVisuallyHidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Visually hide the label so it is still accessible to assistive technologies."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 849,
					"name": "startAdornment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Place a component so as to appear inside the TextInput start."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 848,
					"name": "touched",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Triggers the Inputs stylable error state."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 852,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Variant index."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 26,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "Variant"
					}
				},
				{
					"id": 854,
					"name": "vol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "How loud should this input row be?"
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 35,
						"name": "Volume"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						850,
						846,
						847,
						851,
						853,
						849,
						848,
						852,
						854
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/InputBase/InputBase.tsx",
					"line": 10,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 855,
					"name": "InputSelectProps"
				},
				{
					"type": "reference",
					"id": 1866,
					"name": "InputTextProps"
				}
			]
		},
		{
			"id": 855,
			"name": "InputSelectProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "HTMLInputElement has a 'label' attribute apparently; so replacing it."
			},
			"children": [
				{
					"id": 888,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.about"
					}
				},
				{
					"id": 871,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1823,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.accessKey"
					}
				},
				{
					"id": 910,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-activedescendant"
					}
				},
				{
					"id": 911,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-atomic"
					}
				},
				{
					"id": 912,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-autocomplete"
					}
				},
				{
					"id": 913,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-busy"
					}
				},
				{
					"id": 914,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-checked"
					}
				},
				{
					"id": 915,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-colcount"
					}
				},
				{
					"id": 916,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-colindex"
					}
				},
				{
					"id": 917,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-colspan"
					}
				},
				{
					"id": 918,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-controls"
					}
				},
				{
					"id": 919,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-current"
					}
				},
				{
					"id": 920,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-describedby"
					}
				},
				{
					"id": 921,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-details"
					}
				},
				{
					"id": 922,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-disabled"
					}
				},
				{
					"id": 923,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-dropeffect"
					}
				},
				{
					"id": 924,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-errormessage"
					}
				},
				{
					"id": 925,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-expanded"
					}
				},
				{
					"id": 926,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-flowto"
					}
				},
				{
					"id": 927,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-grabbed"
					}
				},
				{
					"id": 928,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-haspopup"
					}
				},
				{
					"id": 929,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-hidden"
					}
				},
				{
					"id": 930,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-invalid"
					}
				},
				{
					"id": 931,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-keyshortcuts"
					}
				},
				{
					"id": 932,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-label"
					}
				},
				{
					"id": 933,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-labelledby"
					}
				},
				{
					"id": 934,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-level"
					}
				},
				{
					"id": 935,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-live"
					}
				},
				{
					"id": 936,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-modal"
					}
				},
				{
					"id": 937,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-multiline"
					}
				},
				{
					"id": 938,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-multiselectable"
					}
				},
				{
					"id": 939,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-orientation"
					}
				},
				{
					"id": 940,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-owns"
					}
				},
				{
					"id": 941,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-placeholder"
					}
				},
				{
					"id": 942,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-posinset"
					}
				},
				{
					"id": 943,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-pressed"
					}
				},
				{
					"id": 944,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-readonly"
					}
				},
				{
					"id": 945,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-relevant"
					}
				},
				{
					"id": 946,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-required"
					}
				},
				{
					"id": 947,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-roledescription"
					}
				},
				{
					"id": 948,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-rowcount"
					}
				},
				{
					"id": 949,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-rowindex"
					}
				},
				{
					"id": 950,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-rowspan"
					}
				},
				{
					"id": 951,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-selected"
					}
				},
				{
					"id": 952,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-setsize"
					}
				},
				{
					"id": 953,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-sort"
					}
				},
				{
					"id": 954,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-valuemax"
					}
				},
				{
					"id": 955,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-valuemin"
					}
				},
				{
					"id": 956,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-valuenow"
					}
				},
				{
					"id": 957,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.aria-valuetext"
					}
				},
				{
					"id": 896,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 857,
					"name": "autoComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2334,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.autoComplete"
					}
				},
				{
					"id": 897,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 858,
					"name": "autoFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2335,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.autoFocus"
					}
				},
				{
					"id": 898,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.autoSave"
					}
				},
				{
					"id": 958,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.children"
					}
				},
				{
					"id": 872,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.className"
					}
				},
				{
					"id": 899,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.color"
					}
				},
				{
					"id": 873,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1825,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.contentEditable"
					}
				},
				{
					"id": 874,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1826,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.contextMenu"
					}
				},
				{
					"id": 959,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 960,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 961,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										961
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 889,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.datatype"
					}
				},
				{
					"id": 867,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1817,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 868,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1818,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.defaultValue"
					}
				},
				{
					"id": 875,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1827,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.dir"
					}
				},
				{
					"id": 859,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2336,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.disabled"
					}
				},
				{
					"id": 876,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1828,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.draggable"
					}
				},
				{
					"id": 1125,
					"name": "endAdornment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Place a component so as to appear inside the TextInput end."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 850,
						"name": "InputBaseProps.endAdornment"
					}
				},
				{
					"id": 1121,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide an error message that triggers the stylable error state."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 846,
						"name": "InputBaseProps.error"
					}
				},
				{
					"id": 860,
					"name": "form",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2337,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.form"
					}
				},
				{
					"id": 877,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1829,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.hidden"
					}
				},
				{
					"id": 1122,
					"name": "hint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide some hint text to the label component."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 847,
						"name": "InputBaseProps.hint"
					}
				},
				{
					"id": 856,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The `id` is required to associate fields with labels programatically for better\nUX and a legal requirement for accessibility."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelect/InputSelect.tsx",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.id"
					}
				},
				{
					"id": 890,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.inlist"
					}
				},
				{
					"id": 908,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.inputMode"
					}
				},
				{
					"id": 909,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.is"
					}
				},
				{
					"id": 903,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.itemID"
					}
				},
				{
					"id": 900,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.itemProp"
					}
				},
				{
					"id": 904,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.itemRef"
					}
				},
				{
					"id": 901,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.itemScope"
					}
				},
				{
					"id": 902,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.itemType"
					}
				},
				{
					"id": 1126,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The label to associated with the input."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 851,
						"name": "InputBaseProps.label"
					}
				},
				{
					"id": 1128,
					"name": "labelVisuallyHidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Visually hide the label so it is still accessible to assistive technologies."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 853,
						"name": "InputBaseProps.labelVisuallyHidden"
					}
				},
				{
					"id": 878,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.lang"
					}
				},
				{
					"id": 861,
					"name": "multiple",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2338,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.multiple"
					}
				},
				{
					"id": 862,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2339,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.name"
					}
				},
				{
					"id": 999,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onAbort"
					}
				},
				{
					"id": 1000,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onAbortCapture"
					}
				},
				{
					"id": 1115,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onAnimationEnd"
					}
				},
				{
					"id": 1116,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 1117,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onAnimationIteration"
					}
				},
				{
					"id": 1118,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 1113,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onAnimationStart"
					}
				},
				{
					"id": 1114,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 1043,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onAuxClick"
					}
				},
				{
					"id": 1044,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 979,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onBeforeInput"
					}
				},
				{
					"id": 980,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 976,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onBlur"
					}
				},
				{
					"id": 977,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onBlurCapture"
					}
				},
				{
					"id": 1001,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCanPlay"
					}
				},
				{
					"id": 1002,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 1003,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 1004,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 866,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2343,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ChangeEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onChange"
					}
				},
				{
					"id": 978,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onChangeCapture"
					}
				},
				{
					"id": 1045,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onClick"
					}
				},
				{
					"id": 1046,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onClickCapture"
					}
				},
				{
					"id": 968,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCompositionEnd"
					}
				},
				{
					"id": 969,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 970,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCompositionStart"
					}
				},
				{
					"id": 971,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 972,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 973,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 1047,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onContextMenu"
					}
				},
				{
					"id": 1048,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 962,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCopy"
					}
				},
				{
					"id": 963,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCopyCapture"
					}
				},
				{
					"id": 964,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCut"
					}
				},
				{
					"id": 965,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onCutCapture"
					}
				},
				{
					"id": 1049,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDoubleClick"
					}
				},
				{
					"id": 1050,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 1051,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDrag"
					}
				},
				{
					"id": 1052,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragCapture"
					}
				},
				{
					"id": 1053,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragEnd"
					}
				},
				{
					"id": 1054,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragEndCapture"
					}
				},
				{
					"id": 1055,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragEnter"
					}
				},
				{
					"id": 1056,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 1057,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragExit"
					}
				},
				{
					"id": 1058,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragExitCapture"
					}
				},
				{
					"id": 1059,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragLeave"
					}
				},
				{
					"id": 1060,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 1061,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragOver"
					}
				},
				{
					"id": 1062,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragOverCapture"
					}
				},
				{
					"id": 1063,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragStart"
					}
				},
				{
					"id": 1064,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDragStartCapture"
					}
				},
				{
					"id": 1065,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDrop"
					}
				},
				{
					"id": 1066,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDropCapture"
					}
				},
				{
					"id": 1005,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDurationChange"
					}
				},
				{
					"id": 1006,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 1007,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onEmptied"
					}
				},
				{
					"id": 1008,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 1009,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onEncrypted"
					}
				},
				{
					"id": 1010,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 1011,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onEnded"
					}
				},
				{
					"id": 1012,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onEndedCapture"
					}
				},
				{
					"id": 991,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onError"
					}
				},
				{
					"id": 992,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onErrorCapture"
					}
				},
				{
					"id": 974,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onFocus"
					}
				},
				{
					"id": 975,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onFocusCapture"
					}
				},
				{
					"id": 1105,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 1106,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 981,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onInput"
					}
				},
				{
					"id": 982,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onInputCapture"
					}
				},
				{
					"id": 987,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onInvalid"
					}
				},
				{
					"id": 988,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onInvalidCapture"
					}
				},
				{
					"id": 993,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onKeyDown"
					}
				},
				{
					"id": 994,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 995,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onKeyPress"
					}
				},
				{
					"id": 996,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 997,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onKeyUp"
					}
				},
				{
					"id": 998,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 989,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onLoad"
					}
				},
				{
					"id": 990,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onLoadCapture"
					}
				},
				{
					"id": 1017,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onLoadStart"
					}
				},
				{
					"id": 1018,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 1013,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onLoadedData"
					}
				},
				{
					"id": 1014,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 1015,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 1016,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 1107,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 1108,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 1067,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseDown"
					}
				},
				{
					"id": 1068,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 1069,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseEnter"
					}
				},
				{
					"id": 1070,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseLeave"
					}
				},
				{
					"id": 1071,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseMove"
					}
				},
				{
					"id": 1072,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 1073,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseOut"
					}
				},
				{
					"id": 1074,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 1075,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseOver"
					}
				},
				{
					"id": 1076,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 1077,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseUp"
					}
				},
				{
					"id": 1078,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 966,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPaste"
					}
				},
				{
					"id": 967,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPasteCapture"
					}
				},
				{
					"id": 1019,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPause"
					}
				},
				{
					"id": 1020,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPauseCapture"
					}
				},
				{
					"id": 1021,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPlay"
					}
				},
				{
					"id": 1022,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPlayCapture"
					}
				},
				{
					"id": 1023,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPlaying"
					}
				},
				{
					"id": 1024,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPlayingCapture"
					}
				},
				{
					"id": 1095,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerCancel"
					}
				},
				{
					"id": 1096,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 1089,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerDown"
					}
				},
				{
					"id": 1090,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 1097,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerEnter"
					}
				},
				{
					"id": 1098,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 1099,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerLeave"
					}
				},
				{
					"id": 1100,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 1091,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerMove"
					}
				},
				{
					"id": 1092,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 1103,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerOut"
					}
				},
				{
					"id": 1104,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 1101,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerOver"
					}
				},
				{
					"id": 1102,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 1093,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerUp"
					}
				},
				{
					"id": 1094,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 1025,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onProgress"
					}
				},
				{
					"id": 1026,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onProgressCapture"
					}
				},
				{
					"id": 1027,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onRateChange"
					}
				},
				{
					"id": 1028,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 983,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onReset"
					}
				},
				{
					"id": 984,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onResetCapture"
					}
				},
				{
					"id": 1109,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onScroll"
					}
				},
				{
					"id": 1110,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onScrollCapture"
					}
				},
				{
					"id": 1029,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onSeeked"
					}
				},
				{
					"id": 1030,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onSeekedCapture"
					}
				},
				{
					"id": 1031,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onSeeking"
					}
				},
				{
					"id": 1032,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onSeekingCapture"
					}
				},
				{
					"id": 1079,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onSelect"
					}
				},
				{
					"id": 1080,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onSelectCapture"
					}
				},
				{
					"id": 1033,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onStalled"
					}
				},
				{
					"id": 1034,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onStalledCapture"
					}
				},
				{
					"id": 985,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onSubmit"
					}
				},
				{
					"id": 986,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onSubmitCapture"
					}
				},
				{
					"id": 1035,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onSuspend"
					}
				},
				{
					"id": 1036,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onSuspendCapture"
					}
				},
				{
					"id": 1037,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTimeUpdate"
					}
				},
				{
					"id": 1038,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 1081,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTouchCancel"
					}
				},
				{
					"id": 1082,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 1083,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTouchEnd"
					}
				},
				{
					"id": 1084,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 1085,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTouchMove"
					}
				},
				{
					"id": 1086,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 1087,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTouchStart"
					}
				},
				{
					"id": 1088,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 1119,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTransitionEnd"
					}
				},
				{
					"id": 1120,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 1039,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onVolumeChange"
					}
				},
				{
					"id": 1040,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 1041,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onWaiting"
					}
				},
				{
					"id": 1042,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onWaitingCapture"
					}
				},
				{
					"id": 1111,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onWheel"
					}
				},
				{
					"id": 1112,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSelectElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.onWheelCapture"
					}
				},
				{
					"id": 879,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1832,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.placeholder"
					}
				},
				{
					"id": 891,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.prefix"
					}
				},
				{
					"id": 892,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.property"
					}
				},
				{
					"id": 886,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.radioGroup"
					}
				},
				{
					"id": 863,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2340,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.required"
					}
				},
				{
					"id": 893,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.resource"
					}
				},
				{
					"id": 905,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.results"
					}
				},
				{
					"id": 887,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.role"
					}
				},
				{
					"id": 906,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.security"
					}
				},
				{
					"id": 864,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2341,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.size"
					}
				},
				{
					"id": 880,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.slot"
					}
				},
				{
					"id": 881,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1834,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.spellCheck"
					}
				},
				{
					"id": 1124,
					"name": "startAdornment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Place a component so as to appear inside the TextInput start."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 849,
						"name": "InputBaseProps.startAdornment"
					}
				},
				{
					"id": 882,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1835,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.style"
					}
				},
				{
					"id": 869,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1819,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 870,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1820,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 883,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.tabIndex"
					}
				},
				{
					"id": 884,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.title"
					}
				},
				{
					"id": 1123,
					"name": "touched",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Triggers the Inputs stylable error state."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 848,
						"name": "InputBaseProps.touched"
					}
				},
				{
					"id": 885,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.translate"
					}
				},
				{
					"id": 894,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.typeof"
					}
				},
				{
					"id": 907,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.unselectable"
					}
				},
				{
					"id": 865,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2342,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.value"
					}
				},
				{
					"id": 1127,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Variant index."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 26,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "Variant"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 852,
						"name": "InputBaseProps.variant"
					}
				},
				{
					"id": 895,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1854,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.SelectHTMLAttributes.vocab"
					}
				},
				{
					"id": 1129,
					"name": "vol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "How loud should this input row be?"
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 35,
						"name": "Volume"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 854,
						"name": "InputBaseProps.vol"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						888,
						871,
						910,
						911,
						912,
						913,
						914,
						915,
						916,
						917,
						918,
						919,
						920,
						921,
						922,
						923,
						924,
						925,
						926,
						927,
						928,
						929,
						930,
						931,
						932,
						933,
						934,
						935,
						936,
						937,
						938,
						939,
						940,
						941,
						942,
						943,
						944,
						945,
						946,
						947,
						948,
						949,
						950,
						951,
						952,
						953,
						954,
						955,
						956,
						957,
						896,
						857,
						897,
						858,
						898,
						958,
						872,
						899,
						873,
						874,
						959,
						889,
						867,
						868,
						875,
						859,
						876,
						1125,
						1121,
						860,
						877,
						1122,
						856,
						890,
						908,
						909,
						903,
						900,
						904,
						901,
						902,
						1126,
						1128,
						878,
						861,
						862,
						999,
						1000,
						1115,
						1116,
						1117,
						1118,
						1113,
						1114,
						1043,
						1044,
						979,
						980,
						976,
						977,
						1001,
						1002,
						1003,
						1004,
						866,
						978,
						1045,
						1046,
						968,
						969,
						970,
						971,
						972,
						973,
						1047,
						1048,
						962,
						963,
						964,
						965,
						1049,
						1050,
						1051,
						1052,
						1053,
						1054,
						1055,
						1056,
						1057,
						1058,
						1059,
						1060,
						1061,
						1062,
						1063,
						1064,
						1065,
						1066,
						1005,
						1006,
						1007,
						1008,
						1009,
						1010,
						1011,
						1012,
						991,
						992,
						974,
						975,
						1105,
						1106,
						981,
						982,
						987,
						988,
						993,
						994,
						995,
						996,
						997,
						998,
						989,
						990,
						1017,
						1018,
						1013,
						1014,
						1015,
						1016,
						1107,
						1108,
						1067,
						1068,
						1069,
						1070,
						1071,
						1072,
						1073,
						1074,
						1075,
						1076,
						1077,
						1078,
						966,
						967,
						1019,
						1020,
						1021,
						1022,
						1023,
						1024,
						1095,
						1096,
						1089,
						1090,
						1097,
						1098,
						1099,
						1100,
						1091,
						1092,
						1103,
						1104,
						1101,
						1102,
						1093,
						1094,
						1025,
						1026,
						1027,
						1028,
						983,
						984,
						1109,
						1110,
						1029,
						1030,
						1031,
						1032,
						1079,
						1080,
						1033,
						1034,
						985,
						986,
						1035,
						1036,
						1037,
						1038,
						1081,
						1082,
						1083,
						1084,
						1085,
						1086,
						1087,
						1088,
						1119,
						1120,
						1039,
						1040,
						1041,
						1042,
						1111,
						1112,
						879,
						891,
						892,
						886,
						863,
						893,
						905,
						887,
						906,
						864,
						880,
						881,
						1124,
						882,
						869,
						870,
						883,
						884,
						1123,
						885,
						894,
						907,
						865,
						1127,
						895,
						1129
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/InputSelect/InputSelect.tsx",
					"line": 8,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLSelectElement"
						}
					],
					"name": "SelectHTMLAttributes"
				},
				{
					"type": "reference",
					"id": 845,
					"name": "InputBaseProps"
				}
			]
		},
		{
			"id": 1501,
			"name": "InputSelectionControlProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1630,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.about"
					}
				},
				{
					"id": 1504,
					"name": "accept",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.accept"
					}
				},
				{
					"id": 1505,
					"name": "acceptCharset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1886,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.acceptCharset"
					}
				},
				{
					"id": 1613,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1823,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.accessKey"
					}
				},
				{
					"id": 1506,
					"name": "action",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1887,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.action"
					}
				},
				{
					"id": 1507,
					"name": "allowFullScreen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1888,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.allowFullScreen"
					}
				},
				{
					"id": 1508,
					"name": "allowTransparency",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1889,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.allowTransparency"
					}
				},
				{
					"id": 1509,
					"name": "alt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1890,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.alt"
					}
				},
				{
					"id": 1652,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-activedescendant"
					}
				},
				{
					"id": 1653,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-atomic"
					}
				},
				{
					"id": 1654,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-autocomplete"
					}
				},
				{
					"id": 1655,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-busy"
					}
				},
				{
					"id": 1656,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-checked"
					}
				},
				{
					"id": 1657,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-colcount"
					}
				},
				{
					"id": 1658,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-colindex"
					}
				},
				{
					"id": 1659,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-colspan"
					}
				},
				{
					"id": 1660,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-controls"
					}
				},
				{
					"id": 1661,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-current"
					}
				},
				{
					"id": 1662,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-describedby"
					}
				},
				{
					"id": 1663,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-details"
					}
				},
				{
					"id": 1664,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-disabled"
					}
				},
				{
					"id": 1665,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-dropeffect"
					}
				},
				{
					"id": 1666,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-errormessage"
					}
				},
				{
					"id": 1667,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-expanded"
					}
				},
				{
					"id": 1668,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-flowto"
					}
				},
				{
					"id": 1669,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-grabbed"
					}
				},
				{
					"id": 1670,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-haspopup"
					}
				},
				{
					"id": 1671,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-hidden"
					}
				},
				{
					"id": 1672,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-invalid"
					}
				},
				{
					"id": 1673,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-keyshortcuts"
					}
				},
				{
					"id": 1674,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-label"
					}
				},
				{
					"id": 1675,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-labelledby"
					}
				},
				{
					"id": 1676,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-level"
					}
				},
				{
					"id": 1677,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-live"
					}
				},
				{
					"id": 1678,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-modal"
					}
				},
				{
					"id": 1679,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-multiline"
					}
				},
				{
					"id": 1680,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-multiselectable"
					}
				},
				{
					"id": 1681,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-orientation"
					}
				},
				{
					"id": 1682,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-owns"
					}
				},
				{
					"id": 1683,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-placeholder"
					}
				},
				{
					"id": 1684,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-posinset"
					}
				},
				{
					"id": 1685,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-pressed"
					}
				},
				{
					"id": 1686,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-readonly"
					}
				},
				{
					"id": 1687,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-relevant"
					}
				},
				{
					"id": 1688,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-required"
					}
				},
				{
					"id": 1689,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-roledescription"
					}
				},
				{
					"id": 1690,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-rowcount"
					}
				},
				{
					"id": 1691,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-rowindex"
					}
				},
				{
					"id": 1692,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-rowspan"
					}
				},
				{
					"id": 1693,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-selected"
					}
				},
				{
					"id": 1694,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-setsize"
					}
				},
				{
					"id": 1695,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-sort"
					}
				},
				{
					"id": 1696,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuemax"
					}
				},
				{
					"id": 1697,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuemin"
					}
				},
				{
					"id": 1698,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuenow"
					}
				},
				{
					"id": 1699,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuetext"
					}
				},
				{
					"id": 1510,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1891,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.as"
					}
				},
				{
					"id": 1511,
					"name": "async",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1892,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.async"
					}
				},
				{
					"id": 1638,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoCapitalize"
					}
				},
				{
					"id": 1512,
					"name": "autoComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1893,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoComplete"
					}
				},
				{
					"id": 1639,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoCorrect"
					}
				},
				{
					"id": 1513,
					"name": "autoFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1894,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoFocus"
					}
				},
				{
					"id": 1514,
					"name": "autoPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1895,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoPlay"
					}
				},
				{
					"id": 1640,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoSave"
					}
				},
				{
					"id": 1515,
					"name": "capture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1896,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.capture"
					}
				},
				{
					"id": 1516,
					"name": "cellPadding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1897,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cellPadding"
					}
				},
				{
					"id": 1517,
					"name": "cellSpacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1898,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cellSpacing"
					}
				},
				{
					"id": 1519,
					"name": "challenge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1900,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.challenge"
					}
				},
				{
					"id": 1518,
					"name": "charSet",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1899,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.charSet"
					}
				},
				{
					"id": 1520,
					"name": "checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1901,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.checked"
					}
				},
				{
					"id": 1700,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.children"
					}
				},
				{
					"id": 1521,
					"name": "cite",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1902,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cite"
					}
				},
				{
					"id": 1522,
					"name": "classID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1903,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.classID"
					}
				},
				{
					"id": 1614,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.className"
					}
				},
				{
					"id": 1524,
					"name": "colSpan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1905,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.colSpan"
					}
				},
				{
					"id": 1641,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.color"
					}
				},
				{
					"id": 1523,
					"name": "cols",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1904,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cols"
					}
				},
				{
					"id": 1525,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1906,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.content"
					}
				},
				{
					"id": 1615,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1825,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.contentEditable"
					}
				},
				{
					"id": 1616,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1826,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.contextMenu"
					}
				},
				{
					"id": 1526,
					"name": "controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1907,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.controls"
					}
				},
				{
					"id": 1527,
					"name": "coords",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1908,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.coords"
					}
				},
				{
					"id": 1528,
					"name": "crossOrigin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1909,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.crossOrigin"
					}
				},
				{
					"id": 1701,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1702,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1703,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1703
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 1529,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1910,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.data"
					}
				},
				{
					"id": 1631,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.datatype"
					}
				},
				{
					"id": 1530,
					"name": "dateTime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1911,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.dateTime"
					}
				},
				{
					"id": 1531,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1912,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.default"
					}
				},
				{
					"id": 1609,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1817,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.defaultChecked"
					}
				},
				{
					"id": 1610,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1818,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.defaultValue"
					}
				},
				{
					"id": 1532,
					"name": "defer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1913,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.defer"
					}
				},
				{
					"id": 1617,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1827,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.dir"
					}
				},
				{
					"id": 1533,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1914,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.disabled"
					}
				},
				{
					"id": 1534,
					"name": "download",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1915,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.download"
					}
				},
				{
					"id": 1618,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1828,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.draggable"
					}
				},
				{
					"id": 1535,
					"name": "encType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1916,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.encType"
					}
				},
				{
					"id": 1502,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide an error message that triggers the stylable error state."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelectionControl/InputSelectionControl.tsx",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1536,
					"name": "form",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1917,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.form"
					}
				},
				{
					"id": 1537,
					"name": "formAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1918,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formAction"
					}
				},
				{
					"id": 1538,
					"name": "formEncType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1919,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formEncType"
					}
				},
				{
					"id": 1539,
					"name": "formMethod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1920,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formMethod"
					}
				},
				{
					"id": 1540,
					"name": "formNoValidate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1921,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formNoValidate"
					}
				},
				{
					"id": 1541,
					"name": "formTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1922,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formTarget"
					}
				},
				{
					"id": 1542,
					"name": "frameBorder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1923,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.frameBorder"
					}
				},
				{
					"id": 1543,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1924,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.headers"
					}
				},
				{
					"id": 1544,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1925,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.height"
					}
				},
				{
					"id": 1619,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1829,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.hidden"
					}
				},
				{
					"id": 1545,
					"name": "high",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1926,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.high"
					}
				},
				{
					"id": 1546,
					"name": "href",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1927,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.href"
					}
				},
				{
					"id": 1547,
					"name": "hrefLang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1928,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.hrefLang"
					}
				},
				{
					"id": 1548,
					"name": "htmlFor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1929,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.htmlFor"
					}
				},
				{
					"id": 1549,
					"name": "httpEquiv",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1930,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.httpEquiv"
					}
				},
				{
					"id": 1620,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1830,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.id"
					}
				},
				{
					"id": 1632,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.inlist"
					}
				},
				{
					"id": 1650,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.inputMode"
					}
				},
				{
					"id": 1550,
					"name": "integrity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1931,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.integrity"
					}
				},
				{
					"id": 1651,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.is"
					}
				},
				{
					"id": 1645,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemID"
					}
				},
				{
					"id": 1642,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemProp"
					}
				},
				{
					"id": 1646,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemRef"
					}
				},
				{
					"id": 1643,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemScope"
					}
				},
				{
					"id": 1644,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemType"
					}
				},
				{
					"id": 1865,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 138,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Key"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.key"
					}
				},
				{
					"id": 1551,
					"name": "keyParams",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1932,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.keyParams"
					}
				},
				{
					"id": 1552,
					"name": "keyType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1933,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.keyType"
					}
				},
				{
					"id": 1553,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1934,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.kind"
					}
				},
				{
					"id": 1554,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1935,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.label"
					}
				},
				{
					"id": 1621,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.lang"
					}
				},
				{
					"id": 1555,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1936,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.list"
					}
				},
				{
					"id": 1556,
					"name": "loop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1937,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.loop"
					}
				},
				{
					"id": 1557,
					"name": "low",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1938,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.low"
					}
				},
				{
					"id": 1558,
					"name": "manifest",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1939,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.manifest"
					}
				},
				{
					"id": 1559,
					"name": "marginHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1940,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.marginHeight"
					}
				},
				{
					"id": 1560,
					"name": "marginWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1941,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.marginWidth"
					}
				},
				{
					"id": 1561,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1942,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.max"
					}
				},
				{
					"id": 1562,
					"name": "maxLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1943,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.maxLength"
					}
				},
				{
					"id": 1563,
					"name": "media",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1944,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.media"
					}
				},
				{
					"id": 1564,
					"name": "mediaGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1945,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.mediaGroup"
					}
				},
				{
					"id": 1565,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1946,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.method"
					}
				},
				{
					"id": 1566,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1947,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.min"
					}
				},
				{
					"id": 1567,
					"name": "minLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1948,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.minLength"
					}
				},
				{
					"id": 1568,
					"name": "multiple",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1949,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.multiple"
					}
				},
				{
					"id": 1569,
					"name": "muted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1950,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.muted"
					}
				},
				{
					"id": 1570,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1951,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.name"
					}
				},
				{
					"id": 1572,
					"name": "noValidate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1953,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.noValidate"
					}
				},
				{
					"id": 1571,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1952,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.nonce"
					}
				},
				{
					"id": 1742,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAbort"
					}
				},
				{
					"id": 1743,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAbortCapture"
					}
				},
				{
					"id": 1858,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationEnd"
					}
				},
				{
					"id": 1859,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationEndCapture"
					}
				},
				{
					"id": 1860,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationIteration"
					}
				},
				{
					"id": 1861,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationIterationCapture"
					}
				},
				{
					"id": 1856,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationStart"
					}
				},
				{
					"id": 1857,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationStartCapture"
					}
				},
				{
					"id": 1786,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAuxClick"
					}
				},
				{
					"id": 1787,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAuxClickCapture"
					}
				},
				{
					"id": 1722,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBeforeInput"
					}
				},
				{
					"id": 1723,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBeforeInputCapture"
					}
				},
				{
					"id": 1718,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBlur"
					}
				},
				{
					"id": 1719,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBlurCapture"
					}
				},
				{
					"id": 1744,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlay"
					}
				},
				{
					"id": 1745,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlayCapture"
					}
				},
				{
					"id": 1746,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlayThrough"
					}
				},
				{
					"id": 1747,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlayThroughCapture"
					}
				},
				{
					"id": 1720,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onChange"
					}
				},
				{
					"id": 1721,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onChangeCapture"
					}
				},
				{
					"id": 1788,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onClick"
					}
				},
				{
					"id": 1789,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onClickCapture"
					}
				},
				{
					"id": 1710,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionEnd"
					}
				},
				{
					"id": 1711,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionEndCapture"
					}
				},
				{
					"id": 1712,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionStart"
					}
				},
				{
					"id": 1713,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionStartCapture"
					}
				},
				{
					"id": 1714,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionUpdate"
					}
				},
				{
					"id": 1715,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionUpdateCapture"
					}
				},
				{
					"id": 1790,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onContextMenu"
					}
				},
				{
					"id": 1791,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onContextMenuCapture"
					}
				},
				{
					"id": 1704,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCopy"
					}
				},
				{
					"id": 1705,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCopyCapture"
					}
				},
				{
					"id": 1706,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCut"
					}
				},
				{
					"id": 1707,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCutCapture"
					}
				},
				{
					"id": 1792,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDoubleClick"
					}
				},
				{
					"id": 1793,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDoubleClickCapture"
					}
				},
				{
					"id": 1794,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDrag"
					}
				},
				{
					"id": 1795,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragCapture"
					}
				},
				{
					"id": 1796,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEnd"
					}
				},
				{
					"id": 1797,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEndCapture"
					}
				},
				{
					"id": 1798,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEnter"
					}
				},
				{
					"id": 1799,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEnterCapture"
					}
				},
				{
					"id": 1800,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragExit"
					}
				},
				{
					"id": 1801,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragExitCapture"
					}
				},
				{
					"id": 1802,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragLeave"
					}
				},
				{
					"id": 1803,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragLeaveCapture"
					}
				},
				{
					"id": 1804,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragOver"
					}
				},
				{
					"id": 1805,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragOverCapture"
					}
				},
				{
					"id": 1806,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragStart"
					}
				},
				{
					"id": 1807,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragStartCapture"
					}
				},
				{
					"id": 1808,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDrop"
					}
				},
				{
					"id": 1809,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDropCapture"
					}
				},
				{
					"id": 1748,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDurationChange"
					}
				},
				{
					"id": 1749,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDurationChangeCapture"
					}
				},
				{
					"id": 1750,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEmptied"
					}
				},
				{
					"id": 1751,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEmptiedCapture"
					}
				},
				{
					"id": 1752,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEncrypted"
					}
				},
				{
					"id": 1753,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEncryptedCapture"
					}
				},
				{
					"id": 1754,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEnded"
					}
				},
				{
					"id": 1755,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEndedCapture"
					}
				},
				{
					"id": 1734,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onError"
					}
				},
				{
					"id": 1735,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onErrorCapture"
					}
				},
				{
					"id": 1716,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onFocus"
					}
				},
				{
					"id": 1717,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onFocusCapture"
					}
				},
				{
					"id": 1848,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onGotPointerCapture"
					}
				},
				{
					"id": 1849,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 1724,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInput"
					}
				},
				{
					"id": 1725,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInputCapture"
					}
				},
				{
					"id": 1730,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInvalid"
					}
				},
				{
					"id": 1731,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInvalidCapture"
					}
				},
				{
					"id": 1736,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyDown"
					}
				},
				{
					"id": 1737,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyDownCapture"
					}
				},
				{
					"id": 1738,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyPress"
					}
				},
				{
					"id": 1739,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyPressCapture"
					}
				},
				{
					"id": 1740,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyUp"
					}
				},
				{
					"id": 1741,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyUpCapture"
					}
				},
				{
					"id": 1732,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoad"
					}
				},
				{
					"id": 1733,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadCapture"
					}
				},
				{
					"id": 1760,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadStart"
					}
				},
				{
					"id": 1761,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadStartCapture"
					}
				},
				{
					"id": 1756,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedData"
					}
				},
				{
					"id": 1757,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedDataCapture"
					}
				},
				{
					"id": 1758,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedMetadata"
					}
				},
				{
					"id": 1759,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedMetadataCapture"
					}
				},
				{
					"id": 1850,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLostPointerCapture"
					}
				},
				{
					"id": 1851,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 1810,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseDown"
					}
				},
				{
					"id": 1811,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseDownCapture"
					}
				},
				{
					"id": 1812,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseEnter"
					}
				},
				{
					"id": 1813,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseLeave"
					}
				},
				{
					"id": 1814,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseMove"
					}
				},
				{
					"id": 1815,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseMoveCapture"
					}
				},
				{
					"id": 1816,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOut"
					}
				},
				{
					"id": 1817,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOutCapture"
					}
				},
				{
					"id": 1818,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOver"
					}
				},
				{
					"id": 1819,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOverCapture"
					}
				},
				{
					"id": 1820,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseUp"
					}
				},
				{
					"id": 1821,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseUpCapture"
					}
				},
				{
					"id": 1708,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPaste"
					}
				},
				{
					"id": 1709,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPasteCapture"
					}
				},
				{
					"id": 1762,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPause"
					}
				},
				{
					"id": 1763,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPauseCapture"
					}
				},
				{
					"id": 1764,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlay"
					}
				},
				{
					"id": 1765,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlayCapture"
					}
				},
				{
					"id": 1766,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlaying"
					}
				},
				{
					"id": 1767,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlayingCapture"
					}
				},
				{
					"id": 1838,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerCancel"
					}
				},
				{
					"id": 1839,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerCancelCapture"
					}
				},
				{
					"id": 1832,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerDown"
					}
				},
				{
					"id": 1833,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerDownCapture"
					}
				},
				{
					"id": 1840,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerEnter"
					}
				},
				{
					"id": 1841,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerEnterCapture"
					}
				},
				{
					"id": 1842,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerLeave"
					}
				},
				{
					"id": 1843,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerLeaveCapture"
					}
				},
				{
					"id": 1834,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerMove"
					}
				},
				{
					"id": 1835,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerMoveCapture"
					}
				},
				{
					"id": 1846,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOut"
					}
				},
				{
					"id": 1847,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOutCapture"
					}
				},
				{
					"id": 1844,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOver"
					}
				},
				{
					"id": 1845,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOverCapture"
					}
				},
				{
					"id": 1836,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerUp"
					}
				},
				{
					"id": 1837,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerUpCapture"
					}
				},
				{
					"id": 1768,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onProgress"
					}
				},
				{
					"id": 1769,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onProgressCapture"
					}
				},
				{
					"id": 1770,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onRateChange"
					}
				},
				{
					"id": 1771,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onRateChangeCapture"
					}
				},
				{
					"id": 1726,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onReset"
					}
				},
				{
					"id": 1727,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onResetCapture"
					}
				},
				{
					"id": 1852,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onScroll"
					}
				},
				{
					"id": 1853,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onScrollCapture"
					}
				},
				{
					"id": 1772,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeeked"
					}
				},
				{
					"id": 1773,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeekedCapture"
					}
				},
				{
					"id": 1774,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeeking"
					}
				},
				{
					"id": 1775,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeekingCapture"
					}
				},
				{
					"id": 1822,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSelect"
					}
				},
				{
					"id": 1823,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSelectCapture"
					}
				},
				{
					"id": 1776,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onStalled"
					}
				},
				{
					"id": 1777,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onStalledCapture"
					}
				},
				{
					"id": 1728,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSubmit"
					}
				},
				{
					"id": 1729,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSubmitCapture"
					}
				},
				{
					"id": 1778,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSuspend"
					}
				},
				{
					"id": 1779,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSuspendCapture"
					}
				},
				{
					"id": 1780,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTimeUpdate"
					}
				},
				{
					"id": 1781,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTimeUpdateCapture"
					}
				},
				{
					"id": 1824,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchCancel"
					}
				},
				{
					"id": 1825,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchCancelCapture"
					}
				},
				{
					"id": 1826,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchEnd"
					}
				},
				{
					"id": 1827,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchEndCapture"
					}
				},
				{
					"id": 1828,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchMove"
					}
				},
				{
					"id": 1829,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchMoveCapture"
					}
				},
				{
					"id": 1830,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchStart"
					}
				},
				{
					"id": 1831,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchStartCapture"
					}
				},
				{
					"id": 1862,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTransitionEnd"
					}
				},
				{
					"id": 1863,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTransitionEndCapture"
					}
				},
				{
					"id": 1782,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onVolumeChange"
					}
				},
				{
					"id": 1783,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onVolumeChangeCapture"
					}
				},
				{
					"id": 1784,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWaiting"
					}
				},
				{
					"id": 1785,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWaitingCapture"
					}
				},
				{
					"id": 1854,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWheel"
					}
				},
				{
					"id": 1855,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWheelCapture"
					}
				},
				{
					"id": 1573,
					"name": "open",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1954,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.open"
					}
				},
				{
					"id": 1574,
					"name": "optimum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1955,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.optimum"
					}
				},
				{
					"id": 1575,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1956,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.pattern"
					}
				},
				{
					"id": 1576,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1957,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.placeholder"
					}
				},
				{
					"id": 1577,
					"name": "playsInline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1958,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.playsInline"
					}
				},
				{
					"id": 1578,
					"name": "poster",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1959,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.poster"
					}
				},
				{
					"id": 1633,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.prefix"
					}
				},
				{
					"id": 1579,
					"name": "preload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1960,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.preload"
					}
				},
				{
					"id": 1634,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.property"
					}
				},
				{
					"id": 1628,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.radioGroup"
					}
				},
				{
					"id": 1580,
					"name": "readOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1961,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.readOnly"
					}
				},
				{
					"id": 1864,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 144,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "LegacyRef"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.ref"
					}
				},
				{
					"id": 1581,
					"name": "rel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1962,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.rel"
					}
				},
				{
					"id": 1582,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1963,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.required"
					}
				},
				{
					"id": 1635,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.resource"
					}
				},
				{
					"id": 1647,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.results"
					}
				},
				{
					"id": 1583,
					"name": "reversed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1964,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.reversed"
					}
				},
				{
					"id": 1629,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.role"
					}
				},
				{
					"id": 1585,
					"name": "rowSpan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1966,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.rowSpan"
					}
				},
				{
					"id": 1584,
					"name": "rows",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1965,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.rows"
					}
				},
				{
					"id": 1586,
					"name": "sandbox",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1967,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.sandbox"
					}
				},
				{
					"id": 1587,
					"name": "scope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1968,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.scope"
					}
				},
				{
					"id": 1588,
					"name": "scoped",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1969,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.scoped"
					}
				},
				{
					"id": 1589,
					"name": "scrolling",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1970,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.scrolling"
					}
				},
				{
					"id": 1590,
					"name": "seamless",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1971,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.seamless"
					}
				},
				{
					"id": 1648,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.security"
					}
				},
				{
					"id": 1591,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1972,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.selected"
					}
				},
				{
					"id": 1592,
					"name": "shape",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1973,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.shape"
					}
				},
				{
					"id": 1593,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1974,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.size"
					}
				},
				{
					"id": 1594,
					"name": "sizes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1975,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.sizes"
					}
				},
				{
					"id": 1622,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.slot"
					}
				},
				{
					"id": 1595,
					"name": "span",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1976,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.span"
					}
				},
				{
					"id": 1623,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1834,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.spellCheck"
					}
				},
				{
					"id": 1596,
					"name": "src",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1977,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.src"
					}
				},
				{
					"id": 1597,
					"name": "srcDoc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1978,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.srcDoc"
					}
				},
				{
					"id": 1598,
					"name": "srcLang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1979,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.srcLang"
					}
				},
				{
					"id": 1599,
					"name": "srcSet",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1980,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.srcSet"
					}
				},
				{
					"id": 1600,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1981,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.start"
					}
				},
				{
					"id": 1601,
					"name": "step",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1982,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.step"
					}
				},
				{
					"id": 1624,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1835,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.style"
					}
				},
				{
					"id": 1602,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1983,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.summary"
					}
				},
				{
					"id": 1611,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1819,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.suppressContentEditableWarning"
					}
				},
				{
					"id": 1612,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1820,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.suppressHydrationWarning"
					}
				},
				{
					"id": 1625,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.tabIndex"
					}
				},
				{
					"id": 1603,
					"name": "target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1984,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.target"
					}
				},
				{
					"id": 1626,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.title"
					}
				},
				{
					"id": 1627,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.translate"
					}
				},
				{
					"id": 1503,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The type of slection control to render."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelectionControl/InputSelectionControl.tsx",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 38,
						"name": "SelectionControlType"
					},
					"overwrites": {
						"type": "reference",
						"name": "React.HTMLProps.type"
					}
				},
				{
					"id": 1636,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.typeof"
					}
				},
				{
					"id": 1649,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.unselectable"
					}
				},
				{
					"id": 1604,
					"name": "useMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1986,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.useMap"
					}
				},
				{
					"id": 1605,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1987,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.value"
					}
				},
				{
					"id": 1637,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1854,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.vocab"
					}
				},
				{
					"id": 1606,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1988,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.width"
					}
				},
				{
					"id": 1607,
					"name": "wmode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1989,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.wmode"
					}
				},
				{
					"id": 1608,
					"name": "wrap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1990,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.wrap"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1630,
						1504,
						1505,
						1613,
						1506,
						1507,
						1508,
						1509,
						1652,
						1653,
						1654,
						1655,
						1656,
						1657,
						1658,
						1659,
						1660,
						1661,
						1662,
						1663,
						1664,
						1665,
						1666,
						1667,
						1668,
						1669,
						1670,
						1671,
						1672,
						1673,
						1674,
						1675,
						1676,
						1677,
						1678,
						1679,
						1680,
						1681,
						1682,
						1683,
						1684,
						1685,
						1686,
						1687,
						1688,
						1689,
						1690,
						1691,
						1692,
						1693,
						1694,
						1695,
						1696,
						1697,
						1698,
						1699,
						1510,
						1511,
						1638,
						1512,
						1639,
						1513,
						1514,
						1640,
						1515,
						1516,
						1517,
						1519,
						1518,
						1520,
						1700,
						1521,
						1522,
						1614,
						1524,
						1641,
						1523,
						1525,
						1615,
						1616,
						1526,
						1527,
						1528,
						1701,
						1529,
						1631,
						1530,
						1531,
						1609,
						1610,
						1532,
						1617,
						1533,
						1534,
						1618,
						1535,
						1502,
						1536,
						1537,
						1538,
						1539,
						1540,
						1541,
						1542,
						1543,
						1544,
						1619,
						1545,
						1546,
						1547,
						1548,
						1549,
						1620,
						1632,
						1650,
						1550,
						1651,
						1645,
						1642,
						1646,
						1643,
						1644,
						1865,
						1551,
						1552,
						1553,
						1554,
						1621,
						1555,
						1556,
						1557,
						1558,
						1559,
						1560,
						1561,
						1562,
						1563,
						1564,
						1565,
						1566,
						1567,
						1568,
						1569,
						1570,
						1572,
						1571,
						1742,
						1743,
						1858,
						1859,
						1860,
						1861,
						1856,
						1857,
						1786,
						1787,
						1722,
						1723,
						1718,
						1719,
						1744,
						1745,
						1746,
						1747,
						1720,
						1721,
						1788,
						1789,
						1710,
						1711,
						1712,
						1713,
						1714,
						1715,
						1790,
						1791,
						1704,
						1705,
						1706,
						1707,
						1792,
						1793,
						1794,
						1795,
						1796,
						1797,
						1798,
						1799,
						1800,
						1801,
						1802,
						1803,
						1804,
						1805,
						1806,
						1807,
						1808,
						1809,
						1748,
						1749,
						1750,
						1751,
						1752,
						1753,
						1754,
						1755,
						1734,
						1735,
						1716,
						1717,
						1848,
						1849,
						1724,
						1725,
						1730,
						1731,
						1736,
						1737,
						1738,
						1739,
						1740,
						1741,
						1732,
						1733,
						1760,
						1761,
						1756,
						1757,
						1758,
						1759,
						1850,
						1851,
						1810,
						1811,
						1812,
						1813,
						1814,
						1815,
						1816,
						1817,
						1818,
						1819,
						1820,
						1821,
						1708,
						1709,
						1762,
						1763,
						1764,
						1765,
						1766,
						1767,
						1838,
						1839,
						1832,
						1833,
						1840,
						1841,
						1842,
						1843,
						1834,
						1835,
						1846,
						1847,
						1844,
						1845,
						1836,
						1837,
						1768,
						1769,
						1770,
						1771,
						1726,
						1727,
						1852,
						1853,
						1772,
						1773,
						1774,
						1775,
						1822,
						1823,
						1776,
						1777,
						1728,
						1729,
						1778,
						1779,
						1780,
						1781,
						1824,
						1825,
						1826,
						1827,
						1828,
						1829,
						1830,
						1831,
						1862,
						1863,
						1782,
						1783,
						1784,
						1785,
						1854,
						1855,
						1573,
						1574,
						1575,
						1576,
						1577,
						1578,
						1633,
						1579,
						1634,
						1628,
						1580,
						1864,
						1581,
						1582,
						1635,
						1647,
						1583,
						1629,
						1585,
						1584,
						1586,
						1587,
						1588,
						1589,
						1590,
						1648,
						1591,
						1592,
						1593,
						1594,
						1622,
						1595,
						1623,
						1596,
						1597,
						1598,
						1599,
						1600,
						1601,
						1624,
						1602,
						1611,
						1612,
						1625,
						1603,
						1626,
						1627,
						1503,
						1636,
						1649,
						1604,
						1605,
						1637,
						1606,
						1607,
						1608
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/InputSelectionControl/InputSelectionControl.tsx",
					"line": 7,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLInputElement"
						}
					],
					"name": "HTMLProps"
				}
			]
		},
		{
			"id": 1130,
			"name": "InputSelectionProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "HTMLInputElement has a 'label' attribute apparently; so replacing it."
			},
			"children": [
				{
					"id": 1400,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.about"
					}
				},
				{
					"id": 1461,
					"name": "accept",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.accept"
					}
				},
				{
					"id": 1443,
					"name": "acceptCharset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1886,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.acceptCharset"
					}
				},
				{
					"id": 1390,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1823,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.accessKey"
					}
				},
				{
					"id": 1444,
					"name": "action",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1887,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.action"
					}
				},
				{
					"id": 1449,
					"name": "allowFullScreen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1888,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.allowFullScreen"
					}
				},
				{
					"id": 1450,
					"name": "allowTransparency",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1889,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.allowTransparency"
					}
				},
				{
					"id": 1423,
					"name": "alt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1890,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.alt"
					}
				},
				{
					"id": 1182,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-activedescendant"
					}
				},
				{
					"id": 1183,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-atomic"
					}
				},
				{
					"id": 1184,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-autocomplete"
					}
				},
				{
					"id": 1185,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-busy"
					}
				},
				{
					"id": 1186,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-checked"
					}
				},
				{
					"id": 1187,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-colcount"
					}
				},
				{
					"id": 1188,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-colindex"
					}
				},
				{
					"id": 1189,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-colspan"
					}
				},
				{
					"id": 1163,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-controls"
					}
				},
				{
					"id": 1190,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-current"
					}
				},
				{
					"id": 1167,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-describedby"
					}
				},
				{
					"id": 1168,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-details"
					}
				},
				{
					"id": 1191,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-disabled"
					}
				},
				{
					"id": 1192,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-dropeffect"
					}
				},
				{
					"id": 1193,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-errormessage"
					}
				},
				{
					"id": 1161,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-expanded"
					}
				},
				{
					"id": 1194,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-flowto"
					}
				},
				{
					"id": 1195,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-grabbed"
					}
				},
				{
					"id": 1162,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-haspopup"
					}
				},
				{
					"id": 1196,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-hidden"
					}
				},
				{
					"id": 1197,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-invalid"
					}
				},
				{
					"id": 1198,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-keyshortcuts"
					}
				},
				{
					"id": 1165,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-label"
					}
				},
				{
					"id": 1166,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-labelledby"
					}
				},
				{
					"id": 1199,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-level"
					}
				},
				{
					"id": 1200,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-live"
					}
				},
				{
					"id": 1201,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-modal"
					}
				},
				{
					"id": 1202,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-multiline"
					}
				},
				{
					"id": 1203,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-multiselectable"
					}
				},
				{
					"id": 1204,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-orientation"
					}
				},
				{
					"id": 1205,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-owns"
					}
				},
				{
					"id": 1206,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-placeholder"
					}
				},
				{
					"id": 1207,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-posinset"
					}
				},
				{
					"id": 1164,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-pressed"
					}
				},
				{
					"id": 1208,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-readonly"
					}
				},
				{
					"id": 1209,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-relevant"
					}
				},
				{
					"id": 1210,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-required"
					}
				},
				{
					"id": 1211,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-roledescription"
					}
				},
				{
					"id": 1212,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-rowcount"
					}
				},
				{
					"id": 1213,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-rowindex"
					}
				},
				{
					"id": 1214,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-rowspan"
					}
				},
				{
					"id": 1215,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-selected"
					}
				},
				{
					"id": 1216,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-setsize"
					}
				},
				{
					"id": 1217,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-sort"
					}
				},
				{
					"id": 1218,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuemax"
					}
				},
				{
					"id": 1219,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuemin"
					}
				},
				{
					"id": 1220,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuenow"
					}
				},
				{
					"id": 1221,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuetext"
					}
				},
				{
					"id": 1151,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1891,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.as"
					}
				},
				{
					"id": 1460,
					"name": "async",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1892,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.async"
					}
				},
				{
					"id": 1408,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoCapitalize"
					}
				},
				{
					"id": 1445,
					"name": "autoComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1893,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoComplete"
					}
				},
				{
					"id": 1409,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoCorrect"
					}
				},
				{
					"id": 1153,
					"name": "autoFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1894,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoFocus"
					}
				},
				{
					"id": 1426,
					"name": "autoPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1895,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoPlay"
					}
				},
				{
					"id": 1410,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoSave"
					}
				},
				{
					"id": 1462,
					"name": "capture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1896,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.capture"
					}
				},
				{
					"id": 1488,
					"name": "cellPadding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1897,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.cellPadding"
					}
				},
				{
					"id": 1489,
					"name": "cellSpacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1898,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.cellSpacing"
					}
				},
				{
					"id": 1471,
					"name": "challenge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1900,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.challenge"
					}
				},
				{
					"id": 1476,
					"name": "charSet",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1899,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.charSet"
					}
				},
				{
					"id": 1463,
					"name": "checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1901,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.checked"
					}
				},
				{
					"id": 1152,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.children"
					}
				},
				{
					"id": 1142,
					"name": "cite",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1902,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.cite"
					}
				},
				{
					"id": 1383,
					"name": "classID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1903,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.classID"
					}
				},
				{
					"id": 1169,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.className"
					}
				},
				{
					"id": 1490,
					"name": "colSpan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1905,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.colSpan"
					}
				},
				{
					"id": 1170,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.color"
					}
				},
				{
					"id": 1494,
					"name": "cols",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1904,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.cols"
					}
				},
				{
					"id": 1477,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1906,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.content"
					}
				},
				{
					"id": 1391,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1825,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.contentEditable"
					}
				},
				{
					"id": 1392,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1826,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.contextMenu"
					}
				},
				{
					"id": 1427,
					"name": "controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1907,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.controls"
					}
				},
				{
					"id": 1424,
					"name": "coords",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1908,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.coords"
					}
				},
				{
					"id": 1181,
					"name": "crossOrigin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1909,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.crossOrigin"
					}
				},
				{
					"id": 1222,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1223,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1224,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1224
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 1143,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1910,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.data"
					}
				},
				{
					"id": 1401,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.datatype"
					}
				},
				{
					"id": 1441,
					"name": "dateTime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1911,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.dateTime"
					}
				},
				{
					"id": 1497,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1912,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.default"
					}
				},
				{
					"id": 1386,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1817,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.defaultChecked"
					}
				},
				{
					"id": 1387,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1818,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.defaultValue"
					}
				},
				{
					"id": 1485,
					"name": "defer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1913,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.defer"
					}
				},
				{
					"id": 1393,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1827,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.dir"
					}
				},
				{
					"id": 1434,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1914,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.disabled"
					}
				},
				{
					"id": 1421,
					"name": "download",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1915,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.download"
					}
				},
				{
					"id": 1394,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1828,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.draggable"
					}
				},
				{
					"id": 1446,
					"name": "encType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1916,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.encType"
					}
				},
				{
					"id": 1132,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide an error message that triggers the stylable error state."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelection/InputSelection.tsx",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 1144,
					"name": "form",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1917,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.form"
					}
				},
				{
					"id": 1435,
					"name": "formAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1918,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.formAction"
					}
				},
				{
					"id": 1436,
					"name": "formEncType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1919,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.formEncType"
					}
				},
				{
					"id": 1437,
					"name": "formMethod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1920,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.formMethod"
					}
				},
				{
					"id": 1438,
					"name": "formNoValidate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1921,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.formNoValidate"
					}
				},
				{
					"id": 1439,
					"name": "formTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1922,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.formTarget"
					}
				},
				{
					"id": 1451,
					"name": "frameBorder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1923,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.frameBorder"
					}
				},
				{
					"id": 1491,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1924,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.headers"
					}
				},
				{
					"id": 1171,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1925,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.height"
					}
				},
				{
					"id": 1395,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1829,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.hidden"
					}
				},
				{
					"id": 1479,
					"name": "high",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1926,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.high"
					}
				},
				{
					"id": 1133,
					"name": "hint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide some hint text to the label component."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelection/InputSelection.tsx",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 1158,
					"name": "href",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1927,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.href"
					}
				},
				{
					"id": 1422,
					"name": "hrefLang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1928,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.hrefLang"
					}
				},
				{
					"id": 1474,
					"name": "htmlFor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1929,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.htmlFor"
					}
				},
				{
					"id": 1478,
					"name": "httpEquiv",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1930,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.httpEquiv"
					}
				},
				{
					"id": 1131,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Id is required to associate fields with labels programatically for better UX and a legal requirement for accessibility"
					},
					"sources": [
						{
							"fileName": "src/components/InputSelection/InputSelection.tsx",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "Pick.id"
					}
				},
				{
					"id": 1402,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.inlist"
					}
				},
				{
					"id": 1419,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.inputMode"
					}
				},
				{
					"id": 1137,
					"name": "inputPos",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The position of the label relative to the label."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelection/InputSelection.tsx",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 31,
						"name": "AlignPos"
					}
				},
				{
					"id": 1475,
					"name": "integrity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1931,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.integrity"
					}
				},
				{
					"id": 1420,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.is"
					}
				},
				{
					"id": 1414,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.itemID"
					}
				},
				{
					"id": 1411,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.itemProp"
					}
				},
				{
					"id": 1415,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.itemRef"
					}
				},
				{
					"id": 1412,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.itemScope"
					}
				},
				{
					"id": 1413,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.itemType"
					}
				},
				{
					"id": 1381,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 138,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Key"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.key"
					}
				},
				{
					"id": 1473,
					"name": "keyParams",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1932,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.keyParams"
					}
				},
				{
					"id": 1472,
					"name": "keyType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1933,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.keyType"
					}
				},
				{
					"id": 1498,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1934,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.kind"
					}
				},
				{
					"id": 1136,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The label to associated with the input."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelection/InputSelection.tsx",
							"line": 26,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 1138,
					"name": "labelVisuallyHidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Visually hide the label so it is still accessible to assistive technologies."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelection/InputSelection.tsx",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1172,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.lang"
					}
				},
				{
					"id": 1382,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1936,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.list"
					}
				},
				{
					"id": 1428,
					"name": "loop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1937,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.loop"
					}
				},
				{
					"id": 1480,
					"name": "low",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1938,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.low"
					}
				},
				{
					"id": 1448,
					"name": "manifest",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1939,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.manifest"
					}
				},
				{
					"id": 1452,
					"name": "marginHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1940,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.marginHeight"
					}
				},
				{
					"id": 1453,
					"name": "marginWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1941,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.marginWidth"
					}
				},
				{
					"id": 1173,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1942,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.max"
					}
				},
				{
					"id": 1464,
					"name": "maxLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1943,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.maxLength"
					}
				},
				{
					"id": 1174,
					"name": "media",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1944,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.media"
					}
				},
				{
					"id": 1429,
					"name": "mediaGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1945,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.mediaGroup"
					}
				},
				{
					"id": 1175,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1946,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.method"
					}
				},
				{
					"id": 1176,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1947,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.min"
					}
				},
				{
					"id": 1465,
					"name": "minLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1948,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.minLength"
					}
				},
				{
					"id": 1466,
					"name": "multiple",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1949,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.multiple"
					}
				},
				{
					"id": 1430,
					"name": "muted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1950,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.muted"
					}
				},
				{
					"id": 1177,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1951,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.name"
					}
				},
				{
					"id": 1447,
					"name": "noValidate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1953,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.noValidate"
					}
				},
				{
					"id": 1486,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1952,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.nonce"
					}
				},
				{
					"id": 1259,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAbort"
					}
				},
				{
					"id": 1260,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAbortCapture"
					}
				},
				{
					"id": 1375,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationEnd"
					}
				},
				{
					"id": 1376,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationEndCapture"
					}
				},
				{
					"id": 1377,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationIteration"
					}
				},
				{
					"id": 1378,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationIterationCapture"
					}
				},
				{
					"id": 1373,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationStart"
					}
				},
				{
					"id": 1374,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationStartCapture"
					}
				},
				{
					"id": 1303,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAuxClick"
					}
				},
				{
					"id": 1304,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAuxClickCapture"
					}
				},
				{
					"id": 1241,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBeforeInput"
					}
				},
				{
					"id": 1242,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBeforeInputCapture"
					}
				},
				{
					"id": 1155,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBlur"
					}
				},
				{
					"id": 1238,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBlurCapture"
					}
				},
				{
					"id": 1261,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlay"
					}
				},
				{
					"id": 1262,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlayCapture"
					}
				},
				{
					"id": 1263,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlayThrough"
					}
				},
				{
					"id": 1264,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlayThroughCapture"
					}
				},
				{
					"id": 1239,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onChange"
					}
				},
				{
					"id": 1240,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onChangeCapture"
					}
				},
				{
					"id": 1305,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onClick"
					}
				},
				{
					"id": 1306,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onClickCapture"
					}
				},
				{
					"id": 1231,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionEnd"
					}
				},
				{
					"id": 1232,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionEndCapture"
					}
				},
				{
					"id": 1233,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionStart"
					}
				},
				{
					"id": 1234,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionStartCapture"
					}
				},
				{
					"id": 1235,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionUpdate"
					}
				},
				{
					"id": 1236,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionUpdateCapture"
					}
				},
				{
					"id": 1307,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onContextMenu"
					}
				},
				{
					"id": 1308,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onContextMenuCapture"
					}
				},
				{
					"id": 1225,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCopy"
					}
				},
				{
					"id": 1226,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCopyCapture"
					}
				},
				{
					"id": 1227,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCut"
					}
				},
				{
					"id": 1228,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCutCapture"
					}
				},
				{
					"id": 1309,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDoubleClick"
					}
				},
				{
					"id": 1310,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDoubleClickCapture"
					}
				},
				{
					"id": 1311,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDrag"
					}
				},
				{
					"id": 1312,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragCapture"
					}
				},
				{
					"id": 1313,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEnd"
					}
				},
				{
					"id": 1314,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEndCapture"
					}
				},
				{
					"id": 1315,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEnter"
					}
				},
				{
					"id": 1316,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEnterCapture"
					}
				},
				{
					"id": 1317,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragExit"
					}
				},
				{
					"id": 1318,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragExitCapture"
					}
				},
				{
					"id": 1319,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragLeave"
					}
				},
				{
					"id": 1320,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragLeaveCapture"
					}
				},
				{
					"id": 1321,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragOver"
					}
				},
				{
					"id": 1322,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragOverCapture"
					}
				},
				{
					"id": 1323,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragStart"
					}
				},
				{
					"id": 1324,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragStartCapture"
					}
				},
				{
					"id": 1325,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDrop"
					}
				},
				{
					"id": 1326,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDropCapture"
					}
				},
				{
					"id": 1265,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDurationChange"
					}
				},
				{
					"id": 1266,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDurationChangeCapture"
					}
				},
				{
					"id": 1267,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEmptied"
					}
				},
				{
					"id": 1268,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEmptiedCapture"
					}
				},
				{
					"id": 1269,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEncrypted"
					}
				},
				{
					"id": 1270,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEncryptedCapture"
					}
				},
				{
					"id": 1271,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEnded"
					}
				},
				{
					"id": 1272,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEndedCapture"
					}
				},
				{
					"id": 1253,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onError"
					}
				},
				{
					"id": 1254,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onErrorCapture"
					}
				},
				{
					"id": 1154,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onFocus"
					}
				},
				{
					"id": 1237,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onFocusCapture"
					}
				},
				{
					"id": 1365,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onGotPointerCapture"
					}
				},
				{
					"id": 1366,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 1243,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInput"
					}
				},
				{
					"id": 1244,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInputCapture"
					}
				},
				{
					"id": 1249,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInvalid"
					}
				},
				{
					"id": 1250,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInvalidCapture"
					}
				},
				{
					"id": 1156,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyDown"
					}
				},
				{
					"id": 1255,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyDownCapture"
					}
				},
				{
					"id": 1256,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyPress"
					}
				},
				{
					"id": 1257,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyPressCapture"
					}
				},
				{
					"id": 1157,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyUp"
					}
				},
				{
					"id": 1258,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyUpCapture"
					}
				},
				{
					"id": 1251,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoad"
					}
				},
				{
					"id": 1252,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadCapture"
					}
				},
				{
					"id": 1277,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadStart"
					}
				},
				{
					"id": 1278,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadStartCapture"
					}
				},
				{
					"id": 1273,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedData"
					}
				},
				{
					"id": 1274,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedDataCapture"
					}
				},
				{
					"id": 1275,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedMetadata"
					}
				},
				{
					"id": 1276,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedMetadataCapture"
					}
				},
				{
					"id": 1367,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLostPointerCapture"
					}
				},
				{
					"id": 1368,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 1327,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseDown"
					}
				},
				{
					"id": 1328,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseDownCapture"
					}
				},
				{
					"id": 1329,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseEnter"
					}
				},
				{
					"id": 1330,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseLeave"
					}
				},
				{
					"id": 1331,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseMove"
					}
				},
				{
					"id": 1332,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseMoveCapture"
					}
				},
				{
					"id": 1333,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOut"
					}
				},
				{
					"id": 1334,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOutCapture"
					}
				},
				{
					"id": 1335,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOver"
					}
				},
				{
					"id": 1336,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOverCapture"
					}
				},
				{
					"id": 1337,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseUp"
					}
				},
				{
					"id": 1338,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseUpCapture"
					}
				},
				{
					"id": 1229,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPaste"
					}
				},
				{
					"id": 1230,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPasteCapture"
					}
				},
				{
					"id": 1279,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPause"
					}
				},
				{
					"id": 1280,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPauseCapture"
					}
				},
				{
					"id": 1281,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlay"
					}
				},
				{
					"id": 1282,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlayCapture"
					}
				},
				{
					"id": 1283,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlaying"
					}
				},
				{
					"id": 1284,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlayingCapture"
					}
				},
				{
					"id": 1355,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerCancel"
					}
				},
				{
					"id": 1356,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerCancelCapture"
					}
				},
				{
					"id": 1349,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerDown"
					}
				},
				{
					"id": 1350,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerDownCapture"
					}
				},
				{
					"id": 1357,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerEnter"
					}
				},
				{
					"id": 1358,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerEnterCapture"
					}
				},
				{
					"id": 1359,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerLeave"
					}
				},
				{
					"id": 1360,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerLeaveCapture"
					}
				},
				{
					"id": 1351,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerMove"
					}
				},
				{
					"id": 1352,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerMoveCapture"
					}
				},
				{
					"id": 1363,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOut"
					}
				},
				{
					"id": 1364,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOutCapture"
					}
				},
				{
					"id": 1361,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOver"
					}
				},
				{
					"id": 1362,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOverCapture"
					}
				},
				{
					"id": 1353,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerUp"
					}
				},
				{
					"id": 1354,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerUpCapture"
					}
				},
				{
					"id": 1285,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onProgress"
					}
				},
				{
					"id": 1286,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onProgressCapture"
					}
				},
				{
					"id": 1287,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onRateChange"
					}
				},
				{
					"id": 1288,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onRateChangeCapture"
					}
				},
				{
					"id": 1245,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onReset"
					}
				},
				{
					"id": 1246,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onResetCapture"
					}
				},
				{
					"id": 1369,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onScroll"
					}
				},
				{
					"id": 1370,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onScrollCapture"
					}
				},
				{
					"id": 1289,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeeked"
					}
				},
				{
					"id": 1290,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeekedCapture"
					}
				},
				{
					"id": 1291,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeeking"
					}
				},
				{
					"id": 1292,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeekingCapture"
					}
				},
				{
					"id": 1339,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSelect"
					}
				},
				{
					"id": 1340,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSelectCapture"
					}
				},
				{
					"id": 1293,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onStalled"
					}
				},
				{
					"id": 1294,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onStalledCapture"
					}
				},
				{
					"id": 1247,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSubmit"
					}
				},
				{
					"id": 1248,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSubmitCapture"
					}
				},
				{
					"id": 1295,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSuspend"
					}
				},
				{
					"id": 1296,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSuspendCapture"
					}
				},
				{
					"id": 1297,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTimeUpdate"
					}
				},
				{
					"id": 1298,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTimeUpdateCapture"
					}
				},
				{
					"id": 1341,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchCancel"
					}
				},
				{
					"id": 1342,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchCancelCapture"
					}
				},
				{
					"id": 1343,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchEnd"
					}
				},
				{
					"id": 1344,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchEndCapture"
					}
				},
				{
					"id": 1345,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchMove"
					}
				},
				{
					"id": 1346,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchMoveCapture"
					}
				},
				{
					"id": 1347,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchStart"
					}
				},
				{
					"id": 1348,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchStartCapture"
					}
				},
				{
					"id": 1379,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTransitionEnd"
					}
				},
				{
					"id": 1380,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTransitionEndCapture"
					}
				},
				{
					"id": 1299,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onVolumeChange"
					}
				},
				{
					"id": 1300,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onVolumeChangeCapture"
					}
				},
				{
					"id": 1301,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWaiting"
					}
				},
				{
					"id": 1302,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWaitingCapture"
					}
				},
				{
					"id": 1371,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWheel"
					}
				},
				{
					"id": 1372,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWheelCapture"
					}
				},
				{
					"id": 1442,
					"name": "open",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1954,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.open"
					}
				},
				{
					"id": 1481,
					"name": "optimum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1955,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.optimum"
					}
				},
				{
					"id": 1150,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1956,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.pattern"
					}
				},
				{
					"id": 1396,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1957,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.placeholder"
					}
				},
				{
					"id": 1431,
					"name": "playsInline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1958,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.playsInline"
					}
				},
				{
					"id": 1500,
					"name": "poster",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1959,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.poster"
					}
				},
				{
					"id": 1403,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.prefix"
					}
				},
				{
					"id": 1432,
					"name": "preload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1960,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.preload"
					}
				},
				{
					"id": 1404,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.property"
					}
				},
				{
					"id": 1399,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.radioGroup"
					}
				},
				{
					"id": 1467,
					"name": "readOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1961,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.readOnly"
					}
				},
				{
					"id": 1141,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Not entirely sure why this needs to ne defined... Investigate."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelection/InputSelection.tsx",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "Ref"
					},
					"overwrites": {
						"type": "reference",
						"name": "Pick.ref"
					}
				},
				{
					"id": 1160,
					"name": "rel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1962,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.rel"
					}
				},
				{
					"id": 1468,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1963,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.required"
					}
				},
				{
					"id": 1405,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.resource"
					}
				},
				{
					"id": 1416,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.results"
					}
				},
				{
					"id": 1482,
					"name": "reversed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1964,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.reversed"
					}
				},
				{
					"id": 1179,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.role"
					}
				},
				{
					"id": 1492,
					"name": "rowSpan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1966,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.rowSpan"
					}
				},
				{
					"id": 1495,
					"name": "rows",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1965,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.rows"
					}
				},
				{
					"id": 1454,
					"name": "sandbox",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1967,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.sandbox"
					}
				},
				{
					"id": 1493,
					"name": "scope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1968,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.scope"
					}
				},
				{
					"id": 1487,
					"name": "scoped",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1969,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.scoped"
					}
				},
				{
					"id": 1455,
					"name": "scrolling",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1970,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.scrolling"
					}
				},
				{
					"id": 1456,
					"name": "seamless",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1971,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.seamless"
					}
				},
				{
					"id": 1417,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.security"
					}
				},
				{
					"id": 1484,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1972,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.selected"
					}
				},
				{
					"id": 1425,
					"name": "shape",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1973,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.shape"
					}
				},
				{
					"id": 1469,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1974,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.size"
					}
				},
				{
					"id": 1458,
					"name": "sizes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1975,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.sizes"
					}
				},
				{
					"id": 1145,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.slot"
					}
				},
				{
					"id": 1146,
					"name": "span",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1976,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.span"
					}
				},
				{
					"id": 1397,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1834,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.spellCheck"
					}
				},
				{
					"id": 1433,
					"name": "src",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1977,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.src"
					}
				},
				{
					"id": 1457,
					"name": "srcDoc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1978,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.srcDoc"
					}
				},
				{
					"id": 1499,
					"name": "srcLang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1979,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.srcLang"
					}
				},
				{
					"id": 1459,
					"name": "srcSet",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1980,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.srcSet"
					}
				},
				{
					"id": 1483,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1981,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.start"
					}
				},
				{
					"id": 1470,
					"name": "step",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1982,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.step"
					}
				},
				{
					"id": 1147,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1835,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.style"
					}
				},
				{
					"id": 1148,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1983,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.summary"
					}
				},
				{
					"id": 1388,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1819,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.suppressContentEditableWarning"
					}
				},
				{
					"id": 1389,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1820,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.suppressHydrationWarning"
					}
				},
				{
					"id": 1180,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.tabIndex"
					}
				},
				{
					"id": 1159,
					"name": "target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1984,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.target"
					}
				},
				{
					"id": 1149,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.title"
					}
				},
				{
					"id": 1134,
					"name": "touched",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Triggers the Inputs stylable error state."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelection/InputSelection.tsx",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1398,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.translate"
					}
				},
				{
					"id": 1140,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The type of slection control to render."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelection/InputSelection.tsx",
							"line": 34,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 38,
						"name": "SelectionControlType"
					},
					"overwrites": {
						"type": "reference",
						"name": "Pick.type"
					}
				},
				{
					"id": 1406,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.typeof"
					}
				},
				{
					"id": 1418,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.unselectable"
					}
				},
				{
					"id": 1384,
					"name": "useMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1986,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.useMap"
					}
				},
				{
					"id": 1440,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1987,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.value"
					}
				},
				{
					"id": 1135,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Variant index."
					},
					"sources": [
						{
							"fileName": "src/components/InputSelection/InputSelection.tsx",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "Variant"
					}
				},
				{
					"id": 1407,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1854,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.vocab"
					}
				},
				{
					"id": 1139,
					"name": "vol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "How 'loud' should this input be?"
					},
					"sources": [
						{
							"fileName": "src/components/InputSelection/InputSelection.tsx",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 35,
						"name": "Volume"
					}
				},
				{
					"id": 1178,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1988,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.width"
					}
				},
				{
					"id": 1385,
					"name": "wmode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1989,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.wmode"
					}
				},
				{
					"id": 1496,
					"name": "wrap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1990,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.wrap"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1400,
						1461,
						1443,
						1390,
						1444,
						1449,
						1450,
						1423,
						1182,
						1183,
						1184,
						1185,
						1186,
						1187,
						1188,
						1189,
						1163,
						1190,
						1167,
						1168,
						1191,
						1192,
						1193,
						1161,
						1194,
						1195,
						1162,
						1196,
						1197,
						1198,
						1165,
						1166,
						1199,
						1200,
						1201,
						1202,
						1203,
						1204,
						1205,
						1206,
						1207,
						1164,
						1208,
						1209,
						1210,
						1211,
						1212,
						1213,
						1214,
						1215,
						1216,
						1217,
						1218,
						1219,
						1220,
						1221,
						1151,
						1460,
						1408,
						1445,
						1409,
						1153,
						1426,
						1410,
						1462,
						1488,
						1489,
						1471,
						1476,
						1463,
						1152,
						1142,
						1383,
						1169,
						1490,
						1170,
						1494,
						1477,
						1391,
						1392,
						1427,
						1424,
						1181,
						1222,
						1143,
						1401,
						1441,
						1497,
						1386,
						1387,
						1485,
						1393,
						1434,
						1421,
						1394,
						1446,
						1132,
						1144,
						1435,
						1436,
						1437,
						1438,
						1439,
						1451,
						1491,
						1171,
						1395,
						1479,
						1133,
						1158,
						1422,
						1474,
						1478,
						1131,
						1402,
						1419,
						1137,
						1475,
						1420,
						1414,
						1411,
						1415,
						1412,
						1413,
						1381,
						1473,
						1472,
						1498,
						1136,
						1138,
						1172,
						1382,
						1428,
						1480,
						1448,
						1452,
						1453,
						1173,
						1464,
						1174,
						1429,
						1175,
						1176,
						1465,
						1466,
						1430,
						1177,
						1447,
						1486,
						1259,
						1260,
						1375,
						1376,
						1377,
						1378,
						1373,
						1374,
						1303,
						1304,
						1241,
						1242,
						1155,
						1238,
						1261,
						1262,
						1263,
						1264,
						1239,
						1240,
						1305,
						1306,
						1231,
						1232,
						1233,
						1234,
						1235,
						1236,
						1307,
						1308,
						1225,
						1226,
						1227,
						1228,
						1309,
						1310,
						1311,
						1312,
						1313,
						1314,
						1315,
						1316,
						1317,
						1318,
						1319,
						1320,
						1321,
						1322,
						1323,
						1324,
						1325,
						1326,
						1265,
						1266,
						1267,
						1268,
						1269,
						1270,
						1271,
						1272,
						1253,
						1254,
						1154,
						1237,
						1365,
						1366,
						1243,
						1244,
						1249,
						1250,
						1156,
						1255,
						1256,
						1257,
						1157,
						1258,
						1251,
						1252,
						1277,
						1278,
						1273,
						1274,
						1275,
						1276,
						1367,
						1368,
						1327,
						1328,
						1329,
						1330,
						1331,
						1332,
						1333,
						1334,
						1335,
						1336,
						1337,
						1338,
						1229,
						1230,
						1279,
						1280,
						1281,
						1282,
						1283,
						1284,
						1355,
						1356,
						1349,
						1350,
						1357,
						1358,
						1359,
						1360,
						1351,
						1352,
						1363,
						1364,
						1361,
						1362,
						1353,
						1354,
						1285,
						1286,
						1287,
						1288,
						1245,
						1246,
						1369,
						1370,
						1289,
						1290,
						1291,
						1292,
						1339,
						1340,
						1293,
						1294,
						1247,
						1248,
						1295,
						1296,
						1297,
						1298,
						1341,
						1342,
						1343,
						1344,
						1345,
						1346,
						1347,
						1348,
						1379,
						1380,
						1299,
						1300,
						1301,
						1302,
						1371,
						1372,
						1442,
						1481,
						1150,
						1396,
						1431,
						1500,
						1403,
						1432,
						1404,
						1399,
						1467,
						1141,
						1160,
						1468,
						1405,
						1416,
						1482,
						1179,
						1492,
						1495,
						1454,
						1493,
						1487,
						1455,
						1456,
						1417,
						1484,
						1425,
						1469,
						1458,
						1145,
						1146,
						1397,
						1433,
						1457,
						1499,
						1459,
						1483,
						1470,
						1147,
						1148,
						1388,
						1389,
						1180,
						1159,
						1149,
						1134,
						1398,
						1140,
						1406,
						1418,
						1384,
						1440,
						1135,
						1407,
						1139,
						1178,
						1385,
						1496
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/InputSelection/InputSelection.tsx",
					"line": 10,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLInputElement"
								}
							],
							"name": "React.HTMLProps"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLInputElement"
											}
										],
										"name": "React.HTMLProps"
									}
								},
								{
									"type": "literal",
									"value": "label"
								}
							],
							"name": "Exclude"
						}
					],
					"name": "Pick"
				}
			]
		},
		{
			"id": 1866,
			"name": "InputTextProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "HTMLInputElement has a 'label' attribute apparently; so replacing it."
			},
			"children": [
				{
					"id": 2116,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.about"
					}
				},
				{
					"id": 2147,
					"name": "accept",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2157,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.accept"
					}
				},
				{
					"id": 2106,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1823,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.accessKey"
					}
				},
				{
					"id": 2137,
					"name": "alt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2158,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.alt"
					}
				},
				{
					"id": 1903,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-activedescendant"
					}
				},
				{
					"id": 1904,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-atomic"
					}
				},
				{
					"id": 1905,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-autocomplete"
					}
				},
				{
					"id": 1906,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-busy"
					}
				},
				{
					"id": 1907,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-checked"
					}
				},
				{
					"id": 1908,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-colcount"
					}
				},
				{
					"id": 1909,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-colindex"
					}
				},
				{
					"id": 1910,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-colspan"
					}
				},
				{
					"id": 1886,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-controls"
					}
				},
				{
					"id": 1911,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-current"
					}
				},
				{
					"id": 1890,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-describedby"
					}
				},
				{
					"id": 1891,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-details"
					}
				},
				{
					"id": 1912,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-disabled"
					}
				},
				{
					"id": 1913,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-dropeffect"
					}
				},
				{
					"id": 1914,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-errormessage"
					}
				},
				{
					"id": 1884,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-expanded"
					}
				},
				{
					"id": 1915,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-flowto"
					}
				},
				{
					"id": 1916,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-grabbed"
					}
				},
				{
					"id": 1885,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-haspopup"
					}
				},
				{
					"id": 1917,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-hidden"
					}
				},
				{
					"id": 1918,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-invalid"
					}
				},
				{
					"id": 1919,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-keyshortcuts"
					}
				},
				{
					"id": 1888,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-label"
					}
				},
				{
					"id": 1889,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-labelledby"
					}
				},
				{
					"id": 1920,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-level"
					}
				},
				{
					"id": 1921,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-live"
					}
				},
				{
					"id": 1922,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-modal"
					}
				},
				{
					"id": 1923,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-multiline"
					}
				},
				{
					"id": 1924,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-multiselectable"
					}
				},
				{
					"id": 1925,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-orientation"
					}
				},
				{
					"id": 1926,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-owns"
					}
				},
				{
					"id": 1927,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-placeholder"
					}
				},
				{
					"id": 1928,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-posinset"
					}
				},
				{
					"id": 1887,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-pressed"
					}
				},
				{
					"id": 1929,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-readonly"
					}
				},
				{
					"id": 1930,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-relevant"
					}
				},
				{
					"id": 1931,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-required"
					}
				},
				{
					"id": 1932,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-roledescription"
					}
				},
				{
					"id": 1933,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-rowcount"
					}
				},
				{
					"id": 1934,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-rowindex"
					}
				},
				{
					"id": 1935,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-rowspan"
					}
				},
				{
					"id": 1936,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-selected"
					}
				},
				{
					"id": 1937,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-setsize"
					}
				},
				{
					"id": 1938,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-sort"
					}
				},
				{
					"id": 1939,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuemax"
					}
				},
				{
					"id": 1940,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuemin"
					}
				},
				{
					"id": 1941,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuenow"
					}
				},
				{
					"id": 1942,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.aria-valuetext"
					}
				},
				{
					"id": 2124,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoCapitalize"
					}
				},
				{
					"id": 2146,
					"name": "autoComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2159,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoComplete"
					}
				},
				{
					"id": 2125,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoCorrect"
					}
				},
				{
					"id": 1879,
					"name": "autoFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2160,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoFocus"
					}
				},
				{
					"id": 2126,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.autoSave"
					}
				},
				{
					"id": 2148,
					"name": "capture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2161,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.capture"
					}
				},
				{
					"id": 2149,
					"name": "checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2162,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.checked"
					}
				},
				{
					"id": 1878,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.children"
					}
				},
				{
					"id": 1892,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.className"
					}
				},
				{
					"id": 1893,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.color"
					}
				},
				{
					"id": 2107,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1825,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.contentEditable"
					}
				},
				{
					"id": 2108,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1826,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.contextMenu"
					}
				},
				{
					"id": 1902,
					"name": "crossOrigin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2163,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.crossOrigin"
					}
				},
				{
					"id": 1943,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1944,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1945,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1945
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 2117,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.datatype"
					}
				},
				{
					"id": 2102,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1817,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.defaultChecked"
					}
				},
				{
					"id": 2103,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1818,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.defaultValue"
					}
				},
				{
					"id": 2109,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1827,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.dir"
					}
				},
				{
					"id": 2139,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2164,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.disabled"
					}
				},
				{
					"id": 2110,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1828,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.draggable"
					}
				},
				{
					"id": 2162,
					"name": "endAdornment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Place a component so as to appear inside the TextInput end."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 850,
						"name": "InputBaseProps.endAdornment"
					}
				},
				{
					"id": 2150,
					"name": "enterKeyHint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2165,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "enter"
							},
							{
								"type": "literal",
								"value": "done"
							},
							{
								"type": "literal",
								"value": "go"
							},
							{
								"type": "literal",
								"value": "next"
							},
							{
								"type": "literal",
								"value": "previous"
							},
							{
								"type": "literal",
								"value": "send"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.enterKeyHint"
					}
				},
				{
					"id": 2158,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide an error message that triggers the stylable error state."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 846,
						"name": "InputBaseProps.error"
					}
				},
				{
					"id": 1873,
					"name": "form",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2166,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.form"
					}
				},
				{
					"id": 2140,
					"name": "formAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2167,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.formAction"
					}
				},
				{
					"id": 2141,
					"name": "formEncType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2168,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.formEncType"
					}
				},
				{
					"id": 2142,
					"name": "formMethod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2169,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.formMethod"
					}
				},
				{
					"id": 2143,
					"name": "formNoValidate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2170,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.formNoValidate"
					}
				},
				{
					"id": 2144,
					"name": "formTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2171,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.formTarget"
					}
				},
				{
					"id": 1894,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2172,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.height"
					}
				},
				{
					"id": 2111,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1829,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.hidden"
					}
				},
				{
					"id": 2159,
					"name": "hint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Provide some hint text to the label component."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 847,
						"name": "InputBaseProps.hint"
					}
				},
				{
					"id": 1867,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The `id` is required to associate fields with labels programatically for better\nUX and a legal requirement for accessibility."
					},
					"sources": [
						{
							"fileName": "src/components/InputText/InputText.tsx",
							"line": 26,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "Pick.id"
					}
				},
				{
					"id": 2118,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.inlist"
					}
				},
				{
					"id": 2135,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.inputMode"
					}
				},
				{
					"id": 2136,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.is"
					}
				},
				{
					"id": 2130,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.itemID"
					}
				},
				{
					"id": 2127,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.itemProp"
					}
				},
				{
					"id": 2131,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.itemRef"
					}
				},
				{
					"id": 2128,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.itemScope"
					}
				},
				{
					"id": 2129,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.itemType"
					}
				},
				{
					"id": 2163,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "The label to associated with the input."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 851,
						"name": "InputBaseProps.label"
					}
				},
				{
					"id": 2165,
					"name": "labelVisuallyHidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Visually hide the label so it is still accessible to assistive technologies."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 853,
						"name": "InputBaseProps.labelVisuallyHidden"
					}
				},
				{
					"id": 1895,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.lang"
					}
				},
				{
					"id": 2101,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2173,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.list"
					}
				},
				{
					"id": 1896,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2174,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.max"
					}
				},
				{
					"id": 2151,
					"name": "maxLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2175,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.maxLength"
					}
				},
				{
					"id": 1897,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2176,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.min"
					}
				},
				{
					"id": 2152,
					"name": "minLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2177,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.minLength"
					}
				},
				{
					"id": 2153,
					"name": "multiple",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2178,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.multiple"
					}
				},
				{
					"id": 1898,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2179,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.name"
					}
				},
				{
					"id": 1979,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAbort"
					}
				},
				{
					"id": 1980,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAbortCapture"
					}
				},
				{
					"id": 2095,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationEnd"
					}
				},
				{
					"id": 2096,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationEndCapture"
					}
				},
				{
					"id": 2097,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationIteration"
					}
				},
				{
					"id": 2098,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationIterationCapture"
					}
				},
				{
					"id": 2093,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationStart"
					}
				},
				{
					"id": 2094,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAnimationStartCapture"
					}
				},
				{
					"id": 2023,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAuxClick"
					}
				},
				{
					"id": 2024,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onAuxClickCapture"
					}
				},
				{
					"id": 1961,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBeforeInput"
					}
				},
				{
					"id": 1962,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBeforeInputCapture"
					}
				},
				{
					"id": 1881,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBlur"
					}
				},
				{
					"id": 1959,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onBlurCapture"
					}
				},
				{
					"id": 1981,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlay"
					}
				},
				{
					"id": 1982,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlayCapture"
					}
				},
				{
					"id": 1983,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlayThrough"
					}
				},
				{
					"id": 1984,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCanPlayThroughCapture"
					}
				},
				{
					"id": 1960,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onChangeCapture"
					}
				},
				{
					"id": 2025,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onClick"
					}
				},
				{
					"id": 2026,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onClickCapture"
					}
				},
				{
					"id": 1952,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionEnd"
					}
				},
				{
					"id": 1953,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionEndCapture"
					}
				},
				{
					"id": 1954,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionStart"
					}
				},
				{
					"id": 1955,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionStartCapture"
					}
				},
				{
					"id": 1956,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionUpdate"
					}
				},
				{
					"id": 1957,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCompositionUpdateCapture"
					}
				},
				{
					"id": 2027,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onContextMenu"
					}
				},
				{
					"id": 2028,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onContextMenuCapture"
					}
				},
				{
					"id": 1946,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCopy"
					}
				},
				{
					"id": 1947,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCopyCapture"
					}
				},
				{
					"id": 1948,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCut"
					}
				},
				{
					"id": 1949,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onCutCapture"
					}
				},
				{
					"id": 2029,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDoubleClick"
					}
				},
				{
					"id": 2030,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDoubleClickCapture"
					}
				},
				{
					"id": 2031,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDrag"
					}
				},
				{
					"id": 2032,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragCapture"
					}
				},
				{
					"id": 2033,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEnd"
					}
				},
				{
					"id": 2034,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEndCapture"
					}
				},
				{
					"id": 2035,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEnter"
					}
				},
				{
					"id": 2036,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragEnterCapture"
					}
				},
				{
					"id": 2037,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragExit"
					}
				},
				{
					"id": 2038,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragExitCapture"
					}
				},
				{
					"id": 2039,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragLeave"
					}
				},
				{
					"id": 2040,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragLeaveCapture"
					}
				},
				{
					"id": 2041,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragOver"
					}
				},
				{
					"id": 2042,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragOverCapture"
					}
				},
				{
					"id": 2043,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragStart"
					}
				},
				{
					"id": 2044,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDragStartCapture"
					}
				},
				{
					"id": 2045,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDrop"
					}
				},
				{
					"id": 2046,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDropCapture"
					}
				},
				{
					"id": 1985,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDurationChange"
					}
				},
				{
					"id": 1986,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onDurationChangeCapture"
					}
				},
				{
					"id": 1987,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEmptied"
					}
				},
				{
					"id": 1988,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEmptiedCapture"
					}
				},
				{
					"id": 1989,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEncrypted"
					}
				},
				{
					"id": 1990,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEncryptedCapture"
					}
				},
				{
					"id": 1991,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEnded"
					}
				},
				{
					"id": 1992,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onEndedCapture"
					}
				},
				{
					"id": 1973,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onError"
					}
				},
				{
					"id": 1974,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onErrorCapture"
					}
				},
				{
					"id": 1880,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onFocus"
					}
				},
				{
					"id": 1958,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onFocusCapture"
					}
				},
				{
					"id": 2085,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onGotPointerCapture"
					}
				},
				{
					"id": 2086,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 1963,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInput"
					}
				},
				{
					"id": 1964,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInputCapture"
					}
				},
				{
					"id": 1969,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInvalid"
					}
				},
				{
					"id": 1970,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onInvalidCapture"
					}
				},
				{
					"id": 1882,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyDown"
					}
				},
				{
					"id": 1975,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyDownCapture"
					}
				},
				{
					"id": 1976,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyPress"
					}
				},
				{
					"id": 1977,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyPressCapture"
					}
				},
				{
					"id": 1883,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyUp"
					}
				},
				{
					"id": 1978,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onKeyUpCapture"
					}
				},
				{
					"id": 1971,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoad"
					}
				},
				{
					"id": 1972,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadCapture"
					}
				},
				{
					"id": 1997,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadStart"
					}
				},
				{
					"id": 1998,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadStartCapture"
					}
				},
				{
					"id": 1993,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedData"
					}
				},
				{
					"id": 1994,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedDataCapture"
					}
				},
				{
					"id": 1995,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedMetadata"
					}
				},
				{
					"id": 1996,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLoadedMetadataCapture"
					}
				},
				{
					"id": 2087,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLostPointerCapture"
					}
				},
				{
					"id": 2088,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 2047,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseDown"
					}
				},
				{
					"id": 2048,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseDownCapture"
					}
				},
				{
					"id": 2049,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseEnter"
					}
				},
				{
					"id": 2050,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseLeave"
					}
				},
				{
					"id": 2051,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseMove"
					}
				},
				{
					"id": 2052,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseMoveCapture"
					}
				},
				{
					"id": 2053,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOut"
					}
				},
				{
					"id": 2054,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOutCapture"
					}
				},
				{
					"id": 2055,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOver"
					}
				},
				{
					"id": 2056,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseOverCapture"
					}
				},
				{
					"id": 2057,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseUp"
					}
				},
				{
					"id": 2058,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onMouseUpCapture"
					}
				},
				{
					"id": 1950,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPaste"
					}
				},
				{
					"id": 1951,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPasteCapture"
					}
				},
				{
					"id": 1999,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPause"
					}
				},
				{
					"id": 2000,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPauseCapture"
					}
				},
				{
					"id": 2001,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlay"
					}
				},
				{
					"id": 2002,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlayCapture"
					}
				},
				{
					"id": 2003,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlaying"
					}
				},
				{
					"id": 2004,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPlayingCapture"
					}
				},
				{
					"id": 2075,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerCancel"
					}
				},
				{
					"id": 2076,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerCancelCapture"
					}
				},
				{
					"id": 2069,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerDown"
					}
				},
				{
					"id": 2070,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerDownCapture"
					}
				},
				{
					"id": 2077,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerEnter"
					}
				},
				{
					"id": 2078,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerEnterCapture"
					}
				},
				{
					"id": 2079,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerLeave"
					}
				},
				{
					"id": 2080,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerLeaveCapture"
					}
				},
				{
					"id": 2071,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerMove"
					}
				},
				{
					"id": 2072,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerMoveCapture"
					}
				},
				{
					"id": 2083,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOut"
					}
				},
				{
					"id": 2084,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOutCapture"
					}
				},
				{
					"id": 2081,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOver"
					}
				},
				{
					"id": 2082,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerOverCapture"
					}
				},
				{
					"id": 2073,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerUp"
					}
				},
				{
					"id": 2074,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onPointerUpCapture"
					}
				},
				{
					"id": 2005,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onProgress"
					}
				},
				{
					"id": 2006,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onProgressCapture"
					}
				},
				{
					"id": 2007,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onRateChange"
					}
				},
				{
					"id": 2008,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onRateChangeCapture"
					}
				},
				{
					"id": 1965,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onReset"
					}
				},
				{
					"id": 1966,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onResetCapture"
					}
				},
				{
					"id": 2089,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onScroll"
					}
				},
				{
					"id": 2090,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onScrollCapture"
					}
				},
				{
					"id": 2009,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeeked"
					}
				},
				{
					"id": 2010,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeekedCapture"
					}
				},
				{
					"id": 2011,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeeking"
					}
				},
				{
					"id": 2012,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSeekingCapture"
					}
				},
				{
					"id": 2059,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSelect"
					}
				},
				{
					"id": 2060,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSelectCapture"
					}
				},
				{
					"id": 2013,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onStalled"
					}
				},
				{
					"id": 2014,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onStalledCapture"
					}
				},
				{
					"id": 1967,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSubmit"
					}
				},
				{
					"id": 1968,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSubmitCapture"
					}
				},
				{
					"id": 2015,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSuspend"
					}
				},
				{
					"id": 2016,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onSuspendCapture"
					}
				},
				{
					"id": 2017,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTimeUpdate"
					}
				},
				{
					"id": 2018,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTimeUpdateCapture"
					}
				},
				{
					"id": 2061,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchCancel"
					}
				},
				{
					"id": 2062,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchCancelCapture"
					}
				},
				{
					"id": 2063,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchEnd"
					}
				},
				{
					"id": 2064,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchEndCapture"
					}
				},
				{
					"id": 2065,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchMove"
					}
				},
				{
					"id": 2066,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchMoveCapture"
					}
				},
				{
					"id": 2067,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchStart"
					}
				},
				{
					"id": 2068,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTouchStartCapture"
					}
				},
				{
					"id": 2099,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTransitionEnd"
					}
				},
				{
					"id": 2100,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onTransitionEndCapture"
					}
				},
				{
					"id": 2019,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onVolumeChange"
					}
				},
				{
					"id": 2020,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onVolumeChangeCapture"
					}
				},
				{
					"id": 2021,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWaiting"
					}
				},
				{
					"id": 2022,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWaitingCapture"
					}
				},
				{
					"id": 2091,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWheel"
					}
				},
				{
					"id": 2092,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.onWheelCapture"
					}
				},
				{
					"id": 1877,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2180,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.pattern"
					}
				},
				{
					"id": 2112,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2181,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.placeholder"
					}
				},
				{
					"id": 2119,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.prefix"
					}
				},
				{
					"id": 2120,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.property"
					}
				},
				{
					"id": 2115,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.radioGroup"
					}
				},
				{
					"id": 2154,
					"name": "readOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2182,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.readOnly"
					}
				},
				{
					"id": 2155,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2183,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.required"
					}
				},
				{
					"id": 2121,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.resource"
					}
				},
				{
					"id": 2132,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.results"
					}
				},
				{
					"id": 1900,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.role"
					}
				},
				{
					"id": 1868,
					"name": "rows",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Use in conjustion with type=\"textarea\" to pre-set the rows rendered."
					},
					"sources": [
						{
							"fileName": "src/components/InputText/InputText.tsx",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2133,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.security"
					}
				},
				{
					"id": 2156,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2184,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.size"
					}
				},
				{
					"id": 1874,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.slot"
					}
				},
				{
					"id": 2113,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1834,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.spellCheck"
					}
				},
				{
					"id": 2138,
					"name": "src",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2185,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.src"
					}
				},
				{
					"id": 2161,
					"name": "startAdornment",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Place a component so as to appear inside the TextInput start."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 849,
						"name": "InputBaseProps.startAdornment"
					}
				},
				{
					"id": 2157,
					"name": "step",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2186,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.step"
					}
				},
				{
					"id": 1875,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1835,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.style"
					}
				},
				{
					"id": 2104,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1819,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.suppressContentEditableWarning"
					}
				},
				{
					"id": 2105,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1820,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.suppressHydrationWarning"
					}
				},
				{
					"id": 1901,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.tabIndex"
					}
				},
				{
					"id": 1876,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.title"
					}
				},
				{
					"id": 2160,
					"name": "touched",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Triggers the Inputs stylable error state."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 848,
						"name": "InputBaseProps.touched"
					}
				},
				{
					"id": 2114,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.translate"
					}
				},
				{
					"id": 1869,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The type of input control to render."
					},
					"sources": [
						{
							"fileName": "src/components/InputText/InputText.tsx",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 37,
						"name": "TextInputType"
					},
					"overwrites": {
						"type": "reference",
						"name": "Pick.type"
					}
				},
				{
					"id": 2122,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.typeof"
					}
				},
				{
					"id": 2134,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.unselectable"
					}
				},
				{
					"id": 2145,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2188,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.value"
					}
				},
				{
					"id": 2164,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Variant index."
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 26,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "Variant"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 852,
						"name": "InputBaseProps.variant"
					}
				},
				{
					"id": 2123,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1854,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.vocab"
					}
				},
				{
					"id": 2166,
					"name": "vol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "How loud should this input row be?"
					},
					"sources": [
						{
							"fileName": "src/components/InputBase/InputBase.tsx",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 35,
						"name": "Volume"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 854,
						"name": "InputBaseProps.vol"
					}
				},
				{
					"id": 1899,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 2189,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Pick.width"
					}
				},
				{
					"id": 1870,
					"name": "onChange",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/InputText/InputText.tsx",
							"line": 31,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 1871,
							"name": "onChange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1872,
									"name": "e",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Element"
											}
										],
										"name": "ChangeEvent"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2116,
						2147,
						2106,
						2137,
						1903,
						1904,
						1905,
						1906,
						1907,
						1908,
						1909,
						1910,
						1886,
						1911,
						1890,
						1891,
						1912,
						1913,
						1914,
						1884,
						1915,
						1916,
						1885,
						1917,
						1918,
						1919,
						1888,
						1889,
						1920,
						1921,
						1922,
						1923,
						1924,
						1925,
						1926,
						1927,
						1928,
						1887,
						1929,
						1930,
						1931,
						1932,
						1933,
						1934,
						1935,
						1936,
						1937,
						1938,
						1939,
						1940,
						1941,
						1942,
						2124,
						2146,
						2125,
						1879,
						2126,
						2148,
						2149,
						1878,
						1892,
						1893,
						2107,
						2108,
						1902,
						1943,
						2117,
						2102,
						2103,
						2109,
						2139,
						2110,
						2162,
						2150,
						2158,
						1873,
						2140,
						2141,
						2142,
						2143,
						2144,
						1894,
						2111,
						2159,
						1867,
						2118,
						2135,
						2136,
						2130,
						2127,
						2131,
						2128,
						2129,
						2163,
						2165,
						1895,
						2101,
						1896,
						2151,
						1897,
						2152,
						2153,
						1898,
						1979,
						1980,
						2095,
						2096,
						2097,
						2098,
						2093,
						2094,
						2023,
						2024,
						1961,
						1962,
						1881,
						1959,
						1981,
						1982,
						1983,
						1984,
						1960,
						2025,
						2026,
						1952,
						1953,
						1954,
						1955,
						1956,
						1957,
						2027,
						2028,
						1946,
						1947,
						1948,
						1949,
						2029,
						2030,
						2031,
						2032,
						2033,
						2034,
						2035,
						2036,
						2037,
						2038,
						2039,
						2040,
						2041,
						2042,
						2043,
						2044,
						2045,
						2046,
						1985,
						1986,
						1987,
						1988,
						1989,
						1990,
						1991,
						1992,
						1973,
						1974,
						1880,
						1958,
						2085,
						2086,
						1963,
						1964,
						1969,
						1970,
						1882,
						1975,
						1976,
						1977,
						1883,
						1978,
						1971,
						1972,
						1997,
						1998,
						1993,
						1994,
						1995,
						1996,
						2087,
						2088,
						2047,
						2048,
						2049,
						2050,
						2051,
						2052,
						2053,
						2054,
						2055,
						2056,
						2057,
						2058,
						1950,
						1951,
						1999,
						2000,
						2001,
						2002,
						2003,
						2004,
						2075,
						2076,
						2069,
						2070,
						2077,
						2078,
						2079,
						2080,
						2071,
						2072,
						2083,
						2084,
						2081,
						2082,
						2073,
						2074,
						2005,
						2006,
						2007,
						2008,
						1965,
						1966,
						2089,
						2090,
						2009,
						2010,
						2011,
						2012,
						2059,
						2060,
						2013,
						2014,
						1967,
						1968,
						2015,
						2016,
						2017,
						2018,
						2061,
						2062,
						2063,
						2064,
						2065,
						2066,
						2067,
						2068,
						2099,
						2100,
						2019,
						2020,
						2021,
						2022,
						2091,
						2092,
						1877,
						2112,
						2119,
						2120,
						2115,
						2154,
						2155,
						2121,
						2132,
						1900,
						1868,
						2133,
						2156,
						1874,
						2113,
						2138,
						2161,
						2157,
						1875,
						2104,
						2105,
						1901,
						1876,
						2160,
						2114,
						1869,
						2122,
						2134,
						2145,
						2164,
						2123,
						2166,
						1899
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1870
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/InputText/InputText.tsx",
					"line": 16,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLInputElement"
								}
							],
							"name": "React.InputHTMLAttributes"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLInputElement"
											}
										],
										"name": "React.InputHTMLAttributes"
									}
								},
								{
									"type": "literal",
									"value": "onChange"
								}
							],
							"name": "Exclude"
						}
					],
					"name": "Pick"
				},
				{
					"type": "reference",
					"id": 845,
					"name": "InputBaseProps"
				}
			]
		},
		{
			"id": 2167,
			"name": "LabelProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2300,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.about"
					}
				},
				{
					"id": 2173,
					"name": "accept",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.accept"
					}
				},
				{
					"id": 2174,
					"name": "acceptCharset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1886,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.acceptCharset"
					}
				},
				{
					"id": 2283,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1823,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.accessKey"
					}
				},
				{
					"id": 2175,
					"name": "action",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1887,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.action"
					}
				},
				{
					"id": 2176,
					"name": "allowFullScreen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1888,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.allowFullScreen"
					}
				},
				{
					"id": 2177,
					"name": "allowTransparency",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1889,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.allowTransparency"
					}
				},
				{
					"id": 2178,
					"name": "alt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1890,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.alt"
					}
				},
				{
					"id": 2322,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-activedescendant"
					}
				},
				{
					"id": 2323,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-atomic"
					}
				},
				{
					"id": 2324,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-autocomplete"
					}
				},
				{
					"id": 2325,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-busy"
					}
				},
				{
					"id": 2326,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-checked"
					}
				},
				{
					"id": 2327,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-colcount"
					}
				},
				{
					"id": 2328,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-colindex"
					}
				},
				{
					"id": 2329,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-colspan"
					}
				},
				{
					"id": 2330,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-controls"
					}
				},
				{
					"id": 2331,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-current"
					}
				},
				{
					"id": 2332,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-describedby"
					}
				},
				{
					"id": 2333,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-details"
					}
				},
				{
					"id": 2334,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-disabled"
					}
				},
				{
					"id": 2335,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-dropeffect"
					}
				},
				{
					"id": 2336,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-errormessage"
					}
				},
				{
					"id": 2337,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-expanded"
					}
				},
				{
					"id": 2338,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-flowto"
					}
				},
				{
					"id": 2339,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-grabbed"
					}
				},
				{
					"id": 2340,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-haspopup"
					}
				},
				{
					"id": 2341,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-hidden"
					}
				},
				{
					"id": 2342,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-invalid"
					}
				},
				{
					"id": 2343,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-keyshortcuts"
					}
				},
				{
					"id": 2344,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-label"
					}
				},
				{
					"id": 2345,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-labelledby"
					}
				},
				{
					"id": 2346,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-level"
					}
				},
				{
					"id": 2347,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-live"
					}
				},
				{
					"id": 2348,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-modal"
					}
				},
				{
					"id": 2349,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-multiline"
					}
				},
				{
					"id": 2350,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-multiselectable"
					}
				},
				{
					"id": 2351,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-orientation"
					}
				},
				{
					"id": 2352,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-owns"
					}
				},
				{
					"id": 2353,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-placeholder"
					}
				},
				{
					"id": 2354,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-posinset"
					}
				},
				{
					"id": 2355,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-pressed"
					}
				},
				{
					"id": 2356,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-readonly"
					}
				},
				{
					"id": 2357,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-relevant"
					}
				},
				{
					"id": 2358,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-required"
					}
				},
				{
					"id": 2359,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-roledescription"
					}
				},
				{
					"id": 2360,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-rowcount"
					}
				},
				{
					"id": 2361,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-rowindex"
					}
				},
				{
					"id": 2362,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-rowspan"
					}
				},
				{
					"id": 2363,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-selected"
					}
				},
				{
					"id": 2364,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-setsize"
					}
				},
				{
					"id": 2365,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-sort"
					}
				},
				{
					"id": 2366,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuemax"
					}
				},
				{
					"id": 2367,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuemin"
					}
				},
				{
					"id": 2368,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuenow"
					}
				},
				{
					"id": 2369,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuetext"
					}
				},
				{
					"id": 2179,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1891,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.as"
					}
				},
				{
					"id": 2180,
					"name": "async",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1892,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.async"
					}
				},
				{
					"id": 2308,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoCapitalize"
					}
				},
				{
					"id": 2181,
					"name": "autoComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1893,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoComplete"
					}
				},
				{
					"id": 2309,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoCorrect"
					}
				},
				{
					"id": 2182,
					"name": "autoFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1894,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoFocus"
					}
				},
				{
					"id": 2183,
					"name": "autoPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1895,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoPlay"
					}
				},
				{
					"id": 2310,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoSave"
					}
				},
				{
					"id": 2184,
					"name": "capture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1896,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.capture"
					}
				},
				{
					"id": 2185,
					"name": "cellPadding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1897,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cellPadding"
					}
				},
				{
					"id": 2186,
					"name": "cellSpacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1898,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cellSpacing"
					}
				},
				{
					"id": 2188,
					"name": "challenge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1900,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.challenge"
					}
				},
				{
					"id": 2187,
					"name": "charSet",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1899,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.charSet"
					}
				},
				{
					"id": 2189,
					"name": "checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1901,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.checked"
					}
				},
				{
					"id": 2168,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/components/Label/Label.tsx",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"overwrites": {
						"type": "reference",
						"name": "React.HTMLProps.children"
					}
				},
				{
					"id": 2190,
					"name": "cite",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1902,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cite"
					}
				},
				{
					"id": 2191,
					"name": "classID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1903,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.classID"
					}
				},
				{
					"id": 2284,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.className"
					}
				},
				{
					"id": 2193,
					"name": "colSpan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1905,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.colSpan"
					}
				},
				{
					"id": 2311,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.color"
					}
				},
				{
					"id": 2192,
					"name": "cols",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1904,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cols"
					}
				},
				{
					"id": 2194,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1906,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.content"
					}
				},
				{
					"id": 2285,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1825,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.contentEditable"
					}
				},
				{
					"id": 2286,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1826,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.contextMenu"
					}
				},
				{
					"id": 2195,
					"name": "controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1907,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.controls"
					}
				},
				{
					"id": 2196,
					"name": "coords",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1908,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.coords"
					}
				},
				{
					"id": 2197,
					"name": "crossOrigin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1909,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.crossOrigin"
					}
				},
				{
					"id": 2370,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2371,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2372,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2372
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 2198,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1910,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.data"
					}
				},
				{
					"id": 2301,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.datatype"
					}
				},
				{
					"id": 2199,
					"name": "dateTime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1911,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.dateTime"
					}
				},
				{
					"id": 2200,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1912,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.default"
					}
				},
				{
					"id": 2279,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1817,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.defaultChecked"
					}
				},
				{
					"id": 2280,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1818,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.defaultValue"
					}
				},
				{
					"id": 2201,
					"name": "defer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1913,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.defer"
					}
				},
				{
					"id": 2287,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1827,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.dir"
					}
				},
				{
					"id": 2202,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1914,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.disabled"
					}
				},
				{
					"id": 2203,
					"name": "download",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1915,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.download"
					}
				},
				{
					"id": 2288,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1828,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.draggable"
					}
				},
				{
					"id": 2204,
					"name": "encType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1916,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.encType"
					}
				},
				{
					"id": 2205,
					"name": "form",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1917,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.form"
					}
				},
				{
					"id": 2206,
					"name": "formAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1918,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formAction"
					}
				},
				{
					"id": 2207,
					"name": "formEncType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1919,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formEncType"
					}
				},
				{
					"id": 2208,
					"name": "formMethod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1920,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formMethod"
					}
				},
				{
					"id": 2209,
					"name": "formNoValidate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1921,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formNoValidate"
					}
				},
				{
					"id": 2210,
					"name": "formTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1922,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formTarget"
					}
				},
				{
					"id": 2211,
					"name": "frameBorder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1923,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.frameBorder"
					}
				},
				{
					"id": 2212,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1924,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.headers"
					}
				},
				{
					"id": 2213,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1925,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.height"
					}
				},
				{
					"id": 2289,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1829,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.hidden"
					}
				},
				{
					"id": 2214,
					"name": "high",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1926,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.high"
					}
				},
				{
					"id": 2169,
					"name": "hint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Hint can take a React node which is placed inside the internal HintText."
					},
					"sources": [
						{
							"fileName": "src/components/Label/Label.tsx",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 2215,
					"name": "href",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1927,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.href"
					}
				},
				{
					"id": 2216,
					"name": "hrefLang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1928,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.hrefLang"
					}
				},
				{
					"id": 2217,
					"name": "htmlFor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1929,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.htmlFor"
					}
				},
				{
					"id": 2218,
					"name": "httpEquiv",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1930,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.httpEquiv"
					}
				},
				{
					"id": 2290,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1830,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.id"
					}
				},
				{
					"id": 2302,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.inlist"
					}
				},
				{
					"id": 2172,
					"name": "inputControl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional input to shove inside the label."
					},
					"sources": [
						{
							"fileName": "src/components/Label/Label.tsx",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					}
				},
				{
					"id": 2320,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.inputMode"
					}
				},
				{
					"id": 2170,
					"name": "inputPos",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The position of the label relative to the input."
					},
					"sources": [
						{
							"fileName": "src/components/Label/Label.tsx",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 31,
						"name": "AlignPos"
					}
				},
				{
					"id": 2219,
					"name": "integrity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1931,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.integrity"
					}
				},
				{
					"id": 2321,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.is"
					}
				},
				{
					"id": 2315,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemID"
					}
				},
				{
					"id": 2312,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemProp"
					}
				},
				{
					"id": 2316,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemRef"
					}
				},
				{
					"id": 2313,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemScope"
					}
				},
				{
					"id": 2314,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemType"
					}
				},
				{
					"id": 2534,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 138,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Key"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.key"
					}
				},
				{
					"id": 2220,
					"name": "keyParams",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1932,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.keyParams"
					}
				},
				{
					"id": 2221,
					"name": "keyType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1933,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.keyType"
					}
				},
				{
					"id": 2222,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1934,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.kind"
					}
				},
				{
					"id": 2223,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1935,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.label"
					}
				},
				{
					"id": 2291,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.lang"
					}
				},
				{
					"id": 2224,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1936,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.list"
					}
				},
				{
					"id": 2225,
					"name": "loop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1937,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.loop"
					}
				},
				{
					"id": 2226,
					"name": "low",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1938,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.low"
					}
				},
				{
					"id": 2227,
					"name": "manifest",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1939,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.manifest"
					}
				},
				{
					"id": 2228,
					"name": "marginHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1940,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.marginHeight"
					}
				},
				{
					"id": 2229,
					"name": "marginWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1941,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.marginWidth"
					}
				},
				{
					"id": 2230,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1942,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.max"
					}
				},
				{
					"id": 2231,
					"name": "maxLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1943,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.maxLength"
					}
				},
				{
					"id": 2232,
					"name": "media",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1944,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.media"
					}
				},
				{
					"id": 2233,
					"name": "mediaGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1945,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.mediaGroup"
					}
				},
				{
					"id": 2234,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1946,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.method"
					}
				},
				{
					"id": 2235,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1947,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.min"
					}
				},
				{
					"id": 2236,
					"name": "minLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1948,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.minLength"
					}
				},
				{
					"id": 2237,
					"name": "multiple",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1949,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.multiple"
					}
				},
				{
					"id": 2238,
					"name": "muted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1950,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.muted"
					}
				},
				{
					"id": 2239,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1951,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.name"
					}
				},
				{
					"id": 2241,
					"name": "noValidate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1953,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.noValidate"
					}
				},
				{
					"id": 2240,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1952,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.nonce"
					}
				},
				{
					"id": 2411,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAbort"
					}
				},
				{
					"id": 2412,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAbortCapture"
					}
				},
				{
					"id": 2527,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationEnd"
					}
				},
				{
					"id": 2528,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationEndCapture"
					}
				},
				{
					"id": 2529,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationIteration"
					}
				},
				{
					"id": 2530,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationIterationCapture"
					}
				},
				{
					"id": 2525,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationStart"
					}
				},
				{
					"id": 2526,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationStartCapture"
					}
				},
				{
					"id": 2455,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAuxClick"
					}
				},
				{
					"id": 2456,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAuxClickCapture"
					}
				},
				{
					"id": 2391,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBeforeInput"
					}
				},
				{
					"id": 2392,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBeforeInputCapture"
					}
				},
				{
					"id": 2387,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBlur"
					}
				},
				{
					"id": 2388,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBlurCapture"
					}
				},
				{
					"id": 2413,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlay"
					}
				},
				{
					"id": 2414,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlayCapture"
					}
				},
				{
					"id": 2415,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlayThrough"
					}
				},
				{
					"id": 2416,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlayThroughCapture"
					}
				},
				{
					"id": 2389,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onChange"
					}
				},
				{
					"id": 2390,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onChangeCapture"
					}
				},
				{
					"id": 2457,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onClick"
					}
				},
				{
					"id": 2458,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onClickCapture"
					}
				},
				{
					"id": 2379,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionEnd"
					}
				},
				{
					"id": 2380,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionEndCapture"
					}
				},
				{
					"id": 2381,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionStart"
					}
				},
				{
					"id": 2382,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionStartCapture"
					}
				},
				{
					"id": 2383,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionUpdate"
					}
				},
				{
					"id": 2384,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionUpdateCapture"
					}
				},
				{
					"id": 2459,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onContextMenu"
					}
				},
				{
					"id": 2460,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onContextMenuCapture"
					}
				},
				{
					"id": 2373,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCopy"
					}
				},
				{
					"id": 2374,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCopyCapture"
					}
				},
				{
					"id": 2375,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCut"
					}
				},
				{
					"id": 2376,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCutCapture"
					}
				},
				{
					"id": 2461,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDoubleClick"
					}
				},
				{
					"id": 2462,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDoubleClickCapture"
					}
				},
				{
					"id": 2463,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDrag"
					}
				},
				{
					"id": 2464,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragCapture"
					}
				},
				{
					"id": 2465,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEnd"
					}
				},
				{
					"id": 2466,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEndCapture"
					}
				},
				{
					"id": 2467,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEnter"
					}
				},
				{
					"id": 2468,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEnterCapture"
					}
				},
				{
					"id": 2469,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragExit"
					}
				},
				{
					"id": 2470,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragExitCapture"
					}
				},
				{
					"id": 2471,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragLeave"
					}
				},
				{
					"id": 2472,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragLeaveCapture"
					}
				},
				{
					"id": 2473,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragOver"
					}
				},
				{
					"id": 2474,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragOverCapture"
					}
				},
				{
					"id": 2475,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragStart"
					}
				},
				{
					"id": 2476,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragStartCapture"
					}
				},
				{
					"id": 2477,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDrop"
					}
				},
				{
					"id": 2478,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDropCapture"
					}
				},
				{
					"id": 2417,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDurationChange"
					}
				},
				{
					"id": 2418,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDurationChangeCapture"
					}
				},
				{
					"id": 2419,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEmptied"
					}
				},
				{
					"id": 2420,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEmptiedCapture"
					}
				},
				{
					"id": 2421,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEncrypted"
					}
				},
				{
					"id": 2422,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEncryptedCapture"
					}
				},
				{
					"id": 2423,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEnded"
					}
				},
				{
					"id": 2424,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEndedCapture"
					}
				},
				{
					"id": 2403,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onError"
					}
				},
				{
					"id": 2404,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onErrorCapture"
					}
				},
				{
					"id": 2385,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onFocus"
					}
				},
				{
					"id": 2386,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onFocusCapture"
					}
				},
				{
					"id": 2517,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onGotPointerCapture"
					}
				},
				{
					"id": 2518,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 2393,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInput"
					}
				},
				{
					"id": 2394,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInputCapture"
					}
				},
				{
					"id": 2399,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInvalid"
					}
				},
				{
					"id": 2400,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInvalidCapture"
					}
				},
				{
					"id": 2405,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyDown"
					}
				},
				{
					"id": 2406,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyDownCapture"
					}
				},
				{
					"id": 2407,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyPress"
					}
				},
				{
					"id": 2408,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyPressCapture"
					}
				},
				{
					"id": 2409,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyUp"
					}
				},
				{
					"id": 2410,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyUpCapture"
					}
				},
				{
					"id": 2401,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoad"
					}
				},
				{
					"id": 2402,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadCapture"
					}
				},
				{
					"id": 2429,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadStart"
					}
				},
				{
					"id": 2430,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadStartCapture"
					}
				},
				{
					"id": 2425,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedData"
					}
				},
				{
					"id": 2426,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedDataCapture"
					}
				},
				{
					"id": 2427,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedMetadata"
					}
				},
				{
					"id": 2428,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedMetadataCapture"
					}
				},
				{
					"id": 2519,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLostPointerCapture"
					}
				},
				{
					"id": 2520,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 2479,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseDown"
					}
				},
				{
					"id": 2480,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseDownCapture"
					}
				},
				{
					"id": 2481,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseEnter"
					}
				},
				{
					"id": 2482,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseLeave"
					}
				},
				{
					"id": 2483,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseMove"
					}
				},
				{
					"id": 2484,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseMoveCapture"
					}
				},
				{
					"id": 2485,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOut"
					}
				},
				{
					"id": 2486,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOutCapture"
					}
				},
				{
					"id": 2487,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOver"
					}
				},
				{
					"id": 2488,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOverCapture"
					}
				},
				{
					"id": 2489,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseUp"
					}
				},
				{
					"id": 2490,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseUpCapture"
					}
				},
				{
					"id": 2377,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPaste"
					}
				},
				{
					"id": 2378,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPasteCapture"
					}
				},
				{
					"id": 2431,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPause"
					}
				},
				{
					"id": 2432,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPauseCapture"
					}
				},
				{
					"id": 2433,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlay"
					}
				},
				{
					"id": 2434,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlayCapture"
					}
				},
				{
					"id": 2435,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlaying"
					}
				},
				{
					"id": 2436,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlayingCapture"
					}
				},
				{
					"id": 2507,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerCancel"
					}
				},
				{
					"id": 2508,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerCancelCapture"
					}
				},
				{
					"id": 2501,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerDown"
					}
				},
				{
					"id": 2502,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerDownCapture"
					}
				},
				{
					"id": 2509,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerEnter"
					}
				},
				{
					"id": 2510,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerEnterCapture"
					}
				},
				{
					"id": 2511,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerLeave"
					}
				},
				{
					"id": 2512,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerLeaveCapture"
					}
				},
				{
					"id": 2503,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerMove"
					}
				},
				{
					"id": 2504,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerMoveCapture"
					}
				},
				{
					"id": 2515,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOut"
					}
				},
				{
					"id": 2516,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOutCapture"
					}
				},
				{
					"id": 2513,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOver"
					}
				},
				{
					"id": 2514,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOverCapture"
					}
				},
				{
					"id": 2505,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerUp"
					}
				},
				{
					"id": 2506,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerUpCapture"
					}
				},
				{
					"id": 2437,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onProgress"
					}
				},
				{
					"id": 2438,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onProgressCapture"
					}
				},
				{
					"id": 2439,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onRateChange"
					}
				},
				{
					"id": 2440,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onRateChangeCapture"
					}
				},
				{
					"id": 2395,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onReset"
					}
				},
				{
					"id": 2396,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onResetCapture"
					}
				},
				{
					"id": 2521,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onScroll"
					}
				},
				{
					"id": 2522,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onScrollCapture"
					}
				},
				{
					"id": 2441,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeeked"
					}
				},
				{
					"id": 2442,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeekedCapture"
					}
				},
				{
					"id": 2443,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeeking"
					}
				},
				{
					"id": 2444,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeekingCapture"
					}
				},
				{
					"id": 2491,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSelect"
					}
				},
				{
					"id": 2492,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSelectCapture"
					}
				},
				{
					"id": 2445,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onStalled"
					}
				},
				{
					"id": 2446,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onStalledCapture"
					}
				},
				{
					"id": 2397,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSubmit"
					}
				},
				{
					"id": 2398,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSubmitCapture"
					}
				},
				{
					"id": 2447,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSuspend"
					}
				},
				{
					"id": 2448,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSuspendCapture"
					}
				},
				{
					"id": 2449,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTimeUpdate"
					}
				},
				{
					"id": 2450,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTimeUpdateCapture"
					}
				},
				{
					"id": 2493,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchCancel"
					}
				},
				{
					"id": 2494,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchCancelCapture"
					}
				},
				{
					"id": 2495,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchEnd"
					}
				},
				{
					"id": 2496,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchEndCapture"
					}
				},
				{
					"id": 2497,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchMove"
					}
				},
				{
					"id": 2498,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchMoveCapture"
					}
				},
				{
					"id": 2499,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchStart"
					}
				},
				{
					"id": 2500,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchStartCapture"
					}
				},
				{
					"id": 2531,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTransitionEnd"
					}
				},
				{
					"id": 2532,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTransitionEndCapture"
					}
				},
				{
					"id": 2451,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onVolumeChange"
					}
				},
				{
					"id": 2452,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onVolumeChangeCapture"
					}
				},
				{
					"id": 2453,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWaiting"
					}
				},
				{
					"id": 2454,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWaitingCapture"
					}
				},
				{
					"id": 2523,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWheel"
					}
				},
				{
					"id": 2524,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWheelCapture"
					}
				},
				{
					"id": 2242,
					"name": "open",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1954,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.open"
					}
				},
				{
					"id": 2243,
					"name": "optimum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1955,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.optimum"
					}
				},
				{
					"id": 2244,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1956,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.pattern"
					}
				},
				{
					"id": 2245,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1957,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.placeholder"
					}
				},
				{
					"id": 2246,
					"name": "playsInline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1958,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.playsInline"
					}
				},
				{
					"id": 2247,
					"name": "poster",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1959,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.poster"
					}
				},
				{
					"id": 2303,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.prefix"
					}
				},
				{
					"id": 2248,
					"name": "preload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1960,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.preload"
					}
				},
				{
					"id": 2304,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.property"
					}
				},
				{
					"id": 2298,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.radioGroup"
					}
				},
				{
					"id": 2249,
					"name": "readOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1961,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.readOnly"
					}
				},
				{
					"id": 2533,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 144,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLLabelElement"
							}
						],
						"name": "LegacyRef"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.ref"
					}
				},
				{
					"id": 2250,
					"name": "rel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1962,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.rel"
					}
				},
				{
					"id": 2251,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1963,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.required"
					}
				},
				{
					"id": 2305,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.resource"
					}
				},
				{
					"id": 2317,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.results"
					}
				},
				{
					"id": 2252,
					"name": "reversed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1964,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.reversed"
					}
				},
				{
					"id": 2299,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.role"
					}
				},
				{
					"id": 2254,
					"name": "rowSpan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1966,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.rowSpan"
					}
				},
				{
					"id": 2253,
					"name": "rows",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1965,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.rows"
					}
				},
				{
					"id": 2255,
					"name": "sandbox",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1967,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.sandbox"
					}
				},
				{
					"id": 2256,
					"name": "scope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1968,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.scope"
					}
				},
				{
					"id": 2257,
					"name": "scoped",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1969,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.scoped"
					}
				},
				{
					"id": 2258,
					"name": "scrolling",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1970,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.scrolling"
					}
				},
				{
					"id": 2259,
					"name": "seamless",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1971,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.seamless"
					}
				},
				{
					"id": 2318,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.security"
					}
				},
				{
					"id": 2260,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1972,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.selected"
					}
				},
				{
					"id": 2261,
					"name": "shape",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1973,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.shape"
					}
				},
				{
					"id": 2262,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1974,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.size"
					}
				},
				{
					"id": 2263,
					"name": "sizes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1975,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.sizes"
					}
				},
				{
					"id": 2292,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.slot"
					}
				},
				{
					"id": 2264,
					"name": "span",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1976,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.span"
					}
				},
				{
					"id": 2293,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1834,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.spellCheck"
					}
				},
				{
					"id": 2265,
					"name": "src",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1977,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.src"
					}
				},
				{
					"id": 2266,
					"name": "srcDoc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1978,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.srcDoc"
					}
				},
				{
					"id": 2267,
					"name": "srcLang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1979,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.srcLang"
					}
				},
				{
					"id": 2268,
					"name": "srcSet",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1980,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.srcSet"
					}
				},
				{
					"id": 2269,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1981,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.start"
					}
				},
				{
					"id": 2270,
					"name": "step",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1982,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.step"
					}
				},
				{
					"id": 2294,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1835,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.style"
					}
				},
				{
					"id": 2271,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1983,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.summary"
					}
				},
				{
					"id": 2281,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1819,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.suppressContentEditableWarning"
					}
				},
				{
					"id": 2282,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1820,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.suppressHydrationWarning"
					}
				},
				{
					"id": 2295,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.tabIndex"
					}
				},
				{
					"id": 2272,
					"name": "target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1984,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.target"
					}
				},
				{
					"id": 2296,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.title"
					}
				},
				{
					"id": 2297,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.translate"
					}
				},
				{
					"id": 2273,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1985,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.type"
					}
				},
				{
					"id": 2306,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.typeof"
					}
				},
				{
					"id": 2319,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.unselectable"
					}
				},
				{
					"id": 2274,
					"name": "useMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1986,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.useMap"
					}
				},
				{
					"id": 2275,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1987,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.value"
					}
				},
				{
					"id": 2171,
					"name": "visuallyHidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Visually hides the labelText container within Label."
					},
					"sources": [
						{
							"fileName": "src/components/Label/Label.tsx",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2307,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1854,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.vocab"
					}
				},
				{
					"id": 2276,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1988,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.width"
					}
				},
				{
					"id": 2277,
					"name": "wmode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1989,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.wmode"
					}
				},
				{
					"id": 2278,
					"name": "wrap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1990,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.wrap"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2300,
						2173,
						2174,
						2283,
						2175,
						2176,
						2177,
						2178,
						2322,
						2323,
						2324,
						2325,
						2326,
						2327,
						2328,
						2329,
						2330,
						2331,
						2332,
						2333,
						2334,
						2335,
						2336,
						2337,
						2338,
						2339,
						2340,
						2341,
						2342,
						2343,
						2344,
						2345,
						2346,
						2347,
						2348,
						2349,
						2350,
						2351,
						2352,
						2353,
						2354,
						2355,
						2356,
						2357,
						2358,
						2359,
						2360,
						2361,
						2362,
						2363,
						2364,
						2365,
						2366,
						2367,
						2368,
						2369,
						2179,
						2180,
						2308,
						2181,
						2309,
						2182,
						2183,
						2310,
						2184,
						2185,
						2186,
						2188,
						2187,
						2189,
						2168,
						2190,
						2191,
						2284,
						2193,
						2311,
						2192,
						2194,
						2285,
						2286,
						2195,
						2196,
						2197,
						2370,
						2198,
						2301,
						2199,
						2200,
						2279,
						2280,
						2201,
						2287,
						2202,
						2203,
						2288,
						2204,
						2205,
						2206,
						2207,
						2208,
						2209,
						2210,
						2211,
						2212,
						2213,
						2289,
						2214,
						2169,
						2215,
						2216,
						2217,
						2218,
						2290,
						2302,
						2172,
						2320,
						2170,
						2219,
						2321,
						2315,
						2312,
						2316,
						2313,
						2314,
						2534,
						2220,
						2221,
						2222,
						2223,
						2291,
						2224,
						2225,
						2226,
						2227,
						2228,
						2229,
						2230,
						2231,
						2232,
						2233,
						2234,
						2235,
						2236,
						2237,
						2238,
						2239,
						2241,
						2240,
						2411,
						2412,
						2527,
						2528,
						2529,
						2530,
						2525,
						2526,
						2455,
						2456,
						2391,
						2392,
						2387,
						2388,
						2413,
						2414,
						2415,
						2416,
						2389,
						2390,
						2457,
						2458,
						2379,
						2380,
						2381,
						2382,
						2383,
						2384,
						2459,
						2460,
						2373,
						2374,
						2375,
						2376,
						2461,
						2462,
						2463,
						2464,
						2465,
						2466,
						2467,
						2468,
						2469,
						2470,
						2471,
						2472,
						2473,
						2474,
						2475,
						2476,
						2477,
						2478,
						2417,
						2418,
						2419,
						2420,
						2421,
						2422,
						2423,
						2424,
						2403,
						2404,
						2385,
						2386,
						2517,
						2518,
						2393,
						2394,
						2399,
						2400,
						2405,
						2406,
						2407,
						2408,
						2409,
						2410,
						2401,
						2402,
						2429,
						2430,
						2425,
						2426,
						2427,
						2428,
						2519,
						2520,
						2479,
						2480,
						2481,
						2482,
						2483,
						2484,
						2485,
						2486,
						2487,
						2488,
						2489,
						2490,
						2377,
						2378,
						2431,
						2432,
						2433,
						2434,
						2435,
						2436,
						2507,
						2508,
						2501,
						2502,
						2509,
						2510,
						2511,
						2512,
						2503,
						2504,
						2515,
						2516,
						2513,
						2514,
						2505,
						2506,
						2437,
						2438,
						2439,
						2440,
						2395,
						2396,
						2521,
						2522,
						2441,
						2442,
						2443,
						2444,
						2491,
						2492,
						2445,
						2446,
						2397,
						2398,
						2447,
						2448,
						2449,
						2450,
						2493,
						2494,
						2495,
						2496,
						2497,
						2498,
						2499,
						2500,
						2531,
						2532,
						2451,
						2452,
						2453,
						2454,
						2523,
						2524,
						2242,
						2243,
						2244,
						2245,
						2246,
						2247,
						2303,
						2248,
						2304,
						2298,
						2249,
						2533,
						2250,
						2251,
						2305,
						2317,
						2252,
						2299,
						2254,
						2253,
						2255,
						2256,
						2257,
						2258,
						2259,
						2318,
						2260,
						2261,
						2262,
						2263,
						2292,
						2264,
						2293,
						2265,
						2266,
						2267,
						2268,
						2269,
						2270,
						2294,
						2271,
						2281,
						2282,
						2295,
						2272,
						2296,
						2297,
						2273,
						2306,
						2319,
						2274,
						2275,
						2171,
						2307,
						2276,
						2277,
						2278
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Label/Label.tsx",
					"line": 9,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLLabelElement"
						}
					],
					"name": "HTMLProps"
				}
			]
		},
		{
			"id": 2543,
			"name": "MenuItemProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2546,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/Menu/Menu.tsx",
							"line": 45,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2547,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "You can put any type of content inside of a `<MenuItem>`.",
						"tags": [
							{
								"tag": "see",
								"text": "Docs https://reach.tech/menu-button#menuitem-children\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@reach/menu-button/dist/index.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ReachMenuItemProps.children"
					}
				},
				{
					"id": 2544,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/Menu/Menu.tsx",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2545,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/Menu/Menu.tsx",
							"line": 44,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"overwrites": {
						"type": "reference",
						"name": "ReachMenuItemProps.disabled"
					}
				},
				{
					"id": 2550,
					"name": "index",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@reach/menu-button/dist/index.d.ts",
							"line": 70,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ReachMenuItemProps.index"
					}
				},
				{
					"id": 2551,
					"name": "valueText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@reach/menu-button/dist/index.d.ts",
							"line": 72,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ReachMenuItemProps.valueText"
					}
				},
				{
					"id": 2548,
					"name": "onSelect",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 2549,
							"name": "onSelect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Callback that fires when a `MenuItem` is selected.",
								"tags": [
									{
										"tag": "see",
										"text": "Docs https://reach.tech/menu-button#menuitem-onselect\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ReachMenuItemProps.onSelect"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ReachMenuItemProps.onSelect"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2546,
						2547,
						2544,
						2545,
						2550,
						2551
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						2548
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 42,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ReachMenuItemProps"
				}
			]
		},
		{
			"id": 2537,
			"name": "MenuListProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2539,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/Menu/Menu.tsx",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 2541,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"comment": {
						"shortText": "Can contain only `MenuItem` or a `MenuLink`.",
						"tags": [
							{
								"tag": "see",
								"text": "Docs https://reach.tech/menu-button#menulist-children\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@reach/menu-button/dist/index.d.ts",
							"line": 160,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ReachMenuListProps.children"
					}
				},
				{
					"id": 2538,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/Menu/Menu.tsx",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2540,
					"name": "portal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not the popover should be rendered inside a portal. Defaults to\n`true`.",
						"tags": [
							{
								"tag": "see",
								"text": "Docs https://reach.tech/menu-button#menulist-portal\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@reach/menu-button/dist/index.d.ts",
							"line": 154,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ReachMenuListProps.portal"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2539,
						2541,
						2538,
						2540
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 37,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ReachMenuListProps"
				}
			]
		},
		{
			"id": 3099,
			"name": "TableContainerProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 3123,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.about"
					}
				},
				{
					"id": 3105,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1823,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.accessKey"
					}
				},
				{
					"id": 3145,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-activedescendant"
					}
				},
				{
					"id": 3146,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-atomic"
					}
				},
				{
					"id": 3147,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-autocomplete"
					}
				},
				{
					"id": 3148,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-busy"
					}
				},
				{
					"id": 3149,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-checked"
					}
				},
				{
					"id": 3150,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colcount"
					}
				},
				{
					"id": 3151,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colindex"
					}
				},
				{
					"id": 3152,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colspan"
					}
				},
				{
					"id": 3153,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-controls"
					}
				},
				{
					"id": 3154,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-current"
					}
				},
				{
					"id": 3155,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-describedby"
					}
				},
				{
					"id": 3156,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-details"
					}
				},
				{
					"id": 3157,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-disabled"
					}
				},
				{
					"id": 3158,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-dropeffect"
					}
				},
				{
					"id": 3159,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-errormessage"
					}
				},
				{
					"id": 3160,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-expanded"
					}
				},
				{
					"id": 3161,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-flowto"
					}
				},
				{
					"id": 3162,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-grabbed"
					}
				},
				{
					"id": 3163,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-haspopup"
					}
				},
				{
					"id": 3164,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-hidden"
					}
				},
				{
					"id": 3165,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-invalid"
					}
				},
				{
					"id": 3166,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-keyshortcuts"
					}
				},
				{
					"id": 3167,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-label"
					}
				},
				{
					"id": 3168,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-labelledby"
					}
				},
				{
					"id": 3169,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-level"
					}
				},
				{
					"id": 3170,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-live"
					}
				},
				{
					"id": 3171,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-modal"
					}
				},
				{
					"id": 3172,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-multiline"
					}
				},
				{
					"id": 3173,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-multiselectable"
					}
				},
				{
					"id": 3174,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-orientation"
					}
				},
				{
					"id": 3175,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-owns"
					}
				},
				{
					"id": 3176,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-placeholder"
					}
				},
				{
					"id": 3177,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-posinset"
					}
				},
				{
					"id": 3178,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-pressed"
					}
				},
				{
					"id": 3179,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-readonly"
					}
				},
				{
					"id": 3180,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-relevant"
					}
				},
				{
					"id": 3181,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-required"
					}
				},
				{
					"id": 3182,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-roledescription"
					}
				},
				{
					"id": 3183,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowcount"
					}
				},
				{
					"id": 3184,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowindex"
					}
				},
				{
					"id": 3185,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowspan"
					}
				},
				{
					"id": 3186,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-selected"
					}
				},
				{
					"id": 3187,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-setsize"
					}
				},
				{
					"id": 3188,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-sort"
					}
				},
				{
					"id": 3189,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuemax"
					}
				},
				{
					"id": 3190,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuemin"
					}
				},
				{
					"id": 3191,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuenow"
					}
				},
				{
					"id": 3192,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuetext"
					}
				},
				{
					"id": 3100,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/TableContainer/TableContainer.tsx",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 3131,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 3132,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 3133,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoSave"
					}
				},
				{
					"id": 3193,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.children"
					}
				},
				{
					"id": 3106,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.className"
					}
				},
				{
					"id": 3134,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.color"
					}
				},
				{
					"id": 3107,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1825,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 3108,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1826,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 3194,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3195,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3196,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3196
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 3124,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.datatype"
					}
				},
				{
					"id": 3101,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1817,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 3102,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1818,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 3109,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1827,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.dir"
					}
				},
				{
					"id": 3110,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1828,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.draggable"
					}
				},
				{
					"id": 3111,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1829,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.hidden"
					}
				},
				{
					"id": 3112,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1830,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.id"
					}
				},
				{
					"id": 3125,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.inlist"
					}
				},
				{
					"id": 3143,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.inputMode"
					}
				},
				{
					"id": 3144,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.is"
					}
				},
				{
					"id": 3138,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemID"
					}
				},
				{
					"id": 3135,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemProp"
					}
				},
				{
					"id": 3139,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemRef"
					}
				},
				{
					"id": 3136,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemScope"
					}
				},
				{
					"id": 3137,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemType"
					}
				},
				{
					"id": 3113,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.lang"
					}
				},
				{
					"id": 3235,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAbort"
					}
				},
				{
					"id": 3236,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAbortCapture"
					}
				},
				{
					"id": 3351,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationEnd"
					}
				},
				{
					"id": 3352,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 3353,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationIteration"
					}
				},
				{
					"id": 3354,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 3349,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationStart"
					}
				},
				{
					"id": 3350,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 3279,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAuxClick"
					}
				},
				{
					"id": 3280,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 3215,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBeforeInput"
					}
				},
				{
					"id": 3216,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 3211,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBlur"
					}
				},
				{
					"id": 3212,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBlurCapture"
					}
				},
				{
					"id": 3237,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlay"
					}
				},
				{
					"id": 3238,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 3239,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 3240,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 3213,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onChange"
					}
				},
				{
					"id": 3214,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onChangeCapture"
					}
				},
				{
					"id": 3281,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onClick"
					}
				},
				{
					"id": 3282,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onClickCapture"
					}
				},
				{
					"id": 3203,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionEnd"
					}
				},
				{
					"id": 3204,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 3205,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionStart"
					}
				},
				{
					"id": 3206,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 3207,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 3208,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 3283,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onContextMenu"
					}
				},
				{
					"id": 3284,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 3197,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCopy"
					}
				},
				{
					"id": 3198,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCopyCapture"
					}
				},
				{
					"id": 3199,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCut"
					}
				},
				{
					"id": 3200,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCutCapture"
					}
				},
				{
					"id": 3285,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDoubleClick"
					}
				},
				{
					"id": 3286,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 3287,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDrag"
					}
				},
				{
					"id": 3288,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragCapture"
					}
				},
				{
					"id": 3289,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnd"
					}
				},
				{
					"id": 3290,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEndCapture"
					}
				},
				{
					"id": 3291,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnter"
					}
				},
				{
					"id": 3292,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 3293,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragExit"
					}
				},
				{
					"id": 3294,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragExitCapture"
					}
				},
				{
					"id": 3295,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragLeave"
					}
				},
				{
					"id": 3296,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 3297,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragOver"
					}
				},
				{
					"id": 3298,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragOverCapture"
					}
				},
				{
					"id": 3299,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragStart"
					}
				},
				{
					"id": 3300,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragStartCapture"
					}
				},
				{
					"id": 3301,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDrop"
					}
				},
				{
					"id": 3302,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDropCapture"
					}
				},
				{
					"id": 3241,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDurationChange"
					}
				},
				{
					"id": 3242,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 3243,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEmptied"
					}
				},
				{
					"id": 3244,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 3245,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEncrypted"
					}
				},
				{
					"id": 3246,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 3247,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEnded"
					}
				},
				{
					"id": 3248,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEndedCapture"
					}
				},
				{
					"id": 3227,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onError"
					}
				},
				{
					"id": 3228,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onErrorCapture"
					}
				},
				{
					"id": 3209,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onFocus"
					}
				},
				{
					"id": 3210,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onFocusCapture"
					}
				},
				{
					"id": 3341,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 3342,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 3217,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInput"
					}
				},
				{
					"id": 3218,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInputCapture"
					}
				},
				{
					"id": 3223,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInvalid"
					}
				},
				{
					"id": 3224,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInvalidCapture"
					}
				},
				{
					"id": 3229,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyDown"
					}
				},
				{
					"id": 3230,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 3231,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyPress"
					}
				},
				{
					"id": 3232,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 3233,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyUp"
					}
				},
				{
					"id": 3234,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 3225,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoad"
					}
				},
				{
					"id": 3226,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadCapture"
					}
				},
				{
					"id": 3253,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadStart"
					}
				},
				{
					"id": 3254,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 3249,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedData"
					}
				},
				{
					"id": 3250,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 3251,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 3252,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 3343,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 3344,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 3303,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseDown"
					}
				},
				{
					"id": 3304,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 3305,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseEnter"
					}
				},
				{
					"id": 3306,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseLeave"
					}
				},
				{
					"id": 3307,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseMove"
					}
				},
				{
					"id": 3308,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 3309,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOut"
					}
				},
				{
					"id": 3310,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 3311,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOver"
					}
				},
				{
					"id": 3312,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 3313,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseUp"
					}
				},
				{
					"id": 3314,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 3201,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPaste"
					}
				},
				{
					"id": 3202,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPasteCapture"
					}
				},
				{
					"id": 3255,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPause"
					}
				},
				{
					"id": 3256,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPauseCapture"
					}
				},
				{
					"id": 3257,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlay"
					}
				},
				{
					"id": 3258,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlayCapture"
					}
				},
				{
					"id": 3259,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlaying"
					}
				},
				{
					"id": 3260,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlayingCapture"
					}
				},
				{
					"id": 3331,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerCancel"
					}
				},
				{
					"id": 3332,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 3325,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerDown"
					}
				},
				{
					"id": 3326,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 3333,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerEnter"
					}
				},
				{
					"id": 3334,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 3335,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerLeave"
					}
				},
				{
					"id": 3336,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 3327,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerMove"
					}
				},
				{
					"id": 3328,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 3339,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOut"
					}
				},
				{
					"id": 3340,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 3337,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOver"
					}
				},
				{
					"id": 3338,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 3329,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerUp"
					}
				},
				{
					"id": 3330,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 3261,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onProgress"
					}
				},
				{
					"id": 3262,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onProgressCapture"
					}
				},
				{
					"id": 3263,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onRateChange"
					}
				},
				{
					"id": 3264,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 3219,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onReset"
					}
				},
				{
					"id": 3220,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onResetCapture"
					}
				},
				{
					"id": 3345,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onScroll"
					}
				},
				{
					"id": 3346,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onScrollCapture"
					}
				},
				{
					"id": 3265,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeeked"
					}
				},
				{
					"id": 3266,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeekedCapture"
					}
				},
				{
					"id": 3267,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeeking"
					}
				},
				{
					"id": 3268,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeekingCapture"
					}
				},
				{
					"id": 3315,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSelect"
					}
				},
				{
					"id": 3316,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSelectCapture"
					}
				},
				{
					"id": 3269,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onStalled"
					}
				},
				{
					"id": 3270,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onStalledCapture"
					}
				},
				{
					"id": 3221,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSubmit"
					}
				},
				{
					"id": 3222,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSubmitCapture"
					}
				},
				{
					"id": 3271,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSuspend"
					}
				},
				{
					"id": 3272,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSuspendCapture"
					}
				},
				{
					"id": 3273,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTimeUpdate"
					}
				},
				{
					"id": 3274,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 3317,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchCancel"
					}
				},
				{
					"id": 3318,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 3319,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchEnd"
					}
				},
				{
					"id": 3320,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 3321,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchMove"
					}
				},
				{
					"id": 3322,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 3323,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchStart"
					}
				},
				{
					"id": 3324,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 3355,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTransitionEnd"
					}
				},
				{
					"id": 3356,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 3275,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onVolumeChange"
					}
				},
				{
					"id": 3276,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 3277,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWaiting"
					}
				},
				{
					"id": 3278,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWaitingCapture"
					}
				},
				{
					"id": 3347,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWheel"
					}
				},
				{
					"id": 3348,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWheelCapture"
					}
				},
				{
					"id": 3114,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1832,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.placeholder"
					}
				},
				{
					"id": 3126,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.prefix"
					}
				},
				{
					"id": 3127,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.property"
					}
				},
				{
					"id": 3121,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 3128,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.resource"
					}
				},
				{
					"id": 3140,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.results"
					}
				},
				{
					"id": 3122,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.role"
					}
				},
				{
					"id": 3141,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.security"
					}
				},
				{
					"id": 3115,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.slot"
					}
				},
				{
					"id": 3116,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1834,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 3117,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1835,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.style"
					}
				},
				{
					"id": 3103,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1819,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 3104,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1820,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 3118,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 3119,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.title"
					}
				},
				{
					"id": 3120,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.translate"
					}
				},
				{
					"id": 3129,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.typeof"
					}
				},
				{
					"id": 3142,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.unselectable"
					}
				},
				{
					"id": 3130,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1854,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.vocab"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3123,
						3105,
						3145,
						3146,
						3147,
						3148,
						3149,
						3150,
						3151,
						3152,
						3153,
						3154,
						3155,
						3156,
						3157,
						3158,
						3159,
						3160,
						3161,
						3162,
						3163,
						3164,
						3165,
						3166,
						3167,
						3168,
						3169,
						3170,
						3171,
						3172,
						3173,
						3174,
						3175,
						3176,
						3177,
						3178,
						3179,
						3180,
						3181,
						3182,
						3183,
						3184,
						3185,
						3186,
						3187,
						3188,
						3189,
						3190,
						3191,
						3192,
						3100,
						3131,
						3132,
						3133,
						3193,
						3106,
						3134,
						3107,
						3108,
						3194,
						3124,
						3101,
						3102,
						3109,
						3110,
						3111,
						3112,
						3125,
						3143,
						3144,
						3138,
						3135,
						3139,
						3136,
						3137,
						3113,
						3235,
						3236,
						3351,
						3352,
						3353,
						3354,
						3349,
						3350,
						3279,
						3280,
						3215,
						3216,
						3211,
						3212,
						3237,
						3238,
						3239,
						3240,
						3213,
						3214,
						3281,
						3282,
						3203,
						3204,
						3205,
						3206,
						3207,
						3208,
						3283,
						3284,
						3197,
						3198,
						3199,
						3200,
						3285,
						3286,
						3287,
						3288,
						3289,
						3290,
						3291,
						3292,
						3293,
						3294,
						3295,
						3296,
						3297,
						3298,
						3299,
						3300,
						3301,
						3302,
						3241,
						3242,
						3243,
						3244,
						3245,
						3246,
						3247,
						3248,
						3227,
						3228,
						3209,
						3210,
						3341,
						3342,
						3217,
						3218,
						3223,
						3224,
						3229,
						3230,
						3231,
						3232,
						3233,
						3234,
						3225,
						3226,
						3253,
						3254,
						3249,
						3250,
						3251,
						3252,
						3343,
						3344,
						3303,
						3304,
						3305,
						3306,
						3307,
						3308,
						3309,
						3310,
						3311,
						3312,
						3313,
						3314,
						3201,
						3202,
						3255,
						3256,
						3257,
						3258,
						3259,
						3260,
						3331,
						3332,
						3325,
						3326,
						3333,
						3334,
						3335,
						3336,
						3327,
						3328,
						3339,
						3340,
						3337,
						3338,
						3329,
						3330,
						3261,
						3262,
						3263,
						3264,
						3219,
						3220,
						3345,
						3346,
						3265,
						3266,
						3267,
						3268,
						3315,
						3316,
						3269,
						3270,
						3221,
						3222,
						3271,
						3272,
						3273,
						3274,
						3317,
						3318,
						3319,
						3320,
						3321,
						3322,
						3323,
						3324,
						3355,
						3356,
						3275,
						3276,
						3277,
						3278,
						3347,
						3348,
						3114,
						3126,
						3127,
						3121,
						3128,
						3140,
						3122,
						3141,
						3115,
						3116,
						3117,
						3103,
						3104,
						3118,
						3119,
						3120,
						3129,
						3142,
						3130
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/TableContainer/TableContainer.tsx",
					"line": 4,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLBaseElement"
						}
					],
					"name": "HTMLAttributes"
				}
			]
		},
		{
			"id": 2840,
			"name": "TableProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2865,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.about"
					}
				},
				{
					"id": 2847,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1823,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.accessKey"
					}
				},
				{
					"id": 2887,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-activedescendant"
					}
				},
				{
					"id": 2888,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-atomic"
					}
				},
				{
					"id": 2889,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-autocomplete"
					}
				},
				{
					"id": 2890,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-busy"
					}
				},
				{
					"id": 2891,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-checked"
					}
				},
				{
					"id": 2892,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colcount"
					}
				},
				{
					"id": 2893,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colindex"
					}
				},
				{
					"id": 2894,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colspan"
					}
				},
				{
					"id": 2895,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-controls"
					}
				},
				{
					"id": 2896,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-current"
					}
				},
				{
					"id": 2897,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-describedby"
					}
				},
				{
					"id": 2898,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-details"
					}
				},
				{
					"id": 2899,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-disabled"
					}
				},
				{
					"id": 2900,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-dropeffect"
					}
				},
				{
					"id": 2901,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-errormessage"
					}
				},
				{
					"id": 2902,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-expanded"
					}
				},
				{
					"id": 2903,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-flowto"
					}
				},
				{
					"id": 2904,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-grabbed"
					}
				},
				{
					"id": 2905,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-haspopup"
					}
				},
				{
					"id": 2906,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-hidden"
					}
				},
				{
					"id": 2907,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-invalid"
					}
				},
				{
					"id": 2908,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-keyshortcuts"
					}
				},
				{
					"id": 2909,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-label"
					}
				},
				{
					"id": 2910,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-labelledby"
					}
				},
				{
					"id": 2911,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-level"
					}
				},
				{
					"id": 2912,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-live"
					}
				},
				{
					"id": 2913,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-modal"
					}
				},
				{
					"id": 2914,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-multiline"
					}
				},
				{
					"id": 2915,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-multiselectable"
					}
				},
				{
					"id": 2916,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-orientation"
					}
				},
				{
					"id": 2917,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-owns"
					}
				},
				{
					"id": 2918,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-placeholder"
					}
				},
				{
					"id": 2919,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-posinset"
					}
				},
				{
					"id": 2920,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-pressed"
					}
				},
				{
					"id": 2921,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-readonly"
					}
				},
				{
					"id": 2922,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-relevant"
					}
				},
				{
					"id": 2923,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-required"
					}
				},
				{
					"id": 2924,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-roledescription"
					}
				},
				{
					"id": 2925,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowcount"
					}
				},
				{
					"id": 2926,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowindex"
					}
				},
				{
					"id": 2927,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowspan"
					}
				},
				{
					"id": 2928,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-selected"
					}
				},
				{
					"id": 2929,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-setsize"
					}
				},
				{
					"id": 2930,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-sort"
					}
				},
				{
					"id": 2931,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuemax"
					}
				},
				{
					"id": 2932,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuemin"
					}
				},
				{
					"id": 2933,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuenow"
					}
				},
				{
					"id": 2934,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuetext"
					}
				},
				{
					"id": 2873,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 2874,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 2875,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoSave"
					}
				},
				{
					"id": 2935,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.children"
					}
				},
				{
					"id": 2848,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.className"
					}
				},
				{
					"id": 2876,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.color"
					}
				},
				{
					"id": 2849,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1825,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 2850,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1826,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 2936,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2937,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2938,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2938
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 2866,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.datatype"
					}
				},
				{
					"id": 2843,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1817,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 2844,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1818,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 2851,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1827,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.dir"
					}
				},
				{
					"id": 2852,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1828,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.draggable"
					}
				},
				{
					"id": 2853,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1829,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.hidden"
					}
				},
				{
					"id": 2854,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1830,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.id"
					}
				},
				{
					"id": 2867,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.inlist"
					}
				},
				{
					"id": 2885,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.inputMode"
					}
				},
				{
					"id": 2886,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.is"
					}
				},
				{
					"id": 2880,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemID"
					}
				},
				{
					"id": 2877,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemProp"
					}
				},
				{
					"id": 2881,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemRef"
					}
				},
				{
					"id": 2878,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemScope"
					}
				},
				{
					"id": 2879,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemType"
					}
				},
				{
					"id": 2855,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.lang"
					}
				},
				{
					"id": 2977,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAbort"
					}
				},
				{
					"id": 2978,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAbortCapture"
					}
				},
				{
					"id": 3093,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationEnd"
					}
				},
				{
					"id": 3094,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 3095,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationIteration"
					}
				},
				{
					"id": 3096,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 3091,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationStart"
					}
				},
				{
					"id": 3092,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 3021,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAuxClick"
					}
				},
				{
					"id": 3022,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 2957,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBeforeInput"
					}
				},
				{
					"id": 2958,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 2953,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBlur"
					}
				},
				{
					"id": 2954,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBlurCapture"
					}
				},
				{
					"id": 2979,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlay"
					}
				},
				{
					"id": 2980,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 2981,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 2982,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 2955,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onChange"
					}
				},
				{
					"id": 2956,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onChangeCapture"
					}
				},
				{
					"id": 3023,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onClick"
					}
				},
				{
					"id": 3024,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onClickCapture"
					}
				},
				{
					"id": 2945,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionEnd"
					}
				},
				{
					"id": 2946,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 2947,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionStart"
					}
				},
				{
					"id": 2948,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 2949,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 2950,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 3025,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onContextMenu"
					}
				},
				{
					"id": 3026,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 2939,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCopy"
					}
				},
				{
					"id": 2940,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCopyCapture"
					}
				},
				{
					"id": 2941,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCut"
					}
				},
				{
					"id": 2942,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCutCapture"
					}
				},
				{
					"id": 3027,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDoubleClick"
					}
				},
				{
					"id": 3028,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 3029,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDrag"
					}
				},
				{
					"id": 3030,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragCapture"
					}
				},
				{
					"id": 3031,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnd"
					}
				},
				{
					"id": 3032,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEndCapture"
					}
				},
				{
					"id": 3033,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnter"
					}
				},
				{
					"id": 3034,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 3035,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragExit"
					}
				},
				{
					"id": 3036,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragExitCapture"
					}
				},
				{
					"id": 3037,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragLeave"
					}
				},
				{
					"id": 3038,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 3039,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragOver"
					}
				},
				{
					"id": 3040,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragOverCapture"
					}
				},
				{
					"id": 3041,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragStart"
					}
				},
				{
					"id": 3042,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragStartCapture"
					}
				},
				{
					"id": 3043,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDrop"
					}
				},
				{
					"id": 3044,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDropCapture"
					}
				},
				{
					"id": 2983,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDurationChange"
					}
				},
				{
					"id": 2984,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 2985,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEmptied"
					}
				},
				{
					"id": 2986,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 2987,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEncrypted"
					}
				},
				{
					"id": 2988,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 2989,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEnded"
					}
				},
				{
					"id": 2990,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEndedCapture"
					}
				},
				{
					"id": 2969,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onError"
					}
				},
				{
					"id": 2970,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onErrorCapture"
					}
				},
				{
					"id": 2951,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onFocus"
					}
				},
				{
					"id": 2952,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onFocusCapture"
					}
				},
				{
					"id": 3083,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 3084,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 2959,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInput"
					}
				},
				{
					"id": 2960,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInputCapture"
					}
				},
				{
					"id": 2965,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInvalid"
					}
				},
				{
					"id": 2966,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInvalidCapture"
					}
				},
				{
					"id": 2971,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyDown"
					}
				},
				{
					"id": 2972,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 2973,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyPress"
					}
				},
				{
					"id": 2974,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 2975,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyUp"
					}
				},
				{
					"id": 2976,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 2967,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoad"
					}
				},
				{
					"id": 2968,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadCapture"
					}
				},
				{
					"id": 2995,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadStart"
					}
				},
				{
					"id": 2996,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 2991,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedData"
					}
				},
				{
					"id": 2992,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 2993,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 2994,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 3085,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 3086,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 3045,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseDown"
					}
				},
				{
					"id": 3046,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 3047,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseEnter"
					}
				},
				{
					"id": 3048,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseLeave"
					}
				},
				{
					"id": 3049,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseMove"
					}
				},
				{
					"id": 3050,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 3051,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOut"
					}
				},
				{
					"id": 3052,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 3053,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOver"
					}
				},
				{
					"id": 3054,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 3055,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseUp"
					}
				},
				{
					"id": 3056,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 2943,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPaste"
					}
				},
				{
					"id": 2944,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPasteCapture"
					}
				},
				{
					"id": 2997,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPause"
					}
				},
				{
					"id": 2998,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPauseCapture"
					}
				},
				{
					"id": 2999,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlay"
					}
				},
				{
					"id": 3000,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlayCapture"
					}
				},
				{
					"id": 3001,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlaying"
					}
				},
				{
					"id": 3002,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlayingCapture"
					}
				},
				{
					"id": 3073,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerCancel"
					}
				},
				{
					"id": 3074,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 3067,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerDown"
					}
				},
				{
					"id": 3068,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 3075,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerEnter"
					}
				},
				{
					"id": 3076,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 3077,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerLeave"
					}
				},
				{
					"id": 3078,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 3069,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerMove"
					}
				},
				{
					"id": 3070,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 3081,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOut"
					}
				},
				{
					"id": 3082,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 3079,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOver"
					}
				},
				{
					"id": 3080,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 3071,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerUp"
					}
				},
				{
					"id": 3072,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 3003,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onProgress"
					}
				},
				{
					"id": 3004,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onProgressCapture"
					}
				},
				{
					"id": 3005,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onRateChange"
					}
				},
				{
					"id": 3006,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 2961,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onReset"
					}
				},
				{
					"id": 2962,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onResetCapture"
					}
				},
				{
					"id": 3087,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onScroll"
					}
				},
				{
					"id": 3088,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onScrollCapture"
					}
				},
				{
					"id": 3007,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeeked"
					}
				},
				{
					"id": 3008,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeekedCapture"
					}
				},
				{
					"id": 3009,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeeking"
					}
				},
				{
					"id": 3010,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeekingCapture"
					}
				},
				{
					"id": 3057,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSelect"
					}
				},
				{
					"id": 3058,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSelectCapture"
					}
				},
				{
					"id": 3011,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onStalled"
					}
				},
				{
					"id": 3012,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onStalledCapture"
					}
				},
				{
					"id": 2963,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSubmit"
					}
				},
				{
					"id": 2964,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSubmitCapture"
					}
				},
				{
					"id": 3013,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSuspend"
					}
				},
				{
					"id": 3014,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSuspendCapture"
					}
				},
				{
					"id": 3015,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTimeUpdate"
					}
				},
				{
					"id": 3016,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 3059,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchCancel"
					}
				},
				{
					"id": 3060,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 3061,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchEnd"
					}
				},
				{
					"id": 3062,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 3063,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchMove"
					}
				},
				{
					"id": 3064,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 3065,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchStart"
					}
				},
				{
					"id": 3066,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 3097,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTransitionEnd"
					}
				},
				{
					"id": 3098,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 3017,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onVolumeChange"
					}
				},
				{
					"id": 3018,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 3019,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWaiting"
					}
				},
				{
					"id": 3020,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWaitingCapture"
					}
				},
				{
					"id": 3089,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWheel"
					}
				},
				{
					"id": 3090,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWheelCapture"
					}
				},
				{
					"id": 2856,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1832,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.placeholder"
					}
				},
				{
					"id": 2868,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.prefix"
					}
				},
				{
					"id": 2869,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.property"
					}
				},
				{
					"id": 2863,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 2870,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.resource"
					}
				},
				{
					"id": 2882,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.results"
					}
				},
				{
					"id": 2864,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.role"
					}
				},
				{
					"id": 2883,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.security"
					}
				},
				{
					"id": 2857,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.slot"
					}
				},
				{
					"id": 2858,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1834,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 2859,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1835,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.style"
					}
				},
				{
					"id": 2845,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1819,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 2846,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1820,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 2860,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 2861,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.title"
					}
				},
				{
					"id": 2862,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.translate"
					}
				},
				{
					"id": 2871,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.typeof"
					}
				},
				{
					"id": 2884,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.unselectable"
					}
				},
				{
					"id": 2841,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Variant index, defines the 'look'."
					},
					"sources": [
						{
							"fileName": "src/components/Table/Table.tsx",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "Variant"
					}
				},
				{
					"id": 2872,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1854,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.vocab"
					}
				},
				{
					"id": 2842,
					"name": "vol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines volumne/size."
					},
					"sources": [
						{
							"fileName": "src/components/Table/Table.tsx",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 35,
						"name": "Volume"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2865,
						2847,
						2887,
						2888,
						2889,
						2890,
						2891,
						2892,
						2893,
						2894,
						2895,
						2896,
						2897,
						2898,
						2899,
						2900,
						2901,
						2902,
						2903,
						2904,
						2905,
						2906,
						2907,
						2908,
						2909,
						2910,
						2911,
						2912,
						2913,
						2914,
						2915,
						2916,
						2917,
						2918,
						2919,
						2920,
						2921,
						2922,
						2923,
						2924,
						2925,
						2926,
						2927,
						2928,
						2929,
						2930,
						2931,
						2932,
						2933,
						2934,
						2873,
						2874,
						2875,
						2935,
						2848,
						2876,
						2849,
						2850,
						2936,
						2866,
						2843,
						2844,
						2851,
						2852,
						2853,
						2854,
						2867,
						2885,
						2886,
						2880,
						2877,
						2881,
						2878,
						2879,
						2855,
						2977,
						2978,
						3093,
						3094,
						3095,
						3096,
						3091,
						3092,
						3021,
						3022,
						2957,
						2958,
						2953,
						2954,
						2979,
						2980,
						2981,
						2982,
						2955,
						2956,
						3023,
						3024,
						2945,
						2946,
						2947,
						2948,
						2949,
						2950,
						3025,
						3026,
						2939,
						2940,
						2941,
						2942,
						3027,
						3028,
						3029,
						3030,
						3031,
						3032,
						3033,
						3034,
						3035,
						3036,
						3037,
						3038,
						3039,
						3040,
						3041,
						3042,
						3043,
						3044,
						2983,
						2984,
						2985,
						2986,
						2987,
						2988,
						2989,
						2990,
						2969,
						2970,
						2951,
						2952,
						3083,
						3084,
						2959,
						2960,
						2965,
						2966,
						2971,
						2972,
						2973,
						2974,
						2975,
						2976,
						2967,
						2968,
						2995,
						2996,
						2991,
						2992,
						2993,
						2994,
						3085,
						3086,
						3045,
						3046,
						3047,
						3048,
						3049,
						3050,
						3051,
						3052,
						3053,
						3054,
						3055,
						3056,
						2943,
						2944,
						2997,
						2998,
						2999,
						3000,
						3001,
						3002,
						3073,
						3074,
						3067,
						3068,
						3075,
						3076,
						3077,
						3078,
						3069,
						3070,
						3081,
						3082,
						3079,
						3080,
						3071,
						3072,
						3003,
						3004,
						3005,
						3006,
						2961,
						2962,
						3087,
						3088,
						3007,
						3008,
						3009,
						3010,
						3057,
						3058,
						3011,
						3012,
						2963,
						2964,
						3013,
						3014,
						3015,
						3016,
						3059,
						3060,
						3061,
						3062,
						3063,
						3064,
						3065,
						3066,
						3097,
						3098,
						3017,
						3018,
						3019,
						3020,
						3089,
						3090,
						2856,
						2868,
						2869,
						2863,
						2870,
						2882,
						2864,
						2883,
						2857,
						2858,
						2859,
						2845,
						2846,
						2860,
						2861,
						2862,
						2871,
						2884,
						2841,
						2872,
						2842
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Table/Table.tsx",
					"line": 5,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLTableElement"
						}
					],
					"name": "HTMLAttributes"
				}
			]
		},
		{
			"id": 3357,
			"name": "TableRowProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 3381,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.about"
					}
				},
				{
					"id": 3363,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1823,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.accessKey"
					}
				},
				{
					"id": 3403,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-activedescendant"
					}
				},
				{
					"id": 3404,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-atomic"
					}
				},
				{
					"id": 3405,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-autocomplete"
					}
				},
				{
					"id": 3406,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-busy"
					}
				},
				{
					"id": 3407,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-checked"
					}
				},
				{
					"id": 3408,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colcount"
					}
				},
				{
					"id": 3409,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colindex"
					}
				},
				{
					"id": 3410,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colspan"
					}
				},
				{
					"id": 3411,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-controls"
					}
				},
				{
					"id": 3412,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-current"
					}
				},
				{
					"id": 3413,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-describedby"
					}
				},
				{
					"id": 3414,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-details"
					}
				},
				{
					"id": 3415,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-disabled"
					}
				},
				{
					"id": 3416,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-dropeffect"
					}
				},
				{
					"id": 3417,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-errormessage"
					}
				},
				{
					"id": 3418,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-expanded"
					}
				},
				{
					"id": 3419,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-flowto"
					}
				},
				{
					"id": 3420,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-grabbed"
					}
				},
				{
					"id": 3421,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-haspopup"
					}
				},
				{
					"id": 3422,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-hidden"
					}
				},
				{
					"id": 3423,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-invalid"
					}
				},
				{
					"id": 3424,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-keyshortcuts"
					}
				},
				{
					"id": 3425,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-label"
					}
				},
				{
					"id": 3426,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-labelledby"
					}
				},
				{
					"id": 3427,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-level"
					}
				},
				{
					"id": 3428,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-live"
					}
				},
				{
					"id": 3429,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-modal"
					}
				},
				{
					"id": 3430,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-multiline"
					}
				},
				{
					"id": 3431,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-multiselectable"
					}
				},
				{
					"id": 3432,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-orientation"
					}
				},
				{
					"id": 3433,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-owns"
					}
				},
				{
					"id": 3434,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-placeholder"
					}
				},
				{
					"id": 3435,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-posinset"
					}
				},
				{
					"id": 3436,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-pressed"
					}
				},
				{
					"id": 3437,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-readonly"
					}
				},
				{
					"id": 3438,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-relevant"
					}
				},
				{
					"id": 3439,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-required"
					}
				},
				{
					"id": 3440,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-roledescription"
					}
				},
				{
					"id": 3441,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowcount"
					}
				},
				{
					"id": 3442,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowindex"
					}
				},
				{
					"id": 3443,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowspan"
					}
				},
				{
					"id": 3444,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-selected"
					}
				},
				{
					"id": 3445,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-setsize"
					}
				},
				{
					"id": 3446,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-sort"
					}
				},
				{
					"id": 3447,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuemax"
					}
				},
				{
					"id": 3448,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuemin"
					}
				},
				{
					"id": 3449,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuenow"
					}
				},
				{
					"id": 3450,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuetext"
					}
				},
				{
					"id": 3389,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 3390,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 3391,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoSave"
					}
				},
				{
					"id": 3451,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.children"
					}
				},
				{
					"id": 3364,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.className"
					}
				},
				{
					"id": 3392,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.color"
					}
				},
				{
					"id": 3365,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1825,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 3366,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1826,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 3452,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3453,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3454,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3454
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 3382,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.datatype"
					}
				},
				{
					"id": 3359,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1817,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 3360,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1818,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 3367,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1827,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.dir"
					}
				},
				{
					"id": 3368,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1828,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.draggable"
					}
				},
				{
					"id": 3369,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1829,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.hidden"
					}
				},
				{
					"id": 3370,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1830,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.id"
					}
				},
				{
					"id": 3383,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.inlist"
					}
				},
				{
					"id": 3401,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.inputMode"
					}
				},
				{
					"id": 3402,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.is"
					}
				},
				{
					"id": 3396,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemID"
					}
				},
				{
					"id": 3393,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemProp"
					}
				},
				{
					"id": 3397,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemRef"
					}
				},
				{
					"id": 3394,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemScope"
					}
				},
				{
					"id": 3395,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemType"
					}
				},
				{
					"id": 3371,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.lang"
					}
				},
				{
					"id": 3493,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAbort"
					}
				},
				{
					"id": 3494,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAbortCapture"
					}
				},
				{
					"id": 3609,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationEnd"
					}
				},
				{
					"id": 3610,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 3611,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationIteration"
					}
				},
				{
					"id": 3612,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 3607,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationStart"
					}
				},
				{
					"id": 3608,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 3537,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAuxClick"
					}
				},
				{
					"id": 3538,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 3473,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBeforeInput"
					}
				},
				{
					"id": 3474,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 3469,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBlur"
					}
				},
				{
					"id": 3470,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBlurCapture"
					}
				},
				{
					"id": 3495,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlay"
					}
				},
				{
					"id": 3496,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 3497,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 3498,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 3471,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onChange"
					}
				},
				{
					"id": 3472,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onChangeCapture"
					}
				},
				{
					"id": 3539,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onClick"
					}
				},
				{
					"id": 3540,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onClickCapture"
					}
				},
				{
					"id": 3461,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionEnd"
					}
				},
				{
					"id": 3462,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 3463,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionStart"
					}
				},
				{
					"id": 3464,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 3465,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 3466,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 3541,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onContextMenu"
					}
				},
				{
					"id": 3542,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 3455,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCopy"
					}
				},
				{
					"id": 3456,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCopyCapture"
					}
				},
				{
					"id": 3457,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCut"
					}
				},
				{
					"id": 3458,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCutCapture"
					}
				},
				{
					"id": 3543,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDoubleClick"
					}
				},
				{
					"id": 3544,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 3545,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDrag"
					}
				},
				{
					"id": 3546,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragCapture"
					}
				},
				{
					"id": 3547,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnd"
					}
				},
				{
					"id": 3548,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEndCapture"
					}
				},
				{
					"id": 3549,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnter"
					}
				},
				{
					"id": 3550,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 3551,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragExit"
					}
				},
				{
					"id": 3552,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragExitCapture"
					}
				},
				{
					"id": 3553,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragLeave"
					}
				},
				{
					"id": 3554,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 3555,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragOver"
					}
				},
				{
					"id": 3556,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragOverCapture"
					}
				},
				{
					"id": 3557,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragStart"
					}
				},
				{
					"id": 3558,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragStartCapture"
					}
				},
				{
					"id": 3559,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDrop"
					}
				},
				{
					"id": 3560,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDropCapture"
					}
				},
				{
					"id": 3499,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDurationChange"
					}
				},
				{
					"id": 3500,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 3501,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEmptied"
					}
				},
				{
					"id": 3502,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 3503,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEncrypted"
					}
				},
				{
					"id": 3504,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 3505,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEnded"
					}
				},
				{
					"id": 3506,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEndedCapture"
					}
				},
				{
					"id": 3485,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onError"
					}
				},
				{
					"id": 3486,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onErrorCapture"
					}
				},
				{
					"id": 3467,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onFocus"
					}
				},
				{
					"id": 3468,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onFocusCapture"
					}
				},
				{
					"id": 3599,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 3600,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 3475,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInput"
					}
				},
				{
					"id": 3476,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInputCapture"
					}
				},
				{
					"id": 3481,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInvalid"
					}
				},
				{
					"id": 3482,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInvalidCapture"
					}
				},
				{
					"id": 3487,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyDown"
					}
				},
				{
					"id": 3488,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 3489,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyPress"
					}
				},
				{
					"id": 3490,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 3491,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyUp"
					}
				},
				{
					"id": 3492,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 3483,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoad"
					}
				},
				{
					"id": 3484,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadCapture"
					}
				},
				{
					"id": 3511,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadStart"
					}
				},
				{
					"id": 3512,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 3507,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedData"
					}
				},
				{
					"id": 3508,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 3509,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 3510,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 3601,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 3602,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 3561,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseDown"
					}
				},
				{
					"id": 3562,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 3563,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseEnter"
					}
				},
				{
					"id": 3564,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseLeave"
					}
				},
				{
					"id": 3565,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseMove"
					}
				},
				{
					"id": 3566,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 3567,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOut"
					}
				},
				{
					"id": 3568,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 3569,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOver"
					}
				},
				{
					"id": 3570,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 3571,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseUp"
					}
				},
				{
					"id": 3572,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 3459,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPaste"
					}
				},
				{
					"id": 3460,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPasteCapture"
					}
				},
				{
					"id": 3513,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPause"
					}
				},
				{
					"id": 3514,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPauseCapture"
					}
				},
				{
					"id": 3515,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlay"
					}
				},
				{
					"id": 3516,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlayCapture"
					}
				},
				{
					"id": 3517,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlaying"
					}
				},
				{
					"id": 3518,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlayingCapture"
					}
				},
				{
					"id": 3589,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerCancel"
					}
				},
				{
					"id": 3590,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 3583,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerDown"
					}
				},
				{
					"id": 3584,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 3591,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerEnter"
					}
				},
				{
					"id": 3592,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 3593,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerLeave"
					}
				},
				{
					"id": 3594,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 3585,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerMove"
					}
				},
				{
					"id": 3586,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 3597,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOut"
					}
				},
				{
					"id": 3598,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 3595,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOver"
					}
				},
				{
					"id": 3596,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 3587,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerUp"
					}
				},
				{
					"id": 3588,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 3519,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onProgress"
					}
				},
				{
					"id": 3520,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onProgressCapture"
					}
				},
				{
					"id": 3521,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onRateChange"
					}
				},
				{
					"id": 3522,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 3477,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onReset"
					}
				},
				{
					"id": 3478,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onResetCapture"
					}
				},
				{
					"id": 3603,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onScroll"
					}
				},
				{
					"id": 3604,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onScrollCapture"
					}
				},
				{
					"id": 3523,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeeked"
					}
				},
				{
					"id": 3524,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeekedCapture"
					}
				},
				{
					"id": 3525,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeeking"
					}
				},
				{
					"id": 3526,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeekingCapture"
					}
				},
				{
					"id": 3573,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSelect"
					}
				},
				{
					"id": 3574,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSelectCapture"
					}
				},
				{
					"id": 3527,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onStalled"
					}
				},
				{
					"id": 3528,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onStalledCapture"
					}
				},
				{
					"id": 3479,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSubmit"
					}
				},
				{
					"id": 3480,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSubmitCapture"
					}
				},
				{
					"id": 3529,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSuspend"
					}
				},
				{
					"id": 3530,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSuspendCapture"
					}
				},
				{
					"id": 3531,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTimeUpdate"
					}
				},
				{
					"id": 3532,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 3575,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchCancel"
					}
				},
				{
					"id": 3576,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 3577,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchEnd"
					}
				},
				{
					"id": 3578,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 3579,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchMove"
					}
				},
				{
					"id": 3580,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 3581,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchStart"
					}
				},
				{
					"id": 3582,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 3613,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTransitionEnd"
					}
				},
				{
					"id": 3614,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 3533,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onVolumeChange"
					}
				},
				{
					"id": 3534,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 3535,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWaiting"
					}
				},
				{
					"id": 3536,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWaitingCapture"
					}
				},
				{
					"id": 3605,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWheel"
					}
				},
				{
					"id": 3606,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTableRowElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWheelCapture"
					}
				},
				{
					"id": 3372,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1832,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.placeholder"
					}
				},
				{
					"id": 3384,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.prefix"
					}
				},
				{
					"id": 3385,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.property"
					}
				},
				{
					"id": 3379,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 3386,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.resource"
					}
				},
				{
					"id": 3398,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.results"
					}
				},
				{
					"id": 3380,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.role"
					}
				},
				{
					"id": 3399,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.security"
					}
				},
				{
					"id": 3358,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines volumne/size."
					},
					"sources": [
						{
							"fileName": "src/components/TableRow/TableRow.tsx",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 3373,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.slot"
					}
				},
				{
					"id": 3374,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1834,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 3375,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1835,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.style"
					}
				},
				{
					"id": 3361,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1819,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 3362,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1820,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 3376,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 3377,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.title"
					}
				},
				{
					"id": 3378,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.translate"
					}
				},
				{
					"id": 3387,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.typeof"
					}
				},
				{
					"id": 3400,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.unselectable"
					}
				},
				{
					"id": 3388,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1854,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.vocab"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3381,
						3363,
						3403,
						3404,
						3405,
						3406,
						3407,
						3408,
						3409,
						3410,
						3411,
						3412,
						3413,
						3414,
						3415,
						3416,
						3417,
						3418,
						3419,
						3420,
						3421,
						3422,
						3423,
						3424,
						3425,
						3426,
						3427,
						3428,
						3429,
						3430,
						3431,
						3432,
						3433,
						3434,
						3435,
						3436,
						3437,
						3438,
						3439,
						3440,
						3441,
						3442,
						3443,
						3444,
						3445,
						3446,
						3447,
						3448,
						3449,
						3450,
						3389,
						3390,
						3391,
						3451,
						3364,
						3392,
						3365,
						3366,
						3452,
						3382,
						3359,
						3360,
						3367,
						3368,
						3369,
						3370,
						3383,
						3401,
						3402,
						3396,
						3393,
						3397,
						3394,
						3395,
						3371,
						3493,
						3494,
						3609,
						3610,
						3611,
						3612,
						3607,
						3608,
						3537,
						3538,
						3473,
						3474,
						3469,
						3470,
						3495,
						3496,
						3497,
						3498,
						3471,
						3472,
						3539,
						3540,
						3461,
						3462,
						3463,
						3464,
						3465,
						3466,
						3541,
						3542,
						3455,
						3456,
						3457,
						3458,
						3543,
						3544,
						3545,
						3546,
						3547,
						3548,
						3549,
						3550,
						3551,
						3552,
						3553,
						3554,
						3555,
						3556,
						3557,
						3558,
						3559,
						3560,
						3499,
						3500,
						3501,
						3502,
						3503,
						3504,
						3505,
						3506,
						3485,
						3486,
						3467,
						3468,
						3599,
						3600,
						3475,
						3476,
						3481,
						3482,
						3487,
						3488,
						3489,
						3490,
						3491,
						3492,
						3483,
						3484,
						3511,
						3512,
						3507,
						3508,
						3509,
						3510,
						3601,
						3602,
						3561,
						3562,
						3563,
						3564,
						3565,
						3566,
						3567,
						3568,
						3569,
						3570,
						3571,
						3572,
						3459,
						3460,
						3513,
						3514,
						3515,
						3516,
						3517,
						3518,
						3589,
						3590,
						3583,
						3584,
						3591,
						3592,
						3593,
						3594,
						3585,
						3586,
						3597,
						3598,
						3595,
						3596,
						3587,
						3588,
						3519,
						3520,
						3521,
						3522,
						3477,
						3478,
						3603,
						3604,
						3523,
						3524,
						3525,
						3526,
						3573,
						3574,
						3527,
						3528,
						3479,
						3480,
						3529,
						3530,
						3531,
						3532,
						3575,
						3576,
						3577,
						3578,
						3579,
						3580,
						3581,
						3582,
						3613,
						3614,
						3533,
						3534,
						3535,
						3536,
						3605,
						3606,
						3372,
						3384,
						3385,
						3379,
						3386,
						3398,
						3380,
						3399,
						3358,
						3373,
						3374,
						3375,
						3361,
						3362,
						3376,
						3377,
						3378,
						3387,
						3400,
						3388
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/TableRow/TableRow.tsx",
					"line": 4,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLTableRowElement"
						}
					],
					"name": "HTMLAttributes"
				}
			]
		},
		{
			"id": 2570,
			"name": "TextProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 2599,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.about"
					}
				},
				{
					"id": 2581,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1823,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.accessKey"
					}
				},
				{
					"id": 2621,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-activedescendant"
					}
				},
				{
					"id": 2622,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-atomic"
					}
				},
				{
					"id": 2623,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-autocomplete"
					}
				},
				{
					"id": 2624,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-busy"
					}
				},
				{
					"id": 2625,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-checked"
					}
				},
				{
					"id": 2626,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colcount"
					}
				},
				{
					"id": 2627,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colindex"
					}
				},
				{
					"id": 2628,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-colspan"
					}
				},
				{
					"id": 2629,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-controls"
					}
				},
				{
					"id": 2630,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-current"
					}
				},
				{
					"id": 2631,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-describedby"
					}
				},
				{
					"id": 2632,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-details"
					}
				},
				{
					"id": 2633,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-disabled"
					}
				},
				{
					"id": 2634,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-dropeffect"
					}
				},
				{
					"id": 2635,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-errormessage"
					}
				},
				{
					"id": 2636,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-expanded"
					}
				},
				{
					"id": 2637,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-flowto"
					}
				},
				{
					"id": 2638,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-grabbed"
					}
				},
				{
					"id": 2639,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-haspopup"
					}
				},
				{
					"id": 2640,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-hidden"
					}
				},
				{
					"id": 2641,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-invalid"
					}
				},
				{
					"id": 2642,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-keyshortcuts"
					}
				},
				{
					"id": 2643,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-label"
					}
				},
				{
					"id": 2644,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-labelledby"
					}
				},
				{
					"id": 2645,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-level"
					}
				},
				{
					"id": 2646,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-live"
					}
				},
				{
					"id": 2647,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-modal"
					}
				},
				{
					"id": 2648,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-multiline"
					}
				},
				{
					"id": 2649,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-multiselectable"
					}
				},
				{
					"id": 2650,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-orientation"
					}
				},
				{
					"id": 2651,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-owns"
					}
				},
				{
					"id": 2652,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-placeholder"
					}
				},
				{
					"id": 2653,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-posinset"
					}
				},
				{
					"id": 2654,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-pressed"
					}
				},
				{
					"id": 2655,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-readonly"
					}
				},
				{
					"id": 2656,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-relevant"
					}
				},
				{
					"id": 2657,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-required"
					}
				},
				{
					"id": 2658,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-roledescription"
					}
				},
				{
					"id": 2659,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowcount"
					}
				},
				{
					"id": 2660,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowindex"
					}
				},
				{
					"id": 2661,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-rowspan"
					}
				},
				{
					"id": 2662,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-selected"
					}
				},
				{
					"id": 2663,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-setsize"
					}
				},
				{
					"id": 2664,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-sort"
					}
				},
				{
					"id": 2665,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuemax"
					}
				},
				{
					"id": 2666,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuemin"
					}
				},
				{
					"id": 2667,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuenow"
					}
				},
				{
					"id": 2668,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.aria-valuetext"
					}
				},
				{
					"id": 2571,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "HTML as to render as this Text item."
					},
					"sources": [
						{
							"fileName": "src/components/Text/Text.tsx",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2607,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoCapitalize"
					}
				},
				{
					"id": 2608,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoCorrect"
					}
				},
				{
					"id": 2609,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.autoSave"
					}
				},
				{
					"id": 2669,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.children"
					}
				},
				{
					"id": 2582,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.className"
					}
				},
				{
					"id": 2610,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.color"
					}
				},
				{
					"id": 2583,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1825,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.contentEditable"
					}
				},
				{
					"id": 2584,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1826,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.contextMenu"
					}
				},
				{
					"id": 2670,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2671,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2672,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2672
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 2600,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.datatype"
					}
				},
				{
					"id": 2577,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1817,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.defaultChecked"
					}
				},
				{
					"id": 2578,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1818,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.defaultValue"
					}
				},
				{
					"id": 2585,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1827,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.dir"
					}
				},
				{
					"id": 2586,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1828,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.draggable"
					}
				},
				{
					"id": 2587,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1829,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.hidden"
					}
				},
				{
					"id": 2588,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1830,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.id"
					}
				},
				{
					"id": 2601,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.inlist"
					}
				},
				{
					"id": 2619,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.inputMode"
					}
				},
				{
					"id": 2620,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.is"
					}
				},
				{
					"id": 2614,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemID"
					}
				},
				{
					"id": 2611,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemProp"
					}
				},
				{
					"id": 2615,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemRef"
					}
				},
				{
					"id": 2612,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemScope"
					}
				},
				{
					"id": 2613,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.itemType"
					}
				},
				{
					"id": 2589,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.lang"
					}
				},
				{
					"id": 2711,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAbort"
					}
				},
				{
					"id": 2712,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAbortCapture"
					}
				},
				{
					"id": 2827,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationEnd"
					}
				},
				{
					"id": 2828,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationEndCapture"
					}
				},
				{
					"id": 2829,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationIteration"
					}
				},
				{
					"id": 2830,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationIterationCapture"
					}
				},
				{
					"id": 2825,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationStart"
					}
				},
				{
					"id": 2826,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAnimationStartCapture"
					}
				},
				{
					"id": 2755,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAuxClick"
					}
				},
				{
					"id": 2756,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onAuxClickCapture"
					}
				},
				{
					"id": 2691,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBeforeInput"
					}
				},
				{
					"id": 2692,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBeforeInputCapture"
					}
				},
				{
					"id": 2687,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBlur"
					}
				},
				{
					"id": 2688,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onBlurCapture"
					}
				},
				{
					"id": 2713,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlay"
					}
				},
				{
					"id": 2714,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayCapture"
					}
				},
				{
					"id": 2715,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayThrough"
					}
				},
				{
					"id": 2716,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCanPlayThroughCapture"
					}
				},
				{
					"id": 2689,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onChange"
					}
				},
				{
					"id": 2690,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onChangeCapture"
					}
				},
				{
					"id": 2757,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onClick"
					}
				},
				{
					"id": 2758,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onClickCapture"
					}
				},
				{
					"id": 2679,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionEnd"
					}
				},
				{
					"id": 2680,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionEndCapture"
					}
				},
				{
					"id": 2681,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionStart"
					}
				},
				{
					"id": 2682,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionStartCapture"
					}
				},
				{
					"id": 2683,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionUpdate"
					}
				},
				{
					"id": 2684,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCompositionUpdateCapture"
					}
				},
				{
					"id": 2759,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onContextMenu"
					}
				},
				{
					"id": 2760,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onContextMenuCapture"
					}
				},
				{
					"id": 2673,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCopy"
					}
				},
				{
					"id": 2674,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCopyCapture"
					}
				},
				{
					"id": 2675,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCut"
					}
				},
				{
					"id": 2676,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onCutCapture"
					}
				},
				{
					"id": 2761,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDoubleClick"
					}
				},
				{
					"id": 2762,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDoubleClickCapture"
					}
				},
				{
					"id": 2763,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDrag"
					}
				},
				{
					"id": 2764,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragCapture"
					}
				},
				{
					"id": 2765,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnd"
					}
				},
				{
					"id": 2766,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEndCapture"
					}
				},
				{
					"id": 2767,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnter"
					}
				},
				{
					"id": 2768,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragEnterCapture"
					}
				},
				{
					"id": 2769,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragExit"
					}
				},
				{
					"id": 2770,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragExitCapture"
					}
				},
				{
					"id": 2771,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragLeave"
					}
				},
				{
					"id": 2772,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragLeaveCapture"
					}
				},
				{
					"id": 2773,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragOver"
					}
				},
				{
					"id": 2774,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragOverCapture"
					}
				},
				{
					"id": 2775,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragStart"
					}
				},
				{
					"id": 2776,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDragStartCapture"
					}
				},
				{
					"id": 2777,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDrop"
					}
				},
				{
					"id": 2778,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDropCapture"
					}
				},
				{
					"id": 2717,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDurationChange"
					}
				},
				{
					"id": 2718,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onDurationChangeCapture"
					}
				},
				{
					"id": 2719,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEmptied"
					}
				},
				{
					"id": 2720,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEmptiedCapture"
					}
				},
				{
					"id": 2721,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEncrypted"
					}
				},
				{
					"id": 2722,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEncryptedCapture"
					}
				},
				{
					"id": 2723,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEnded"
					}
				},
				{
					"id": 2724,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onEndedCapture"
					}
				},
				{
					"id": 2703,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onError"
					}
				},
				{
					"id": 2704,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onErrorCapture"
					}
				},
				{
					"id": 2685,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onFocus"
					}
				},
				{
					"id": 2686,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onFocusCapture"
					}
				},
				{
					"id": 2817,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onGotPointerCapture"
					}
				},
				{
					"id": 2818,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 2693,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInput"
					}
				},
				{
					"id": 2694,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInputCapture"
					}
				},
				{
					"id": 2699,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInvalid"
					}
				},
				{
					"id": 2700,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onInvalidCapture"
					}
				},
				{
					"id": 2705,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyDown"
					}
				},
				{
					"id": 2706,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyDownCapture"
					}
				},
				{
					"id": 2707,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyPress"
					}
				},
				{
					"id": 2708,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyPressCapture"
					}
				},
				{
					"id": 2709,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyUp"
					}
				},
				{
					"id": 2710,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onKeyUpCapture"
					}
				},
				{
					"id": 2701,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoad"
					}
				},
				{
					"id": 2702,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadCapture"
					}
				},
				{
					"id": 2729,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadStart"
					}
				},
				{
					"id": 2730,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadStartCapture"
					}
				},
				{
					"id": 2725,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedData"
					}
				},
				{
					"id": 2726,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedDataCapture"
					}
				},
				{
					"id": 2727,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedMetadata"
					}
				},
				{
					"id": 2728,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLoadedMetadataCapture"
					}
				},
				{
					"id": 2819,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLostPointerCapture"
					}
				},
				{
					"id": 2820,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 2779,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseDown"
					}
				},
				{
					"id": 2780,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseDownCapture"
					}
				},
				{
					"id": 2781,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseEnter"
					}
				},
				{
					"id": 2782,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseLeave"
					}
				},
				{
					"id": 2783,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseMove"
					}
				},
				{
					"id": 2784,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseMoveCapture"
					}
				},
				{
					"id": 2785,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOut"
					}
				},
				{
					"id": 2786,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOutCapture"
					}
				},
				{
					"id": 2787,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOver"
					}
				},
				{
					"id": 2788,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseOverCapture"
					}
				},
				{
					"id": 2789,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseUp"
					}
				},
				{
					"id": 2790,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onMouseUpCapture"
					}
				},
				{
					"id": 2677,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPaste"
					}
				},
				{
					"id": 2678,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPasteCapture"
					}
				},
				{
					"id": 2731,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPause"
					}
				},
				{
					"id": 2732,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPauseCapture"
					}
				},
				{
					"id": 2733,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlay"
					}
				},
				{
					"id": 2734,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlayCapture"
					}
				},
				{
					"id": 2735,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlaying"
					}
				},
				{
					"id": 2736,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPlayingCapture"
					}
				},
				{
					"id": 2807,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerCancel"
					}
				},
				{
					"id": 2808,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerCancelCapture"
					}
				},
				{
					"id": 2801,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerDown"
					}
				},
				{
					"id": 2802,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerDownCapture"
					}
				},
				{
					"id": 2809,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerEnter"
					}
				},
				{
					"id": 2810,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerEnterCapture"
					}
				},
				{
					"id": 2811,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerLeave"
					}
				},
				{
					"id": 2812,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerLeaveCapture"
					}
				},
				{
					"id": 2803,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerMove"
					}
				},
				{
					"id": 2804,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerMoveCapture"
					}
				},
				{
					"id": 2815,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOut"
					}
				},
				{
					"id": 2816,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOutCapture"
					}
				},
				{
					"id": 2813,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOver"
					}
				},
				{
					"id": 2814,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerOverCapture"
					}
				},
				{
					"id": 2805,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerUp"
					}
				},
				{
					"id": 2806,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onPointerUpCapture"
					}
				},
				{
					"id": 2737,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onProgress"
					}
				},
				{
					"id": 2738,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onProgressCapture"
					}
				},
				{
					"id": 2739,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onRateChange"
					}
				},
				{
					"id": 2740,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onRateChangeCapture"
					}
				},
				{
					"id": 2695,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onReset"
					}
				},
				{
					"id": 2696,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onResetCapture"
					}
				},
				{
					"id": 2821,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onScroll"
					}
				},
				{
					"id": 2822,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onScrollCapture"
					}
				},
				{
					"id": 2741,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeeked"
					}
				},
				{
					"id": 2742,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeekedCapture"
					}
				},
				{
					"id": 2743,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeeking"
					}
				},
				{
					"id": 2744,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSeekingCapture"
					}
				},
				{
					"id": 2791,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSelect"
					}
				},
				{
					"id": 2792,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSelectCapture"
					}
				},
				{
					"id": 2745,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onStalled"
					}
				},
				{
					"id": 2746,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onStalledCapture"
					}
				},
				{
					"id": 2697,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSubmit"
					}
				},
				{
					"id": 2698,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSubmitCapture"
					}
				},
				{
					"id": 2747,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSuspend"
					}
				},
				{
					"id": 2748,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onSuspendCapture"
					}
				},
				{
					"id": 2749,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTimeUpdate"
					}
				},
				{
					"id": 2750,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTimeUpdateCapture"
					}
				},
				{
					"id": 2793,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchCancel"
					}
				},
				{
					"id": 2794,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchCancelCapture"
					}
				},
				{
					"id": 2795,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchEnd"
					}
				},
				{
					"id": 2796,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchEndCapture"
					}
				},
				{
					"id": 2797,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchMove"
					}
				},
				{
					"id": 2798,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchMoveCapture"
					}
				},
				{
					"id": 2799,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchStart"
					}
				},
				{
					"id": 2800,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTouchStartCapture"
					}
				},
				{
					"id": 2831,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTransitionEnd"
					}
				},
				{
					"id": 2832,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onTransitionEndCapture"
					}
				},
				{
					"id": 2751,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onVolumeChange"
					}
				},
				{
					"id": 2752,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onVolumeChangeCapture"
					}
				},
				{
					"id": 2753,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWaiting"
					}
				},
				{
					"id": 2754,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWaitingCapture"
					}
				},
				{
					"id": 2823,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWheel"
					}
				},
				{
					"id": 2824,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLBaseElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.onWheelCapture"
					}
				},
				{
					"id": 2590,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1832,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.placeholder"
					}
				},
				{
					"id": 2602,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.prefix"
					}
				},
				{
					"id": 2603,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.property"
					}
				},
				{
					"id": 2597,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.radioGroup"
					}
				},
				{
					"id": 2604,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.resource"
					}
				},
				{
					"id": 2616,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.results"
					}
				},
				{
					"id": 2598,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.role"
					}
				},
				{
					"id": 2617,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.security"
					}
				},
				{
					"id": 2591,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.slot"
					}
				},
				{
					"id": 2592,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1834,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.spellCheck"
					}
				},
				{
					"id": 2593,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1835,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.style"
					}
				},
				{
					"id": 2579,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1819,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.suppressContentEditableWarning"
					}
				},
				{
					"id": 2580,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1820,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.suppressHydrationWarning"
					}
				},
				{
					"id": 2594,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.tabIndex"
					}
				},
				{
					"id": 2595,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.title"
					}
				},
				{
					"id": 2596,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.translate"
					}
				},
				{
					"id": 2572,
					"name": "truncate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Single line truncation - requires a 'known' width."
					},
					"sources": [
						{
							"fileName": "src/components/Text/Text.tsx",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2605,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.typeof"
					}
				},
				{
					"id": 2618,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.unselectable"
					}
				},
				{
					"id": 2573,
					"name": "uppercase",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Toggles uppercase styles."
					},
					"sources": [
						{
							"fileName": "src/components/Text/Text.tsx",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2575,
					"name": "visuallyHidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Visually hides the element, visible to screen readers."
					},
					"sources": [
						{
							"fileName": "src/components/Text/Text.tsx",
							"line": 18,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2606,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1854,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLAttributes.vocab"
					}
				},
				{
					"id": 2576,
					"name": "vol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "How 'loud' should this Text be?"
					},
					"sources": [
						{
							"fileName": "src/components/Text/Text.tsx",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"id": 36,
						"name": "TextVolume"
					}
				},
				{
					"id": 2574,
					"name": "weight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Set the weight index."
					},
					"sources": [
						{
							"fileName": "src/components/Text/Text.tsx",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": 1
							},
							{
								"type": "literal",
								"value": 2
							},
							{
								"type": "literal",
								"value": 3
							},
							{
								"type": "literal",
								"value": 4
							},
							{
								"type": "literal",
								"value": 5
							},
							{
								"type": "literal",
								"value": 6
							},
							{
								"type": "literal",
								"value": 7
							},
							{
								"type": "literal",
								"value": 8
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						2599,
						2581,
						2621,
						2622,
						2623,
						2624,
						2625,
						2626,
						2627,
						2628,
						2629,
						2630,
						2631,
						2632,
						2633,
						2634,
						2635,
						2636,
						2637,
						2638,
						2639,
						2640,
						2641,
						2642,
						2643,
						2644,
						2645,
						2646,
						2647,
						2648,
						2649,
						2650,
						2651,
						2652,
						2653,
						2654,
						2655,
						2656,
						2657,
						2658,
						2659,
						2660,
						2661,
						2662,
						2663,
						2664,
						2665,
						2666,
						2667,
						2668,
						2571,
						2607,
						2608,
						2609,
						2669,
						2582,
						2610,
						2583,
						2584,
						2670,
						2600,
						2577,
						2578,
						2585,
						2586,
						2587,
						2588,
						2601,
						2619,
						2620,
						2614,
						2611,
						2615,
						2612,
						2613,
						2589,
						2711,
						2712,
						2827,
						2828,
						2829,
						2830,
						2825,
						2826,
						2755,
						2756,
						2691,
						2692,
						2687,
						2688,
						2713,
						2714,
						2715,
						2716,
						2689,
						2690,
						2757,
						2758,
						2679,
						2680,
						2681,
						2682,
						2683,
						2684,
						2759,
						2760,
						2673,
						2674,
						2675,
						2676,
						2761,
						2762,
						2763,
						2764,
						2765,
						2766,
						2767,
						2768,
						2769,
						2770,
						2771,
						2772,
						2773,
						2774,
						2775,
						2776,
						2777,
						2778,
						2717,
						2718,
						2719,
						2720,
						2721,
						2722,
						2723,
						2724,
						2703,
						2704,
						2685,
						2686,
						2817,
						2818,
						2693,
						2694,
						2699,
						2700,
						2705,
						2706,
						2707,
						2708,
						2709,
						2710,
						2701,
						2702,
						2729,
						2730,
						2725,
						2726,
						2727,
						2728,
						2819,
						2820,
						2779,
						2780,
						2781,
						2782,
						2783,
						2784,
						2785,
						2786,
						2787,
						2788,
						2789,
						2790,
						2677,
						2678,
						2731,
						2732,
						2733,
						2734,
						2735,
						2736,
						2807,
						2808,
						2801,
						2802,
						2809,
						2810,
						2811,
						2812,
						2803,
						2804,
						2815,
						2816,
						2813,
						2814,
						2805,
						2806,
						2737,
						2738,
						2739,
						2740,
						2695,
						2696,
						2821,
						2822,
						2741,
						2742,
						2743,
						2744,
						2791,
						2792,
						2745,
						2746,
						2697,
						2698,
						2747,
						2748,
						2749,
						2750,
						2793,
						2794,
						2795,
						2796,
						2797,
						2798,
						2799,
						2800,
						2831,
						2832,
						2751,
						2752,
						2753,
						2754,
						2823,
						2824,
						2590,
						2602,
						2603,
						2597,
						2604,
						2616,
						2598,
						2617,
						2591,
						2592,
						2593,
						2579,
						2580,
						2594,
						2595,
						2596,
						2572,
						2605,
						2618,
						2573,
						2575,
						2606,
						2576,
						2574
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/Text/Text.tsx",
					"line": 8,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLBaseElement"
						}
					],
					"name": "HTMLAttributes"
				}
			]
		},
		{
			"id": 3615,
			"name": "VisuallyHiddenProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 3745,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1847,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.about"
					}
				},
				{
					"id": 3618,
					"name": "accept",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.accept"
					}
				},
				{
					"id": 3619,
					"name": "acceptCharset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1886,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.acceptCharset"
					}
				},
				{
					"id": 3728,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1823,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.accessKey"
					}
				},
				{
					"id": 3620,
					"name": "action",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1887,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.action"
					}
				},
				{
					"id": 3621,
					"name": "allowFullScreen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1888,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.allowFullScreen"
					}
				},
				{
					"id": 3622,
					"name": "allowTransparency",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1889,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.allowTransparency"
					}
				},
				{
					"id": 3623,
					"name": "alt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1890,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.alt"
					}
				},
				{
					"id": 3767,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-activedescendant"
					}
				},
				{
					"id": 3768,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-atomic"
					}
				},
				{
					"id": 3769,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "list"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-autocomplete"
					}
				},
				{
					"id": 3770,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-busy"
					}
				},
				{
					"id": 3771,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-pressed @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-checked"
					}
				},
				{
					"id": 3772,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of columns in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1576,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-colcount"
					}
				},
				{
					"id": 3773,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colcount @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1581,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-colindex"
					}
				},
				{
					"id": 3774,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-colindex @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1586,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-colspan"
					}
				},
				{
					"id": 3775,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-owns.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-controls"
					}
				},
				{
					"id": 3776,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the element that represents the current item within a container or set of related elements."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-current"
					}
				},
				{
					"id": 3777,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that describes the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1598,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-describedby"
					}
				},
				{
					"id": 3778,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides a detailed, extended description for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1603,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-details"
					}
				},
				{
					"id": 3779,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-hidden @see aria-readonly.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-disabled"
					}
				},
				{
					"id": 3780,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what functions can be performed when a dragged object is released on the drop target.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-dropeffect"
					}
				},
				{
					"id": 3781,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element that provides an error message for the object.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-invalid @see aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-errormessage"
					}
				},
				{
					"id": 3782,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-expanded"
					}
				},
				{
					"id": 3783,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1625,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-flowto"
					}
				},
				{
					"id": 3784,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.",
						"tags": [
							{
								"tag": "deprecated",
								"text": "in ARIA 1.1\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-grabbed"
					}
				},
				{
					"id": 3785,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "tree"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-haspopup"
					}
				},
				{
					"id": 3786,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element is exposed to an accessibility API.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-hidden"
					}
				},
				{
					"id": 3787,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the entered value does not conform to the format expected by the application.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-errormessage.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-invalid"
					}
				},
				{
					"id": 3788,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1644,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-keyshortcuts"
					}
				},
				{
					"id": 3789,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a string value that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-labelledby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1649,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-label"
					}
				},
				{
					"id": 3790,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies the element (or elements) that labels the current element.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-describedby.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1654,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-labelledby"
					}
				},
				{
					"id": 3791,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the hierarchical level of an element within a structure."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1656,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-level"
					}
				},
				{
					"id": 3792,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-live"
					}
				},
				{
					"id": 3793,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether an element is modal when displayed."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-modal"
					}
				},
				{
					"id": 3794,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether a text box accepts multiple lines of input or only a single line."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-multiline"
					}
				},
				{
					"id": 3795,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the user may select more than one item from the current selectable descendants."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-multiselectable"
					}
				},
				{
					"id": 3796,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-orientation"
					}
				},
				{
					"id": 3797,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-controls.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1672,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-owns"
					}
				},
				{
					"id": 3798,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-placeholder"
					}
				},
				{
					"id": 3799,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-setsize.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-posinset"
					}
				},
				{
					"id": 3800,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"pressed\" state of toggle buttons.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-selected.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "mixed"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-pressed"
					}
				},
				{
					"id": 3801,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that the element is not editable, but is otherwise operable.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-disabled.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1692,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-readonly"
					}
				},
				{
					"id": 3802,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-atomic.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-relevant"
					}
				},
				{
					"id": 3803,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates that user input is required on the element before a form may be submitted."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-required"
					}
				},
				{
					"id": 3804,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines a human-readable, author-localized description for the role of an element."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1701,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-roledescription"
					}
				},
				{
					"id": 3805,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the total number of rows in a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1706,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-rowcount"
					}
				},
				{
					"id": 3806,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowcount @see aria-rowspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1711,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-rowindex"
					}
				},
				{
					"id": 3807,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-rowindex @see aria-colspan.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1716,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-rowspan"
					}
				},
				{
					"id": 3808,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates the current \"selected\" state of various widgets.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-checked @see aria-pressed.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "false"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-selected"
					}
				},
				{
					"id": 3809,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-posinset.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1726,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-setsize"
					}
				},
				{
					"id": 3810,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Indicates if items in a table or grid are sorted in ascending or descending order."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1728,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-sort"
					}
				},
				{
					"id": 3811,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the maximum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuemax"
					}
				},
				{
					"id": 3812,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the minimum allowed value for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuemin"
					}
				},
				{
					"id": 3813,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the current value for a range widget.",
						"tags": [
							{
								"tag": "see",
								"text": "aria-valuetext.\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1737,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuenow"
					}
				},
				{
					"id": 3814,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Defines the human readable text alternative of aria-valuenow for a range widget."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.aria-valuetext"
					}
				},
				{
					"id": 3624,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1891,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.as"
					}
				},
				{
					"id": 3625,
					"name": "async",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1892,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.async"
					}
				},
				{
					"id": 3753,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoCapitalize"
					}
				},
				{
					"id": 3626,
					"name": "autoComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1893,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoComplete"
					}
				},
				{
					"id": 3754,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoCorrect"
					}
				},
				{
					"id": 3627,
					"name": "autoFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1894,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoFocus"
					}
				},
				{
					"id": 3628,
					"name": "autoPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1895,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoPlay"
					}
				},
				{
					"id": 3755,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.autoSave"
					}
				},
				{
					"id": 3629,
					"name": "capture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1896,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.capture"
					}
				},
				{
					"id": 3630,
					"name": "cellPadding",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1897,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cellPadding"
					}
				},
				{
					"id": 3631,
					"name": "cellSpacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1898,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cellSpacing"
					}
				},
				{
					"id": 3633,
					"name": "challenge",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1900,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.challenge"
					}
				},
				{
					"id": 3632,
					"name": "charSet",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1899,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.charSet"
					}
				},
				{
					"id": 3634,
					"name": "checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1901,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.checked"
					}
				},
				{
					"id": 3815,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1347,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.children"
					}
				},
				{
					"id": 3635,
					"name": "cite",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1902,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cite"
					}
				},
				{
					"id": 3636,
					"name": "classID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1903,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.classID"
					}
				},
				{
					"id": 3729,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1824,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.className"
					}
				},
				{
					"id": 3638,
					"name": "colSpan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1905,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.colSpan"
					}
				},
				{
					"id": 3756,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.color"
					}
				},
				{
					"id": 3637,
					"name": "cols",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1904,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.cols"
					}
				},
				{
					"id": 3639,
					"name": "content",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1906,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.content"
					}
				},
				{
					"id": 3730,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1825,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.contentEditable"
					}
				},
				{
					"id": 3731,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1826,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.contextMenu"
					}
				},
				{
					"id": 3640,
					"name": "controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1907,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.controls"
					}
				},
				{
					"id": 3641,
					"name": "coords",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1908,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.coords"
					}
				},
				{
					"id": 3642,
					"name": "crossOrigin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1909,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.crossOrigin"
					}
				},
				{
					"id": 3816,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1348,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3817,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3818,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/@types/react/index.d.ts",
											"line": 1349,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3818
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 3643,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1910,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.data"
					}
				},
				{
					"id": 3746,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1848,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.datatype"
					}
				},
				{
					"id": 3644,
					"name": "dateTime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1911,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.dateTime"
					}
				},
				{
					"id": 3645,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1912,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.default"
					}
				},
				{
					"id": 3724,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1817,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.defaultChecked"
					}
				},
				{
					"id": 3725,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1818,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.defaultValue"
					}
				},
				{
					"id": 3646,
					"name": "defer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1913,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.defer"
					}
				},
				{
					"id": 3732,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1827,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.dir"
					}
				},
				{
					"id": 3647,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1914,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.disabled"
					}
				},
				{
					"id": 3648,
					"name": "download",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1915,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.download"
					}
				},
				{
					"id": 3733,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1828,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.draggable"
					}
				},
				{
					"id": 3649,
					"name": "encType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1916,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.encType"
					}
				},
				{
					"id": 3617,
					"name": "focusable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/VisuallyHidden/VisuallyHidden.tsx",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 3650,
					"name": "form",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1917,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.form"
					}
				},
				{
					"id": 3651,
					"name": "formAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1918,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formAction"
					}
				},
				{
					"id": 3652,
					"name": "formEncType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1919,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formEncType"
					}
				},
				{
					"id": 3653,
					"name": "formMethod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1920,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formMethod"
					}
				},
				{
					"id": 3654,
					"name": "formNoValidate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1921,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formNoValidate"
					}
				},
				{
					"id": 3655,
					"name": "formTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1922,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.formTarget"
					}
				},
				{
					"id": 3656,
					"name": "frameBorder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1923,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.frameBorder"
					}
				},
				{
					"id": 3657,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1924,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.headers"
					}
				},
				{
					"id": 3658,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1925,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.height"
					}
				},
				{
					"id": 3734,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1829,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.hidden"
					}
				},
				{
					"id": 3659,
					"name": "high",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1926,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.high"
					}
				},
				{
					"id": 3660,
					"name": "href",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1927,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.href"
					}
				},
				{
					"id": 3661,
					"name": "hrefLang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1928,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.hrefLang"
					}
				},
				{
					"id": 3662,
					"name": "htmlFor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1929,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.htmlFor"
					}
				},
				{
					"id": 3663,
					"name": "httpEquiv",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1930,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.httpEquiv"
					}
				},
				{
					"id": 3735,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1830,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.id"
					}
				},
				{
					"id": 3747,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1849,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.inlist"
					}
				},
				{
					"id": 3765,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Hints at the type of data that might be entered by the user while editing the element or its contents",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.inputMode"
					}
				},
				{
					"id": 3664,
					"name": "integrity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1931,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.integrity"
					}
				},
				{
					"id": 3766,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Specify that a standard HTML element should behave like a defined custom built-in element",
						"tags": [
							{
								"tag": "see",
								"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1880,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.is"
					}
				},
				{
					"id": 3760,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemID"
					}
				},
				{
					"id": 3757,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemProp"
					}
				},
				{
					"id": 3761,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemRef"
					}
				},
				{
					"id": 3758,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemScope"
					}
				},
				{
					"id": 3759,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.itemType"
					}
				},
				{
					"id": 3980,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 138,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Key"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.key"
					}
				},
				{
					"id": 3665,
					"name": "keyParams",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1932,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.keyParams"
					}
				},
				{
					"id": 3666,
					"name": "keyType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1933,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.keyType"
					}
				},
				{
					"id": 3667,
					"name": "kind",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1934,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.kind"
					}
				},
				{
					"id": 3668,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1935,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.label"
					}
				},
				{
					"id": 3736,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1831,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.lang"
					}
				},
				{
					"id": 3669,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1936,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.list"
					}
				},
				{
					"id": 3670,
					"name": "loop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1937,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.loop"
					}
				},
				{
					"id": 3671,
					"name": "low",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1938,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.low"
					}
				},
				{
					"id": 3672,
					"name": "manifest",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1939,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.manifest"
					}
				},
				{
					"id": 3673,
					"name": "marginHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1940,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.marginHeight"
					}
				},
				{
					"id": 3674,
					"name": "marginWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1941,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.marginWidth"
					}
				},
				{
					"id": 3675,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1942,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.max"
					}
				},
				{
					"id": 3676,
					"name": "maxLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1943,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.maxLength"
					}
				},
				{
					"id": 3677,
					"name": "media",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1944,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.media"
					}
				},
				{
					"id": 3678,
					"name": "mediaGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1945,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.mediaGroup"
					}
				},
				{
					"id": 3679,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1946,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.method"
					}
				},
				{
					"id": 3680,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1947,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.min"
					}
				},
				{
					"id": 3681,
					"name": "minLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1948,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.minLength"
					}
				},
				{
					"id": 3682,
					"name": "multiple",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1949,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.multiple"
					}
				},
				{
					"id": 3683,
					"name": "muted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1950,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.muted"
					}
				},
				{
					"id": 3684,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1951,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.name"
					}
				},
				{
					"id": 3686,
					"name": "noValidate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1953,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.noValidate"
					}
				},
				{
					"id": 3685,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1952,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.nonce"
					}
				},
				{
					"id": 3857,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1403,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAbort"
					}
				},
				{
					"id": 3858,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAbortCapture"
					}
				},
				{
					"id": 3973,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationEnd"
					}
				},
				{
					"id": 3974,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationEndCapture"
					}
				},
				{
					"id": 3975,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationIteration"
					}
				},
				{
					"id": 3976,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationIterationCapture"
					}
				},
				{
					"id": 3971,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationStart"
					}
				},
				{
					"id": 3972,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1532,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "AnimationEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAnimationStartCapture"
					}
				},
				{
					"id": 3901,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAuxClick"
					}
				},
				{
					"id": 3902,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onAuxClickCapture"
					}
				},
				{
					"id": 3837,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBeforeInput"
					}
				},
				{
					"id": 3838,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1378,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBeforeInputCapture"
					}
				},
				{
					"id": 3833,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1371,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBlur"
					}
				},
				{
					"id": 3834,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1372,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onBlurCapture"
					}
				},
				{
					"id": 3859,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlay"
					}
				},
				{
					"id": 3860,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlayCapture"
					}
				},
				{
					"id": 3861,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlayThrough"
					}
				},
				{
					"id": 3862,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCanPlayThroughCapture"
					}
				},
				{
					"id": 3835,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1375,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onChange"
					}
				},
				{
					"id": 3836,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onChangeCapture"
					}
				},
				{
					"id": 3903,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onClick"
					}
				},
				{
					"id": 3904,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onClickCapture"
					}
				},
				{
					"id": 3825,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1361,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionEnd"
					}
				},
				{
					"id": 3826,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1362,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionEndCapture"
					}
				},
				{
					"id": 3827,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1363,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionStart"
					}
				},
				{
					"id": 3828,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1364,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionStartCapture"
					}
				},
				{
					"id": 3829,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1365,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionUpdate"
					}
				},
				{
					"id": 3830,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1366,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "CompositionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCompositionUpdateCapture"
					}
				},
				{
					"id": 3905,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onContextMenu"
					}
				},
				{
					"id": 3906,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onContextMenuCapture"
					}
				},
				{
					"id": 3819,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1353,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCopy"
					}
				},
				{
					"id": 3820,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1354,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCopyCapture"
					}
				},
				{
					"id": 3821,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1355,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCut"
					}
				},
				{
					"id": 3822,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1356,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onCutCapture"
					}
				},
				{
					"id": 3907,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDoubleClick"
					}
				},
				{
					"id": 3908,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDoubleClickCapture"
					}
				},
				{
					"id": 3909,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDrag"
					}
				},
				{
					"id": 3910,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragCapture"
					}
				},
				{
					"id": 3911,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEnd"
					}
				},
				{
					"id": 3912,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEndCapture"
					}
				},
				{
					"id": 3913,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEnter"
					}
				},
				{
					"id": 3914,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragEnterCapture"
					}
				},
				{
					"id": 3915,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragExit"
					}
				},
				{
					"id": 3916,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragExitCapture"
					}
				},
				{
					"id": 3917,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragLeave"
					}
				},
				{
					"id": 3918,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragLeaveCapture"
					}
				},
				{
					"id": 3919,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragOver"
					}
				},
				{
					"id": 3920,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragOverCapture"
					}
				},
				{
					"id": 3921,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragStart"
					}
				},
				{
					"id": 3922,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDragStartCapture"
					}
				},
				{
					"id": 3923,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDrop"
					}
				},
				{
					"id": 3924,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "DragEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDropCapture"
					}
				},
				{
					"id": 3863,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDurationChange"
					}
				},
				{
					"id": 3864,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onDurationChangeCapture"
					}
				},
				{
					"id": 3865,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEmptied"
					}
				},
				{
					"id": 3866,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEmptiedCapture"
					}
				},
				{
					"id": 3867,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEncrypted"
					}
				},
				{
					"id": 3868,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEncryptedCapture"
					}
				},
				{
					"id": 3869,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEnded"
					}
				},
				{
					"id": 3870,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1416,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onEndedCapture"
					}
				},
				{
					"id": 3849,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onError"
					}
				},
				{
					"id": 3850,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onErrorCapture"
					}
				},
				{
					"id": 3831,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1369,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onFocus"
					}
				},
				{
					"id": 3832,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1370,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FocusEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onFocusCapture"
					}
				},
				{
					"id": 3963,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onGotPointerCapture"
					}
				},
				{
					"id": 3964,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1518,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 3839,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1379,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInput"
					}
				},
				{
					"id": 3840,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1380,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInputCapture"
					}
				},
				{
					"id": 3845,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInvalid"
					}
				},
				{
					"id": 3846,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onInvalidCapture"
					}
				},
				{
					"id": 3851,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyDown"
					}
				},
				{
					"id": 3852,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1396,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyDownCapture"
					}
				},
				{
					"id": 3853,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1397,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyPress"
					}
				},
				{
					"id": 3854,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyPressCapture"
					}
				},
				{
					"id": 3855,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyUp"
					}
				},
				{
					"id": 3856,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "KeyboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onKeyUpCapture"
					}
				},
				{
					"id": 3847,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1389,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoad"
					}
				},
				{
					"id": 3848,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadCapture"
					}
				},
				{
					"id": 3875,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadStart"
					}
				},
				{
					"id": 3876,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1422,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadStartCapture"
					}
				},
				{
					"id": 3871,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1417,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedData"
					}
				},
				{
					"id": 3872,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedDataCapture"
					}
				},
				{
					"id": 3873,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedMetadata"
					}
				},
				{
					"id": 3874,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLoadedMetadataCapture"
					}
				},
				{
					"id": 3965,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1519,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLostPointerCapture"
					}
				},
				{
					"id": 3966,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 3925,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseDown"
					}
				},
				{
					"id": 3926,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseDownCapture"
					}
				},
				{
					"id": 3927,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseEnter"
					}
				},
				{
					"id": 3928,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseLeave"
					}
				},
				{
					"id": 3929,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseMove"
					}
				},
				{
					"id": 3930,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseMoveCapture"
					}
				},
				{
					"id": 3931,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOut"
					}
				},
				{
					"id": 3932,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1480,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOutCapture"
					}
				},
				{
					"id": 3933,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1481,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOver"
					}
				},
				{
					"id": 3934,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseOverCapture"
					}
				},
				{
					"id": 3935,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseUp"
					}
				},
				{
					"id": 3936,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "MouseEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onMouseUpCapture"
					}
				},
				{
					"id": 3823,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1357,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPaste"
					}
				},
				{
					"id": 3824,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1358,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ClipboardEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPasteCapture"
					}
				},
				{
					"id": 3877,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1423,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPause"
					}
				},
				{
					"id": 3878,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPauseCapture"
					}
				},
				{
					"id": 3879,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlay"
					}
				},
				{
					"id": 3880,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1426,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlayCapture"
					}
				},
				{
					"id": 3881,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlaying"
					}
				},
				{
					"id": 3882,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1428,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPlayingCapture"
					}
				},
				{
					"id": 3953,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerCancel"
					}
				},
				{
					"id": 3954,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerCancelCapture"
					}
				},
				{
					"id": 3947,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerDown"
					}
				},
				{
					"id": 3948,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerDownCapture"
					}
				},
				{
					"id": 3955,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerEnter"
					}
				},
				{
					"id": 3956,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerEnterCapture"
					}
				},
				{
					"id": 3957,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerLeave"
					}
				},
				{
					"id": 3958,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerLeaveCapture"
					}
				},
				{
					"id": 3949,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerMove"
					}
				},
				{
					"id": 3950,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerMoveCapture"
					}
				},
				{
					"id": 3961,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOut"
					}
				},
				{
					"id": 3962,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOutCapture"
					}
				},
				{
					"id": 3959,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOver"
					}
				},
				{
					"id": 3960,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerOverCapture"
					}
				},
				{
					"id": 3951,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerUp"
					}
				},
				{
					"id": 3952,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "PointerEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onPointerUpCapture"
					}
				},
				{
					"id": 3883,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onProgress"
					}
				},
				{
					"id": 3884,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onProgressCapture"
					}
				},
				{
					"id": 3885,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onRateChange"
					}
				},
				{
					"id": 3886,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1432,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onRateChangeCapture"
					}
				},
				{
					"id": 3841,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1381,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onReset"
					}
				},
				{
					"id": 3842,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onResetCapture"
					}
				},
				{
					"id": 3967,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1523,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onScroll"
					}
				},
				{
					"id": 3968,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "UIEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onScrollCapture"
					}
				},
				{
					"id": 3887,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1433,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeeked"
					}
				},
				{
					"id": 3888,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeekedCapture"
					}
				},
				{
					"id": 3889,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeeking"
					}
				},
				{
					"id": 3890,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSeekingCapture"
					}
				},
				{
					"id": 3937,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSelect"
					}
				},
				{
					"id": 3938,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSelectCapture"
					}
				},
				{
					"id": 3891,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onStalled"
					}
				},
				{
					"id": 3892,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onStalledCapture"
					}
				},
				{
					"id": 3843,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSubmit"
					}
				},
				{
					"id": 3844,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "FormEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSubmitCapture"
					}
				},
				{
					"id": 3893,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSuspend"
					}
				},
				{
					"id": 3894,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onSuspendCapture"
					}
				},
				{
					"id": 3895,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTimeUpdate"
					}
				},
				{
					"id": 3896,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTimeUpdateCapture"
					}
				},
				{
					"id": 3939,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchCancel"
					}
				},
				{
					"id": 3940,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchCancelCapture"
					}
				},
				{
					"id": 3941,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchEnd"
					}
				},
				{
					"id": 3942,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchEndCapture"
					}
				},
				{
					"id": 3943,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchMove"
					}
				},
				{
					"id": 3944,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchMoveCapture"
					}
				},
				{
					"id": 3945,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchStart"
					}
				},
				{
					"id": 3946,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "TouchEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTouchStartCapture"
					}
				},
				{
					"id": 3977,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTransitionEnd"
					}
				},
				{
					"id": 3978,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "TransitionEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onTransitionEndCapture"
					}
				},
				{
					"id": 3897,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onVolumeChange"
					}
				},
				{
					"id": 3898,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onVolumeChangeCapture"
					}
				},
				{
					"id": 3899,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWaiting"
					}
				},
				{
					"id": 3900,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "ReactEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWaitingCapture"
					}
				},
				{
					"id": 3969,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWheel"
					}
				},
				{
					"id": 3970,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "WheelEventHandler"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.onWheelCapture"
					}
				},
				{
					"id": 3687,
					"name": "open",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1954,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.open"
					}
				},
				{
					"id": 3688,
					"name": "optimum",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1955,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.optimum"
					}
				},
				{
					"id": 3689,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1956,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.pattern"
					}
				},
				{
					"id": 3690,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1957,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.placeholder"
					}
				},
				{
					"id": 3691,
					"name": "playsInline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1958,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.playsInline"
					}
				},
				{
					"id": 3692,
					"name": "poster",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1959,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.poster"
					}
				},
				{
					"id": 3748,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.prefix"
					}
				},
				{
					"id": 3693,
					"name": "preload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1960,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.preload"
					}
				},
				{
					"id": 3749,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.property"
					}
				},
				{
					"id": 3743,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1841,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.radioGroup"
					}
				},
				{
					"id": 3694,
					"name": "readOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1961,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.readOnly"
					}
				},
				{
					"id": 3979,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 144,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "LegacyRef"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.ref"
					}
				},
				{
					"id": 3695,
					"name": "rel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1962,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.rel"
					}
				},
				{
					"id": 3696,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1963,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.required"
					}
				},
				{
					"id": 3750,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.resource"
					}
				},
				{
					"id": 3762,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.results"
					}
				},
				{
					"id": 3697,
					"name": "reversed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1964,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.reversed"
					}
				},
				{
					"id": 3744,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1844,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.role"
					}
				},
				{
					"id": 3699,
					"name": "rowSpan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1966,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.rowSpan"
					}
				},
				{
					"id": 3698,
					"name": "rows",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1965,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.rows"
					}
				},
				{
					"id": 3700,
					"name": "sandbox",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1967,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.sandbox"
					}
				},
				{
					"id": 3701,
					"name": "scope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1968,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.scope"
					}
				},
				{
					"id": 3702,
					"name": "scoped",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1969,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.scoped"
					}
				},
				{
					"id": 3703,
					"name": "scrolling",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1970,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.scrolling"
					}
				},
				{
					"id": 3704,
					"name": "seamless",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1971,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.seamless"
					}
				},
				{
					"id": 3763,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.security"
					}
				},
				{
					"id": 3705,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1972,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.selected"
					}
				},
				{
					"id": 3706,
					"name": "shape",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1973,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.shape"
					}
				},
				{
					"id": 3707,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1974,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.size"
					}
				},
				{
					"id": 3708,
					"name": "sizes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1975,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.sizes"
					}
				},
				{
					"id": 3737,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1833,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.slot"
					}
				},
				{
					"id": 3709,
					"name": "span",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1976,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.span"
					}
				},
				{
					"id": 3738,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1834,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.spellCheck"
					}
				},
				{
					"id": 3710,
					"name": "src",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1977,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.src"
					}
				},
				{
					"id": 3711,
					"name": "srcDoc",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1978,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.srcDoc"
					}
				},
				{
					"id": 3712,
					"name": "srcLang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1979,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.srcLang"
					}
				},
				{
					"id": 3713,
					"name": "srcSet",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1980,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.srcSet"
					}
				},
				{
					"id": 3714,
					"name": "start",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1981,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.start"
					}
				},
				{
					"id": 3715,
					"name": "step",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1982,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.step"
					}
				},
				{
					"id": 3739,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1835,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.style"
					}
				},
				{
					"id": 3716,
					"name": "summary",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1983,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.summary"
					}
				},
				{
					"id": 3726,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1819,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.suppressContentEditableWarning"
					}
				},
				{
					"id": 3727,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1820,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.suppressHydrationWarning"
					}
				},
				{
					"id": 3740,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1836,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.tabIndex"
					}
				},
				{
					"id": 3717,
					"name": "target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1984,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.target"
					}
				},
				{
					"id": 3741,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1837,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.title"
					}
				},
				{
					"id": 3742,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1838,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "no"
							},
							{
								"type": "literal",
								"value": "yes"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.translate"
					}
				},
				{
					"id": 3718,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1985,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.type"
					}
				},
				{
					"id": 3751,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.typeof"
					}
				},
				{
					"id": 3764,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.unselectable"
					}
				},
				{
					"id": 3719,
					"name": "useMap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1986,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.useMap"
					}
				},
				{
					"id": 3720,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1987,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.value"
					}
				},
				{
					"id": 3616,
					"name": "visuallyHidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/components/VisuallyHidden/VisuallyHidden.tsx",
							"line": 13,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 3752,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1854,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.vocab"
					}
				},
				{
					"id": 3721,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1988,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.width"
					}
				},
				{
					"id": 3722,
					"name": "wmode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1989,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.wmode"
					}
				},
				{
					"id": 3723,
					"name": "wrap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 1990,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "React.HTMLProps.wrap"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3745,
						3618,
						3619,
						3728,
						3620,
						3621,
						3622,
						3623,
						3767,
						3768,
						3769,
						3770,
						3771,
						3772,
						3773,
						3774,
						3775,
						3776,
						3777,
						3778,
						3779,
						3780,
						3781,
						3782,
						3783,
						3784,
						3785,
						3786,
						3787,
						3788,
						3789,
						3790,
						3791,
						3792,
						3793,
						3794,
						3795,
						3796,
						3797,
						3798,
						3799,
						3800,
						3801,
						3802,
						3803,
						3804,
						3805,
						3806,
						3807,
						3808,
						3809,
						3810,
						3811,
						3812,
						3813,
						3814,
						3624,
						3625,
						3753,
						3626,
						3754,
						3627,
						3628,
						3755,
						3629,
						3630,
						3631,
						3633,
						3632,
						3634,
						3815,
						3635,
						3636,
						3729,
						3638,
						3756,
						3637,
						3639,
						3730,
						3731,
						3640,
						3641,
						3642,
						3816,
						3643,
						3746,
						3644,
						3645,
						3724,
						3725,
						3646,
						3732,
						3647,
						3648,
						3733,
						3649,
						3617,
						3650,
						3651,
						3652,
						3653,
						3654,
						3655,
						3656,
						3657,
						3658,
						3734,
						3659,
						3660,
						3661,
						3662,
						3663,
						3735,
						3747,
						3765,
						3664,
						3766,
						3760,
						3757,
						3761,
						3758,
						3759,
						3980,
						3665,
						3666,
						3667,
						3668,
						3736,
						3669,
						3670,
						3671,
						3672,
						3673,
						3674,
						3675,
						3676,
						3677,
						3678,
						3679,
						3680,
						3681,
						3682,
						3683,
						3684,
						3686,
						3685,
						3857,
						3858,
						3973,
						3974,
						3975,
						3976,
						3971,
						3972,
						3901,
						3902,
						3837,
						3838,
						3833,
						3834,
						3859,
						3860,
						3861,
						3862,
						3835,
						3836,
						3903,
						3904,
						3825,
						3826,
						3827,
						3828,
						3829,
						3830,
						3905,
						3906,
						3819,
						3820,
						3821,
						3822,
						3907,
						3908,
						3909,
						3910,
						3911,
						3912,
						3913,
						3914,
						3915,
						3916,
						3917,
						3918,
						3919,
						3920,
						3921,
						3922,
						3923,
						3924,
						3863,
						3864,
						3865,
						3866,
						3867,
						3868,
						3869,
						3870,
						3849,
						3850,
						3831,
						3832,
						3963,
						3964,
						3839,
						3840,
						3845,
						3846,
						3851,
						3852,
						3853,
						3854,
						3855,
						3856,
						3847,
						3848,
						3875,
						3876,
						3871,
						3872,
						3873,
						3874,
						3965,
						3966,
						3925,
						3926,
						3927,
						3928,
						3929,
						3930,
						3931,
						3932,
						3933,
						3934,
						3935,
						3936,
						3823,
						3824,
						3877,
						3878,
						3879,
						3880,
						3881,
						3882,
						3953,
						3954,
						3947,
						3948,
						3955,
						3956,
						3957,
						3958,
						3949,
						3950,
						3961,
						3962,
						3959,
						3960,
						3951,
						3952,
						3883,
						3884,
						3885,
						3886,
						3841,
						3842,
						3967,
						3968,
						3887,
						3888,
						3889,
						3890,
						3937,
						3938,
						3891,
						3892,
						3843,
						3844,
						3893,
						3894,
						3895,
						3896,
						3939,
						3940,
						3941,
						3942,
						3943,
						3944,
						3945,
						3946,
						3977,
						3978,
						3897,
						3898,
						3899,
						3900,
						3969,
						3970,
						3687,
						3688,
						3689,
						3690,
						3691,
						3692,
						3748,
						3693,
						3749,
						3743,
						3694,
						3979,
						3695,
						3696,
						3750,
						3762,
						3697,
						3744,
						3699,
						3698,
						3700,
						3701,
						3702,
						3703,
						3704,
						3763,
						3705,
						3706,
						3707,
						3708,
						3737,
						3709,
						3738,
						3710,
						3711,
						3712,
						3713,
						3714,
						3715,
						3739,
						3716,
						3726,
						3727,
						3740,
						3717,
						3741,
						3742,
						3718,
						3751,
						3764,
						3719,
						3720,
						3616,
						3752,
						3721,
						3722,
						3723
					]
				}
			],
			"sources": [
				{
					"fileName": "src/components/VisuallyHidden/VisuallyHidden.tsx",
					"line": 12,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "HTMLSpanElement"
						}
					],
					"name": "HTMLProps"
				}
			]
		},
		{
			"id": 33,
			"name": "Accent",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Accent color indexes"
			},
			"sources": [
				{
					"fileName": "src/components/types.ts",
					"line": 14,
					"character": 20
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					},
					{
						"type": "literal",
						"value": 4
					},
					{
						"type": "literal",
						"value": 5
					},
					{
						"type": "literal",
						"value": 6
					},
					{
						"type": "literal",
						"value": 7
					},
					{
						"type": "literal",
						"value": 8
					},
					{
						"type": "literal",
						"value": 9
					},
					{
						"type": "literal",
						"value": 10
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 31,
			"name": "AlignPos",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "types.ts"
			},
			"sources": [
				{
					"fileName": "src/components/types.ts",
					"line": 4,
					"character": 20
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "top"
					},
					{
						"type": "literal",
						"value": "end"
					},
					{
						"type": "literal",
						"value": "bottom"
					},
					{
						"type": "literal",
						"value": "start"
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 44,
			"name": "BlockquoteProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/components/Blockquote/Blockquote.tsx",
					"line": 18,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 39,
						"name": "BlockquoteCustomProps"
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLQuoteElement"
							}
						],
						"name": "React.HTMLAttributes"
					}
				]
			}
		},
		{
			"id": 111,
			"name": "ButtonGroupProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/components/ButtonGroup/ButtonGroup.tsx",
					"line": 23,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 103,
						"name": "ButtonGroupCustomProps"
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLDivElement"
							}
						],
						"name": "React.HTMLAttributes"
					}
				]
			}
		},
		{
			"id": 99,
			"name": "ButtonProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/components/Button/Button.tsx",
					"line": 60,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 102,
					"name": "P",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "React.ElementType"
					},
					"default": {
						"type": "literal",
						"value": "button"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 100,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 101,
									"name": "as",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "Custom element to render such as an anchor \"a\" or a router \"Link\" component."
									},
									"sources": [
										{
											"fileName": "src/components/Button/Button.tsx",
											"line": 62,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"name": "P"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										101
									]
								}
							],
							"sources": [
								{
									"fileName": "src/components/Button/Button.tsx",
									"line": 60,
									"character": 66
								}
							]
						}
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "P"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 45,
										"name": "ButtonCustomProps"
									},
									{
										"type": "literal",
										"value": "as"
									}
								],
								"name": "Omit"
							}
						],
						"name": "MergeElementProps"
					}
				]
			}
		},
		{
			"id": 2536,
			"name": "MenuButtonProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 36,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"id": 99,
				"name": "ButtonProps"
			}
		},
		{
			"id": 2542,
			"name": "MenuItemsProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 41,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"name": "ReachMenuItemsProps"
			}
		},
		{
			"id": 2553,
			"name": "MenuLinkProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 48,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"name": "ReachMenuLinkProps"
			}
		},
		{
			"id": 2552,
			"name": "MenuPopoverProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 47,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"name": "ReachMenuPopoverProps"
			}
		},
		{
			"id": 2535,
			"name": "MenuProps",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 35,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"name": "ReachMenuProps"
			}
		},
		{
			"id": 38,
			"name": "SelectionControlType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Selection input types - maps to input type attribute."
			},
			"sources": [
				{
					"fileName": "src/components/types.ts",
					"line": 51,
					"character": 20
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "checkbox"
					},
					{
						"type": "literal",
						"value": "radio"
					},
					{
						"type": "literal",
						"value": "switch"
					},
					{
						"type": "literal",
						"value": "toggle"
					}
				]
			}
		},
		{
			"id": 32,
			"name": "TextAlign",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/components/types.ts",
					"line": 6,
					"character": 20
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "center"
					},
					{
						"type": "literal",
						"value": "inherit"
					},
					{
						"type": "literal",
						"value": "justify"
					},
					{
						"type": "literal",
						"value": "start"
					},
					{
						"type": "literal",
						"value": "end"
					}
				]
			}
		},
		{
			"id": 37,
			"name": "TextInputType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Text input types - maps to input type attribute."
			},
			"sources": [
				{
					"fileName": "src/components/types.ts",
					"line": 39,
					"character": 20
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "email"
					},
					{
						"type": "literal",
						"value": "number"
					},
					{
						"type": "literal",
						"value": "password"
					},
					{
						"type": "literal",
						"value": "search"
					},
					{
						"type": "literal",
						"value": "tel"
					},
					{
						"type": "literal",
						"value": "text"
					},
					{
						"type": "literal",
						"value": "textarea"
					},
					{
						"type": "literal",
						"value": "time"
					},
					{
						"type": "literal",
						"value": "url"
					}
				]
			}
		},
		{
			"id": 36,
			"name": "TextVolume",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Text volume levels"
			},
			"sources": [
				{
					"fileName": "src/components/types.ts",
					"line": 23,
					"character": 20
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					},
					{
						"type": "literal",
						"value": 4
					},
					{
						"type": "literal",
						"value": 5
					},
					{
						"type": "literal",
						"value": 6
					},
					{
						"type": "literal",
						"value": 7
					},
					{
						"type": "literal",
						"value": 8
					},
					{
						"type": "literal",
						"value": 9
					},
					{
						"type": "literal",
						"value": 10
					},
					{
						"type": "literal",
						"value": 11
					},
					{
						"type": "literal",
						"value": 12
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 34,
			"name": "Variant",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Variant indexes"
			},
			"sources": [
				{
					"fileName": "src/components/types.ts",
					"line": 17,
					"character": 20
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					},
					{
						"type": "literal",
						"value": 4
					},
					{
						"type": "literal",
						"value": 5
					},
					{
						"type": "literal",
						"value": 6
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 35,
			"name": "Volume",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"shortText": "Generic volume levels"
			},
			"sources": [
				{
					"fileName": "src/components/types.ts",
					"line": 20,
					"character": 20
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					},
					{
						"type": "literal",
						"value": 4
					},
					{
						"type": "literal",
						"value": 5
					},
					{
						"type": "literal",
						"value": 6
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 1,
			"name": "Blockquote",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Default components in alphabetical order"
			},
			"sources": [
				{
					"fileName": "src/components/Blockquote/Blockquote.tsx",
					"line": 21,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 44,
						"name": "BlockquoteProps"
					}
				],
				"name": "React.VFC"
			},
			"defaultValue": "..."
		},
		{
			"id": 7,
			"name": "ButtonGroup",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/ButtonGroup/ButtonGroup.tsx",
					"line": 26,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 103,
								"name": "ButtonGroupCustomProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "HTMLAttributes"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 8,
			"name": "ErrorText",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/ErrorText/ErrorText.tsx",
					"line": 5,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "React.HTMLAttributes"
					}
				],
				"name": "React.VFC"
			},
			"defaultValue": "..."
		},
		{
			"id": 9,
			"name": "Grid",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Grid/Grid.tsx",
					"line": 15,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 112,
								"name": "GridProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLBaseElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2833,
			"name": "H1",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Text/Text.tsx",
					"line": 63,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "TextExportsProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLBaseElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2834,
			"name": "H2",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Text/Text.tsx",
					"line": 75,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "TextExportsProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLBaseElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2835,
			"name": "H3",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Text/Text.tsx",
					"line": 87,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "TextExportsProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLBaseElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2836,
			"name": "H4",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Text/Text.tsx",
					"line": 99,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "TextExportsProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLBaseElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2837,
			"name": "H5",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Text/Text.tsx",
					"line": 111,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "TextExportsProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLBaseElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2838,
			"name": "H6",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Text/Text.tsx",
					"line": 123,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "TextExportsProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLBaseElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 10,
			"name": "HintText",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/HintText/HintText.tsx",
					"line": 6,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "React.HTMLAttributes"
					}
				],
				"name": "React.VFC"
			},
			"defaultValue": "..."
		},
		{
			"id": 11,
			"name": "Icon",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Icon/Icon.tsx",
					"line": 23,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 372,
										"name": "IconProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "style"
											},
											{
												"type": "literal",
												"value": "clipPath"
											},
											{
												"type": "literal",
												"value": "filter"
											},
											{
												"type": "literal",
												"value": "mask"
											},
											{
												"type": "literal",
												"value": "path"
											},
											{
												"type": "literal",
												"value": "children"
											},
											{
												"type": "literal",
												"value": "onFocus"
											},
											{
												"type": "literal",
												"value": "onBlur"
											},
											{
												"type": "literal",
												"value": "onKeyDown"
											},
											{
												"type": "literal",
												"value": "onKeyUp"
											},
											{
												"type": "literal",
												"value": "href"
											},
											{
												"type": "literal",
												"value": "target"
											},
											{
												"type": "literal",
												"value": "aria-expanded"
											},
											{
												"type": "literal",
												"value": "aria-haspopup"
											},
											{
												"type": "literal",
												"value": "aria-controls"
											},
											{
												"type": "literal",
												"value": "aria-pressed"
											},
											{
												"type": "literal",
												"value": "type"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "aria-label"
											},
											{
												"type": "literal",
												"value": "aria-labelledby"
											},
											{
												"type": "literal",
												"value": "aria-describedby"
											},
											{
												"type": "literal",
												"value": "aria-details"
											},
											{
												"type": "literal",
												"value": "className"
											},
											{
												"type": "literal",
												"value": "height"
											},
											{
												"type": "literal",
												"value": "lang"
											},
											{
												"type": "literal",
												"value": "max"
											},
											{
												"type": "literal",
												"value": "media"
											},
											{
												"type": "literal",
												"value": "method"
											},
											{
												"type": "literal",
												"value": "min"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "width"
											},
											{
												"type": "literal",
												"value": "role"
											},
											{
												"type": "literal",
												"value": "tabIndex"
											},
											{
												"type": "literal",
												"value": "crossOrigin"
											},
											{
												"type": "literal",
												"value": "accentHeight"
											},
											{
												"type": "literal",
												"value": "accumulate"
											},
											{
												"type": "literal",
												"value": "additive"
											},
											{
												"type": "literal",
												"value": "alignmentBaseline"
											},
											{
												"type": "literal",
												"value": "allowReorder"
											},
											{
												"type": "literal",
												"value": "alphabetic"
											},
											{
												"type": "literal",
												"value": "amplitude"
											},
											{
												"type": "literal",
												"value": "arabicForm"
											},
											{
												"type": "literal",
												"value": "ascent"
											},
											{
												"type": "literal",
												"value": "attributeName"
											},
											{
												"type": "literal",
												"value": "attributeType"
											},
											{
												"type": "literal",
												"value": "autoReverse"
											},
											{
												"type": "literal",
												"value": "azimuth"
											},
											{
												"type": "literal",
												"value": "baseFrequency"
											},
											{
												"type": "literal",
												"value": "baselineShift"
											},
											{
												"type": "literal",
												"value": "baseProfile"
											},
											{
												"type": "literal",
												"value": "bbox"
											},
											{
												"type": "literal",
												"value": "begin"
											},
											{
												"type": "literal",
												"value": "bias"
											},
											{
												"type": "literal",
												"value": "by"
											},
											{
												"type": "literal",
												"value": "calcMode"
											},
											{
												"type": "literal",
												"value": "capHeight"
											},
											{
												"type": "literal",
												"value": "clip"
											},
											{
												"type": "literal",
												"value": "clipPathUnits"
											},
											{
												"type": "literal",
												"value": "clipRule"
											},
											{
												"type": "literal",
												"value": "colorInterpolation"
											},
											{
												"type": "literal",
												"value": "colorInterpolationFilters"
											},
											{
												"type": "literal",
												"value": "colorProfile"
											},
											{
												"type": "literal",
												"value": "colorRendering"
											},
											{
												"type": "literal",
												"value": "contentScriptType"
											},
											{
												"type": "literal",
												"value": "contentStyleType"
											},
											{
												"type": "literal",
												"value": "cursor"
											},
											{
												"type": "literal",
												"value": "cx"
											},
											{
												"type": "literal",
												"value": "cy"
											},
											{
												"type": "literal",
												"value": "d"
											},
											{
												"type": "literal",
												"value": "decelerate"
											},
											{
												"type": "literal",
												"value": "descent"
											},
											{
												"type": "literal",
												"value": "diffuseConstant"
											},
											{
												"type": "literal",
												"value": "direction"
											},
											{
												"type": "literal",
												"value": "display"
											},
											{
												"type": "literal",
												"value": "divisor"
											},
											{
												"type": "literal",
												"value": "dominantBaseline"
											},
											{
												"type": "literal",
												"value": "dur"
											},
											{
												"type": "literal",
												"value": "dx"
											},
											{
												"type": "literal",
												"value": "dy"
											},
											{
												"type": "literal",
												"value": "edgeMode"
											},
											{
												"type": "literal",
												"value": "elevation"
											},
											{
												"type": "literal",
												"value": "enableBackground"
											},
											{
												"type": "literal",
												"value": "end"
											},
											{
												"type": "literal",
												"value": "exponent"
											},
											{
												"type": "literal",
												"value": "externalResourcesRequired"
											},
											{
												"type": "literal",
												"value": "fill"
											},
											{
												"type": "literal",
												"value": "fillOpacity"
											},
											{
												"type": "literal",
												"value": "fillRule"
											},
											{
												"type": "literal",
												"value": "filterRes"
											},
											{
												"type": "literal",
												"value": "filterUnits"
											},
											{
												"type": "literal",
												"value": "floodColor"
											},
											{
												"type": "literal",
												"value": "floodOpacity"
											},
											{
												"type": "literal",
												"value": "focusable"
											},
											{
												"type": "literal",
												"value": "fontFamily"
											},
											{
												"type": "literal",
												"value": "fontSize"
											},
											{
												"type": "literal",
												"value": "fontSizeAdjust"
											},
											{
												"type": "literal",
												"value": "fontStretch"
											},
											{
												"type": "literal",
												"value": "fontStyle"
											},
											{
												"type": "literal",
												"value": "fontVariant"
											},
											{
												"type": "literal",
												"value": "fontWeight"
											},
											{
												"type": "literal",
												"value": "format"
											},
											{
												"type": "literal",
												"value": "from"
											},
											{
												"type": "literal",
												"value": "fx"
											},
											{
												"type": "literal",
												"value": "fy"
											},
											{
												"type": "literal",
												"value": "g1"
											},
											{
												"type": "literal",
												"value": "g2"
											},
											{
												"type": "literal",
												"value": "glyphName"
											},
											{
												"type": "literal",
												"value": "glyphOrientationHorizontal"
											},
											{
												"type": "literal",
												"value": "glyphOrientationVertical"
											},
											{
												"type": "literal",
												"value": "glyphRef"
											},
											{
												"type": "literal",
												"value": "gradientTransform"
											},
											{
												"type": "literal",
												"value": "gradientUnits"
											},
											{
												"type": "literal",
												"value": "hanging"
											},
											{
												"type": "literal",
												"value": "horizAdvX"
											},
											{
												"type": "literal",
												"value": "horizOriginX"
											},
											{
												"type": "literal",
												"value": "ideographic"
											},
											{
												"type": "literal",
												"value": "imageRendering"
											},
											{
												"type": "literal",
												"value": "in2"
											},
											{
												"type": "literal",
												"value": "in"
											},
											{
												"type": "literal",
												"value": "intercept"
											},
											{
												"type": "literal",
												"value": "k1"
											},
											{
												"type": "literal",
												"value": "k2"
											},
											{
												"type": "literal",
												"value": "k3"
											},
											{
												"type": "literal",
												"value": "k4"
											},
											{
												"type": "literal",
												"value": "k"
											},
											{
												"type": "literal",
												"value": "kernelMatrix"
											},
											{
												"type": "literal",
												"value": "kernelUnitLength"
											},
											{
												"type": "literal",
												"value": "kerning"
											},
											{
												"type": "literal",
												"value": "keyPoints"
											},
											{
												"type": "literal",
												"value": "keySplines"
											},
											{
												"type": "literal",
												"value": "keyTimes"
											},
											{
												"type": "literal",
												"value": "lengthAdjust"
											},
											{
												"type": "literal",
												"value": "letterSpacing"
											},
											{
												"type": "literal",
												"value": "lightingColor"
											},
											{
												"type": "literal",
												"value": "limitingConeAngle"
											},
											{
												"type": "literal",
												"value": "local"
											},
											{
												"type": "literal",
												"value": "markerEnd"
											},
											{
												"type": "literal",
												"value": "markerHeight"
											},
											{
												"type": "literal",
												"value": "markerMid"
											},
											{
												"type": "literal",
												"value": "markerStart"
											},
											{
												"type": "literal",
												"value": "markerUnits"
											},
											{
												"type": "literal",
												"value": "markerWidth"
											},
											{
												"type": "literal",
												"value": "maskContentUnits"
											},
											{
												"type": "literal",
												"value": "maskUnits"
											},
											{
												"type": "literal",
												"value": "mathematical"
											},
											{
												"type": "literal",
												"value": "mode"
											},
											{
												"type": "literal",
												"value": "numOctaves"
											},
											{
												"type": "literal",
												"value": "offset"
											},
											{
												"type": "literal",
												"value": "opacity"
											},
											{
												"type": "literal",
												"value": "operator"
											},
											{
												"type": "literal",
												"value": "order"
											},
											{
												"type": "literal",
												"value": "orient"
											},
											{
												"type": "literal",
												"value": "orientation"
											},
											{
												"type": "literal",
												"value": "origin"
											},
											{
												"type": "literal",
												"value": "overflow"
											},
											{
												"type": "literal",
												"value": "overlinePosition"
											},
											{
												"type": "literal",
												"value": "overlineThickness"
											},
											{
												"type": "literal",
												"value": "paintOrder"
											},
											{
												"type": "literal",
												"value": "panose1"
											},
											{
												"type": "literal",
												"value": "pathLength"
											},
											{
												"type": "literal",
												"value": "patternContentUnits"
											},
											{
												"type": "literal",
												"value": "patternTransform"
											},
											{
												"type": "literal",
												"value": "patternUnits"
											},
											{
												"type": "literal",
												"value": "pointerEvents"
											},
											{
												"type": "literal",
												"value": "points"
											},
											{
												"type": "literal",
												"value": "pointsAtX"
											},
											{
												"type": "literal",
												"value": "pointsAtY"
											},
											{
												"type": "literal",
												"value": "pointsAtZ"
											},
											{
												"type": "literal",
												"value": "preserveAlpha"
											},
											{
												"type": "literal",
												"value": "preserveAspectRatio"
											},
											{
												"type": "literal",
												"value": "primitiveUnits"
											},
											{
												"type": "literal",
												"value": "r"
											},
											{
												"type": "literal",
												"value": "radius"
											},
											{
												"type": "literal",
												"value": "refX"
											},
											{
												"type": "literal",
												"value": "refY"
											},
											{
												"type": "literal",
												"value": "renderingIntent"
											},
											{
												"type": "literal",
												"value": "repeatCount"
											},
											{
												"type": "literal",
												"value": "repeatDur"
											},
											{
												"type": "literal",
												"value": "requiredExtensions"
											},
											{
												"type": "literal",
												"value": "requiredFeatures"
											},
											{
												"type": "literal",
												"value": "restart"
											},
											{
												"type": "literal",
												"value": "result"
											},
											{
												"type": "literal",
												"value": "rotate"
											},
											{
												"type": "literal",
												"value": "rx"
											},
											{
												"type": "literal",
												"value": "ry"
											},
											{
												"type": "literal",
												"value": "scale"
											},
											{
												"type": "literal",
												"value": "seed"
											},
											{
												"type": "literal",
												"value": "shapeRendering"
											},
											{
												"type": "literal",
												"value": "slope"
											},
											{
												"type": "literal",
												"value": "spacing"
											},
											{
												"type": "literal",
												"value": "specularConstant"
											},
											{
												"type": "literal",
												"value": "specularExponent"
											},
											{
												"type": "literal",
												"value": "speed"
											},
											{
												"type": "literal",
												"value": "spreadMethod"
											},
											{
												"type": "literal",
												"value": "startOffset"
											},
											{
												"type": "literal",
												"value": "stdDeviation"
											},
											{
												"type": "literal",
												"value": "stemh"
											},
											{
												"type": "literal",
												"value": "stemv"
											},
											{
												"type": "literal",
												"value": "stitchTiles"
											},
											{
												"type": "literal",
												"value": "stopColor"
											},
											{
												"type": "literal",
												"value": "stopOpacity"
											},
											{
												"type": "literal",
												"value": "strikethroughPosition"
											},
											{
												"type": "literal",
												"value": "strikethroughThickness"
											},
											{
												"type": "literal",
												"value": "stroke"
											},
											{
												"type": "literal",
												"value": "strokeDasharray"
											},
											{
												"type": "literal",
												"value": "strokeDashoffset"
											},
											{
												"type": "literal",
												"value": "strokeLinecap"
											},
											{
												"type": "literal",
												"value": "strokeLinejoin"
											},
											{
												"type": "literal",
												"value": "strokeMiterlimit"
											},
											{
												"type": "literal",
												"value": "strokeOpacity"
											},
											{
												"type": "literal",
												"value": "strokeWidth"
											},
											{
												"type": "literal",
												"value": "surfaceScale"
											},
											{
												"type": "literal",
												"value": "systemLanguage"
											},
											{
												"type": "literal",
												"value": "tableValues"
											},
											{
												"type": "literal",
												"value": "targetX"
											},
											{
												"type": "literal",
												"value": "targetY"
											},
											{
												"type": "literal",
												"value": "textAnchor"
											},
											{
												"type": "literal",
												"value": "textDecoration"
											},
											{
												"type": "literal",
												"value": "textLength"
											},
											{
												"type": "literal",
												"value": "textRendering"
											},
											{
												"type": "literal",
												"value": "to"
											},
											{
												"type": "literal",
												"value": "transform"
											},
											{
												"type": "literal",
												"value": "u1"
											},
											{
												"type": "literal",
												"value": "u2"
											},
											{
												"type": "literal",
												"value": "underlinePosition"
											},
											{
												"type": "literal",
												"value": "underlineThickness"
											},
											{
												"type": "literal",
												"value": "unicode"
											},
											{
												"type": "literal",
												"value": "unicodeBidi"
											},
											{
												"type": "literal",
												"value": "unicodeRange"
											},
											{
												"type": "literal",
												"value": "unitsPerEm"
											},
											{
												"type": "literal",
												"value": "vAlphabetic"
											},
											{
												"type": "literal",
												"value": "values"
											},
											{
												"type": "literal",
												"value": "vectorEffect"
											},
											{
												"type": "literal",
												"value": "version"
											},
											{
												"type": "literal",
												"value": "vertAdvY"
											},
											{
												"type": "literal",
												"value": "vertOriginX"
											},
											{
												"type": "literal",
												"value": "vertOriginY"
											},
											{
												"type": "literal",
												"value": "vHanging"
											},
											{
												"type": "literal",
												"value": "vIdeographic"
											},
											{
												"type": "literal",
												"value": "viewBox"
											},
											{
												"type": "literal",
												"value": "viewTarget"
											},
											{
												"type": "literal",
												"value": "visibility"
											},
											{
												"type": "literal",
												"value": "vMathematical"
											},
											{
												"type": "literal",
												"value": "widths"
											},
											{
												"type": "literal",
												"value": "wordSpacing"
											},
											{
												"type": "literal",
												"value": "writingMode"
											},
											{
												"type": "literal",
												"value": "x1"
											},
											{
												"type": "literal",
												"value": "x2"
											},
											{
												"type": "literal",
												"value": "x"
											},
											{
												"type": "literal",
												"value": "xChannelSelector"
											},
											{
												"type": "literal",
												"value": "xHeight"
											},
											{
												"type": "literal",
												"value": "xlinkActuate"
											},
											{
												"type": "literal",
												"value": "xlinkArcrole"
											},
											{
												"type": "literal",
												"value": "xlinkHref"
											},
											{
												"type": "literal",
												"value": "xlinkRole"
											},
											{
												"type": "literal",
												"value": "xlinkShow"
											},
											{
												"type": "literal",
												"value": "xlinkTitle"
											},
											{
												"type": "literal",
												"value": "xlinkType"
											},
											{
												"type": "literal",
												"value": "xmlBase"
											},
											{
												"type": "literal",
												"value": "xmlLang"
											},
											{
												"type": "literal",
												"value": "xmlns"
											},
											{
												"type": "literal",
												"value": "xmlnsXlink"
											},
											{
												"type": "literal",
												"value": "xmlSpace"
											},
											{
												"type": "literal",
												"value": "y1"
											},
											{
												"type": "literal",
												"value": "y2"
											},
											{
												"type": "literal",
												"value": "y"
											},
											{
												"type": "literal",
												"value": "yChannelSelector"
											},
											{
												"type": "literal",
												"value": "z"
											},
											{
												"type": "literal",
												"value": "zoomAndPan"
											},
											{
												"type": "literal",
												"value": "aria-activedescendant"
											},
											{
												"type": "literal",
												"value": "aria-atomic"
											},
											{
												"type": "literal",
												"value": "aria-autocomplete"
											},
											{
												"type": "literal",
												"value": "aria-busy"
											},
											{
												"type": "literal",
												"value": "aria-checked"
											},
											{
												"type": "literal",
												"value": "aria-colcount"
											},
											{
												"type": "literal",
												"value": "aria-colindex"
											},
											{
												"type": "literal",
												"value": "aria-colspan"
											},
											{
												"type": "literal",
												"value": "aria-current"
											},
											{
												"type": "literal",
												"value": "aria-disabled"
											},
											{
												"type": "literal",
												"value": "aria-dropeffect"
											},
											{
												"type": "literal",
												"value": "aria-errormessage"
											},
											{
												"type": "literal",
												"value": "aria-flowto"
											},
											{
												"type": "literal",
												"value": "aria-grabbed"
											},
											{
												"type": "literal",
												"value": "aria-hidden"
											},
											{
												"type": "literal",
												"value": "aria-invalid"
											},
											{
												"type": "literal",
												"value": "aria-keyshortcuts"
											},
											{
												"type": "literal",
												"value": "aria-level"
											},
											{
												"type": "literal",
												"value": "aria-live"
											},
											{
												"type": "literal",
												"value": "aria-modal"
											},
											{
												"type": "literal",
												"value": "aria-multiline"
											},
											{
												"type": "literal",
												"value": "aria-multiselectable"
											},
											{
												"type": "literal",
												"value": "aria-orientation"
											},
											{
												"type": "literal",
												"value": "aria-owns"
											},
											{
												"type": "literal",
												"value": "aria-placeholder"
											},
											{
												"type": "literal",
												"value": "aria-posinset"
											},
											{
												"type": "literal",
												"value": "aria-readonly"
											},
											{
												"type": "literal",
												"value": "aria-relevant"
											},
											{
												"type": "literal",
												"value": "aria-required"
											},
											{
												"type": "literal",
												"value": "aria-roledescription"
											},
											{
												"type": "literal",
												"value": "aria-rowcount"
											},
											{
												"type": "literal",
												"value": "aria-rowindex"
											},
											{
												"type": "literal",
												"value": "aria-rowspan"
											},
											{
												"type": "literal",
												"value": "aria-selected"
											},
											{
												"type": "literal",
												"value": "aria-setsize"
											},
											{
												"type": "literal",
												"value": "aria-sort"
											},
											{
												"type": "literal",
												"value": "aria-valuemax"
											},
											{
												"type": "literal",
												"value": "aria-valuemin"
											},
											{
												"type": "literal",
												"value": "aria-valuenow"
											},
											{
												"type": "literal",
												"value": "aria-valuetext"
											},
											{
												"type": "literal",
												"value": "dangerouslySetInnerHTML"
											},
											{
												"type": "literal",
												"value": "onCopy"
											},
											{
												"type": "literal",
												"value": "onCopyCapture"
											},
											{
												"type": "literal",
												"value": "onCut"
											},
											{
												"type": "literal",
												"value": "onCutCapture"
											},
											{
												"type": "literal",
												"value": "onPaste"
											},
											{
												"type": "literal",
												"value": "onPasteCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionEnd"
											},
											{
												"type": "literal",
												"value": "onCompositionEndCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionStart"
											},
											{
												"type": "literal",
												"value": "onCompositionStartCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionUpdate"
											},
											{
												"type": "literal",
												"value": "onCompositionUpdateCapture"
											},
											{
												"type": "literal",
												"value": "onFocusCapture"
											},
											{
												"type": "literal",
												"value": "onBlurCapture"
											},
											{
												"type": "literal",
												"value": "onChange"
											},
											{
												"type": "literal",
												"value": "onChangeCapture"
											},
											{
												"type": "literal",
												"value": "onBeforeInput"
											},
											{
												"type": "literal",
												"value": "onBeforeInputCapture"
											},
											{
												"type": "literal",
												"value": "onInput"
											},
											{
												"type": "literal",
												"value": "onInputCapture"
											},
											{
												"type": "literal",
												"value": "onReset"
											},
											{
												"type": "literal",
												"value": "onResetCapture"
											},
											{
												"type": "literal",
												"value": "onSubmit"
											},
											{
												"type": "literal",
												"value": "onSubmitCapture"
											},
											{
												"type": "literal",
												"value": "onInvalid"
											},
											{
												"type": "literal",
												"value": "onInvalidCapture"
											},
											{
												"type": "literal",
												"value": "onLoad"
											},
											{
												"type": "literal",
												"value": "onLoadCapture"
											},
											{
												"type": "literal",
												"value": "onError"
											},
											{
												"type": "literal",
												"value": "onErrorCapture"
											},
											{
												"type": "literal",
												"value": "onKeyDownCapture"
											},
											{
												"type": "literal",
												"value": "onKeyPress"
											},
											{
												"type": "literal",
												"value": "onKeyPressCapture"
											},
											{
												"type": "literal",
												"value": "onKeyUpCapture"
											},
											{
												"type": "literal",
												"value": "onAbort"
											},
											{
												"type": "literal",
												"value": "onAbortCapture"
											},
											{
												"type": "literal",
												"value": "onCanPlay"
											},
											{
												"type": "literal",
												"value": "onCanPlayCapture"
											},
											{
												"type": "literal",
												"value": "onCanPlayThrough"
											},
											{
												"type": "literal",
												"value": "onCanPlayThroughCapture"
											},
											{
												"type": "literal",
												"value": "onDurationChange"
											},
											{
												"type": "literal",
												"value": "onDurationChangeCapture"
											},
											{
												"type": "literal",
												"value": "onEmptied"
											},
											{
												"type": "literal",
												"value": "onEmptiedCapture"
											},
											{
												"type": "literal",
												"value": "onEncrypted"
											},
											{
												"type": "literal",
												"value": "onEncryptedCapture"
											},
											{
												"type": "literal",
												"value": "onEnded"
											},
											{
												"type": "literal",
												"value": "onEndedCapture"
											},
											{
												"type": "literal",
												"value": "onLoadedData"
											},
											{
												"type": "literal",
												"value": "onLoadedDataCapture"
											},
											{
												"type": "literal",
												"value": "onLoadedMetadata"
											},
											{
												"type": "literal",
												"value": "onLoadedMetadataCapture"
											},
											{
												"type": "literal",
												"value": "onLoadStart"
											},
											{
												"type": "literal",
												"value": "onLoadStartCapture"
											},
											{
												"type": "literal",
												"value": "onPause"
											},
											{
												"type": "literal",
												"value": "onPauseCapture"
											},
											{
												"type": "literal",
												"value": "onPlay"
											},
											{
												"type": "literal",
												"value": "onPlayCapture"
											},
											{
												"type": "literal",
												"value": "onPlaying"
											},
											{
												"type": "literal",
												"value": "onPlayingCapture"
											},
											{
												"type": "literal",
												"value": "onProgress"
											},
											{
												"type": "literal",
												"value": "onProgressCapture"
											},
											{
												"type": "literal",
												"value": "onRateChange"
											},
											{
												"type": "literal",
												"value": "onRateChangeCapture"
											},
											{
												"type": "literal",
												"value": "onSeeked"
											},
											{
												"type": "literal",
												"value": "onSeekedCapture"
											},
											{
												"type": "literal",
												"value": "onSeeking"
											},
											{
												"type": "literal",
												"value": "onSeekingCapture"
											},
											{
												"type": "literal",
												"value": "onStalled"
											},
											{
												"type": "literal",
												"value": "onStalledCapture"
											},
											{
												"type": "literal",
												"value": "onSuspend"
											},
											{
												"type": "literal",
												"value": "onSuspendCapture"
											},
											{
												"type": "literal",
												"value": "onTimeUpdate"
											},
											{
												"type": "literal",
												"value": "onTimeUpdateCapture"
											},
											{
												"type": "literal",
												"value": "onVolumeChange"
											},
											{
												"type": "literal",
												"value": "onVolumeChangeCapture"
											},
											{
												"type": "literal",
												"value": "onWaiting"
											},
											{
												"type": "literal",
												"value": "onWaitingCapture"
											},
											{
												"type": "literal",
												"value": "onAuxClick"
											},
											{
												"type": "literal",
												"value": "onAuxClickCapture"
											},
											{
												"type": "literal",
												"value": "onClick"
											},
											{
												"type": "literal",
												"value": "onClickCapture"
											},
											{
												"type": "literal",
												"value": "onContextMenu"
											},
											{
												"type": "literal",
												"value": "onContextMenuCapture"
											},
											{
												"type": "literal",
												"value": "onDoubleClick"
											},
											{
												"type": "literal",
												"value": "onDoubleClickCapture"
											},
											{
												"type": "literal",
												"value": "onDrag"
											},
											{
												"type": "literal",
												"value": "onDragCapture"
											},
											{
												"type": "literal",
												"value": "onDragEnd"
											},
											{
												"type": "literal",
												"value": "onDragEndCapture"
											},
											{
												"type": "literal",
												"value": "onDragEnter"
											},
											{
												"type": "literal",
												"value": "onDragEnterCapture"
											},
											{
												"type": "literal",
												"value": "onDragExit"
											},
											{
												"type": "literal",
												"value": "onDragExitCapture"
											},
											{
												"type": "literal",
												"value": "onDragLeave"
											},
											{
												"type": "literal",
												"value": "onDragLeaveCapture"
											},
											{
												"type": "literal",
												"value": "onDragOver"
											},
											{
												"type": "literal",
												"value": "onDragOverCapture"
											},
											{
												"type": "literal",
												"value": "onDragStart"
											},
											{
												"type": "literal",
												"value": "onDragStartCapture"
											},
											{
												"type": "literal",
												"value": "onDrop"
											},
											{
												"type": "literal",
												"value": "onDropCapture"
											},
											{
												"type": "literal",
												"value": "onMouseDown"
											},
											{
												"type": "literal",
												"value": "onMouseDownCapture"
											},
											{
												"type": "literal",
												"value": "onMouseEnter"
											},
											{
												"type": "literal",
												"value": "onMouseLeave"
											},
											{
												"type": "literal",
												"value": "onMouseMove"
											},
											{
												"type": "literal",
												"value": "onMouseMoveCapture"
											},
											{
												"type": "literal",
												"value": "onMouseOut"
											},
											{
												"type": "literal",
												"value": "onMouseOutCapture"
											},
											{
												"type": "literal",
												"value": "onMouseOver"
											},
											{
												"type": "literal",
												"value": "onMouseOverCapture"
											},
											{
												"type": "literal",
												"value": "onMouseUp"
											},
											{
												"type": "literal",
												"value": "onMouseUpCapture"
											},
											{
												"type": "literal",
												"value": "onSelect"
											},
											{
												"type": "literal",
												"value": "onSelectCapture"
											},
											{
												"type": "literal",
												"value": "onTouchCancel"
											},
											{
												"type": "literal",
												"value": "onTouchCancelCapture"
											},
											{
												"type": "literal",
												"value": "onTouchEnd"
											},
											{
												"type": "literal",
												"value": "onTouchEndCapture"
											},
											{
												"type": "literal",
												"value": "onTouchMove"
											},
											{
												"type": "literal",
												"value": "onTouchMoveCapture"
											},
											{
												"type": "literal",
												"value": "onTouchStart"
											},
											{
												"type": "literal",
												"value": "onTouchStartCapture"
											},
											{
												"type": "literal",
												"value": "onPointerDown"
											},
											{
												"type": "literal",
												"value": "onPointerDownCapture"
											},
											{
												"type": "literal",
												"value": "onPointerMove"
											},
											{
												"type": "literal",
												"value": "onPointerMoveCapture"
											},
											{
												"type": "literal",
												"value": "onPointerUp"
											},
											{
												"type": "literal",
												"value": "onPointerUpCapture"
											},
											{
												"type": "literal",
												"value": "onPointerCancel"
											},
											{
												"type": "literal",
												"value": "onPointerCancelCapture"
											},
											{
												"type": "literal",
												"value": "onPointerEnter"
											},
											{
												"type": "literal",
												"value": "onPointerEnterCapture"
											},
											{
												"type": "literal",
												"value": "onPointerLeave"
											},
											{
												"type": "literal",
												"value": "onPointerLeaveCapture"
											},
											{
												"type": "literal",
												"value": "onPointerOver"
											},
											{
												"type": "literal",
												"value": "onPointerOverCapture"
											},
											{
												"type": "literal",
												"value": "onPointerOut"
											},
											{
												"type": "literal",
												"value": "onPointerOutCapture"
											},
											{
												"type": "literal",
												"value": "onGotPointerCapture"
											},
											{
												"type": "literal",
												"value": "onGotPointerCaptureCapture"
											},
											{
												"type": "literal",
												"value": "onLostPointerCapture"
											},
											{
												"type": "literal",
												"value": "onLostPointerCaptureCapture"
											},
											{
												"type": "literal",
												"value": "onScroll"
											},
											{
												"type": "literal",
												"value": "onScrollCapture"
											},
											{
												"type": "literal",
												"value": "onWheel"
											},
											{
												"type": "literal",
												"value": "onWheelCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationStart"
											},
											{
												"type": "literal",
												"value": "onAnimationStartCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationEnd"
											},
											{
												"type": "literal",
												"value": "onAnimationEndCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationIteration"
											},
											{
												"type": "literal",
												"value": "onAnimationIterationCapture"
											},
											{
												"type": "literal",
												"value": "onTransitionEnd"
											},
											{
												"type": "literal",
												"value": "onTransitionEndCapture"
											},
											{
												"type": "literal",
												"value": "key"
											},
											{
												"type": "literal",
												"value": "alt"
											}
										]
									}
								],
								"name": "Pick"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SVGSVGElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 12,
			"name": "InputAdornment",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/InputAdornment/InputAdornment.tsx",
					"line": 6,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLSpanElement"
							}
						],
						"name": "React.HTMLAttributes"
					}
				],
				"name": "React.VFC"
			},
			"defaultValue": "..."
		},
		{
			"id": 16,
			"name": "InputSelect",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/InputSelect/InputSelect.tsx",
					"line": 18,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 855,
								"name": "InputSelectProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLSelectElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 17,
			"name": "InputSelection",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/InputSelection/InputSelection.tsx",
					"line": 39,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1130,
										"name": "InputSelectionProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "cite"
											},
											{
												"type": "literal",
												"value": "data"
											},
											{
												"type": "literal",
												"value": "form"
											},
											{
												"type": "literal",
												"value": "label"
											},
											{
												"type": "literal",
												"value": "slot"
											},
											{
												"type": "literal",
												"value": "span"
											},
											{
												"type": "literal",
												"value": "style"
											},
											{
												"type": "literal",
												"value": "summary"
											},
											{
												"type": "literal",
												"value": "title"
											},
											{
												"type": "literal",
												"value": "pattern"
											},
											{
												"type": "literal",
												"value": "as"
											},
											{
												"type": "literal",
												"value": "children"
											},
											{
												"type": "literal",
												"value": "autoFocus"
											},
											{
												"type": "literal",
												"value": "onFocus"
											},
											{
												"type": "literal",
												"value": "onBlur"
											},
											{
												"type": "literal",
												"value": "onKeyDown"
											},
											{
												"type": "literal",
												"value": "onKeyUp"
											},
											{
												"type": "literal",
												"value": "href"
											},
											{
												"type": "literal",
												"value": "target"
											},
											{
												"type": "literal",
												"value": "rel"
											},
											{
												"type": "literal",
												"value": "aria-expanded"
											},
											{
												"type": "literal",
												"value": "aria-haspopup"
											},
											{
												"type": "literal",
												"value": "aria-controls"
											},
											{
												"type": "literal",
												"value": "aria-pressed"
											},
											{
												"type": "literal",
												"value": "type"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "aria-label"
											},
											{
												"type": "literal",
												"value": "aria-labelledby"
											},
											{
												"type": "literal",
												"value": "aria-describedby"
											},
											{
												"type": "literal",
												"value": "aria-details"
											},
											{
												"type": "literal",
												"value": "variant"
											},
											{
												"type": "literal",
												"value": "vol"
											},
											{
												"type": "literal",
												"value": "className"
											},
											{
												"type": "literal",
												"value": "color"
											},
											{
												"type": "literal",
												"value": "height"
											},
											{
												"type": "literal",
												"value": "lang"
											},
											{
												"type": "literal",
												"value": "max"
											},
											{
												"type": "literal",
												"value": "media"
											},
											{
												"type": "literal",
												"value": "method"
											},
											{
												"type": "literal",
												"value": "min"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "width"
											},
											{
												"type": "literal",
												"value": "role"
											},
											{
												"type": "literal",
												"value": "tabIndex"
											},
											{
												"type": "literal",
												"value": "crossOrigin"
											},
											{
												"type": "literal",
												"value": "aria-activedescendant"
											},
											{
												"type": "literal",
												"value": "aria-atomic"
											},
											{
												"type": "literal",
												"value": "aria-autocomplete"
											},
											{
												"type": "literal",
												"value": "aria-busy"
											},
											{
												"type": "literal",
												"value": "aria-checked"
											},
											{
												"type": "literal",
												"value": "aria-colcount"
											},
											{
												"type": "literal",
												"value": "aria-colindex"
											},
											{
												"type": "literal",
												"value": "aria-colspan"
											},
											{
												"type": "literal",
												"value": "aria-current"
											},
											{
												"type": "literal",
												"value": "aria-disabled"
											},
											{
												"type": "literal",
												"value": "aria-dropeffect"
											},
											{
												"type": "literal",
												"value": "aria-errormessage"
											},
											{
												"type": "literal",
												"value": "aria-flowto"
											},
											{
												"type": "literal",
												"value": "aria-grabbed"
											},
											{
												"type": "literal",
												"value": "aria-hidden"
											},
											{
												"type": "literal",
												"value": "aria-invalid"
											},
											{
												"type": "literal",
												"value": "aria-keyshortcuts"
											},
											{
												"type": "literal",
												"value": "aria-level"
											},
											{
												"type": "literal",
												"value": "aria-live"
											},
											{
												"type": "literal",
												"value": "aria-modal"
											},
											{
												"type": "literal",
												"value": "aria-multiline"
											},
											{
												"type": "literal",
												"value": "aria-multiselectable"
											},
											{
												"type": "literal",
												"value": "aria-orientation"
											},
											{
												"type": "literal",
												"value": "aria-owns"
											},
											{
												"type": "literal",
												"value": "aria-placeholder"
											},
											{
												"type": "literal",
												"value": "aria-posinset"
											},
											{
												"type": "literal",
												"value": "aria-readonly"
											},
											{
												"type": "literal",
												"value": "aria-relevant"
											},
											{
												"type": "literal",
												"value": "aria-required"
											},
											{
												"type": "literal",
												"value": "aria-roledescription"
											},
											{
												"type": "literal",
												"value": "aria-rowcount"
											},
											{
												"type": "literal",
												"value": "aria-rowindex"
											},
											{
												"type": "literal",
												"value": "aria-rowspan"
											},
											{
												"type": "literal",
												"value": "aria-selected"
											},
											{
												"type": "literal",
												"value": "aria-setsize"
											},
											{
												"type": "literal",
												"value": "aria-sort"
											},
											{
												"type": "literal",
												"value": "aria-valuemax"
											},
											{
												"type": "literal",
												"value": "aria-valuemin"
											},
											{
												"type": "literal",
												"value": "aria-valuenow"
											},
											{
												"type": "literal",
												"value": "aria-valuetext"
											},
											{
												"type": "literal",
												"value": "dangerouslySetInnerHTML"
											},
											{
												"type": "literal",
												"value": "onCopy"
											},
											{
												"type": "literal",
												"value": "onCopyCapture"
											},
											{
												"type": "literal",
												"value": "onCut"
											},
											{
												"type": "literal",
												"value": "onCutCapture"
											},
											{
												"type": "literal",
												"value": "onPaste"
											},
											{
												"type": "literal",
												"value": "onPasteCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionEnd"
											},
											{
												"type": "literal",
												"value": "onCompositionEndCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionStart"
											},
											{
												"type": "literal",
												"value": "onCompositionStartCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionUpdate"
											},
											{
												"type": "literal",
												"value": "onCompositionUpdateCapture"
											},
											{
												"type": "literal",
												"value": "onFocusCapture"
											},
											{
												"type": "literal",
												"value": "onBlurCapture"
											},
											{
												"type": "literal",
												"value": "onChange"
											},
											{
												"type": "literal",
												"value": "onChangeCapture"
											},
											{
												"type": "literal",
												"value": "onBeforeInput"
											},
											{
												"type": "literal",
												"value": "onBeforeInputCapture"
											},
											{
												"type": "literal",
												"value": "onInput"
											},
											{
												"type": "literal",
												"value": "onInputCapture"
											},
											{
												"type": "literal",
												"value": "onReset"
											},
											{
												"type": "literal",
												"value": "onResetCapture"
											},
											{
												"type": "literal",
												"value": "onSubmit"
											},
											{
												"type": "literal",
												"value": "onSubmitCapture"
											},
											{
												"type": "literal",
												"value": "onInvalid"
											},
											{
												"type": "literal",
												"value": "onInvalidCapture"
											},
											{
												"type": "literal",
												"value": "onLoad"
											},
											{
												"type": "literal",
												"value": "onLoadCapture"
											},
											{
												"type": "literal",
												"value": "onError"
											},
											{
												"type": "literal",
												"value": "onErrorCapture"
											},
											{
												"type": "literal",
												"value": "onKeyDownCapture"
											},
											{
												"type": "literal",
												"value": "onKeyPress"
											},
											{
												"type": "literal",
												"value": "onKeyPressCapture"
											},
											{
												"type": "literal",
												"value": "onKeyUpCapture"
											},
											{
												"type": "literal",
												"value": "onAbort"
											},
											{
												"type": "literal",
												"value": "onAbortCapture"
											},
											{
												"type": "literal",
												"value": "onCanPlay"
											},
											{
												"type": "literal",
												"value": "onCanPlayCapture"
											},
											{
												"type": "literal",
												"value": "onCanPlayThrough"
											},
											{
												"type": "literal",
												"value": "onCanPlayThroughCapture"
											},
											{
												"type": "literal",
												"value": "onDurationChange"
											},
											{
												"type": "literal",
												"value": "onDurationChangeCapture"
											},
											{
												"type": "literal",
												"value": "onEmptied"
											},
											{
												"type": "literal",
												"value": "onEmptiedCapture"
											},
											{
												"type": "literal",
												"value": "onEncrypted"
											},
											{
												"type": "literal",
												"value": "onEncryptedCapture"
											},
											{
												"type": "literal",
												"value": "onEnded"
											},
											{
												"type": "literal",
												"value": "onEndedCapture"
											},
											{
												"type": "literal",
												"value": "onLoadedData"
											},
											{
												"type": "literal",
												"value": "onLoadedDataCapture"
											},
											{
												"type": "literal",
												"value": "onLoadedMetadata"
											},
											{
												"type": "literal",
												"value": "onLoadedMetadataCapture"
											},
											{
												"type": "literal",
												"value": "onLoadStart"
											},
											{
												"type": "literal",
												"value": "onLoadStartCapture"
											},
											{
												"type": "literal",
												"value": "onPause"
											},
											{
												"type": "literal",
												"value": "onPauseCapture"
											},
											{
												"type": "literal",
												"value": "onPlay"
											},
											{
												"type": "literal",
												"value": "onPlayCapture"
											},
											{
												"type": "literal",
												"value": "onPlaying"
											},
											{
												"type": "literal",
												"value": "onPlayingCapture"
											},
											{
												"type": "literal",
												"value": "onProgress"
											},
											{
												"type": "literal",
												"value": "onProgressCapture"
											},
											{
												"type": "literal",
												"value": "onRateChange"
											},
											{
												"type": "literal",
												"value": "onRateChangeCapture"
											},
											{
												"type": "literal",
												"value": "onSeeked"
											},
											{
												"type": "literal",
												"value": "onSeekedCapture"
											},
											{
												"type": "literal",
												"value": "onSeeking"
											},
											{
												"type": "literal",
												"value": "onSeekingCapture"
											},
											{
												"type": "literal",
												"value": "onStalled"
											},
											{
												"type": "literal",
												"value": "onStalledCapture"
											},
											{
												"type": "literal",
												"value": "onSuspend"
											},
											{
												"type": "literal",
												"value": "onSuspendCapture"
											},
											{
												"type": "literal",
												"value": "onTimeUpdate"
											},
											{
												"type": "literal",
												"value": "onTimeUpdateCapture"
											},
											{
												"type": "literal",
												"value": "onVolumeChange"
											},
											{
												"type": "literal",
												"value": "onVolumeChangeCapture"
											},
											{
												"type": "literal",
												"value": "onWaiting"
											},
											{
												"type": "literal",
												"value": "onWaitingCapture"
											},
											{
												"type": "literal",
												"value": "onAuxClick"
											},
											{
												"type": "literal",
												"value": "onAuxClickCapture"
											},
											{
												"type": "literal",
												"value": "onClick"
											},
											{
												"type": "literal",
												"value": "onClickCapture"
											},
											{
												"type": "literal",
												"value": "onContextMenu"
											},
											{
												"type": "literal",
												"value": "onContextMenuCapture"
											},
											{
												"type": "literal",
												"value": "onDoubleClick"
											},
											{
												"type": "literal",
												"value": "onDoubleClickCapture"
											},
											{
												"type": "literal",
												"value": "onDrag"
											},
											{
												"type": "literal",
												"value": "onDragCapture"
											},
											{
												"type": "literal",
												"value": "onDragEnd"
											},
											{
												"type": "literal",
												"value": "onDragEndCapture"
											},
											{
												"type": "literal",
												"value": "onDragEnter"
											},
											{
												"type": "literal",
												"value": "onDragEnterCapture"
											},
											{
												"type": "literal",
												"value": "onDragExit"
											},
											{
												"type": "literal",
												"value": "onDragExitCapture"
											},
											{
												"type": "literal",
												"value": "onDragLeave"
											},
											{
												"type": "literal",
												"value": "onDragLeaveCapture"
											},
											{
												"type": "literal",
												"value": "onDragOver"
											},
											{
												"type": "literal",
												"value": "onDragOverCapture"
											},
											{
												"type": "literal",
												"value": "onDragStart"
											},
											{
												"type": "literal",
												"value": "onDragStartCapture"
											},
											{
												"type": "literal",
												"value": "onDrop"
											},
											{
												"type": "literal",
												"value": "onDropCapture"
											},
											{
												"type": "literal",
												"value": "onMouseDown"
											},
											{
												"type": "literal",
												"value": "onMouseDownCapture"
											},
											{
												"type": "literal",
												"value": "onMouseEnter"
											},
											{
												"type": "literal",
												"value": "onMouseLeave"
											},
											{
												"type": "literal",
												"value": "onMouseMove"
											},
											{
												"type": "literal",
												"value": "onMouseMoveCapture"
											},
											{
												"type": "literal",
												"value": "onMouseOut"
											},
											{
												"type": "literal",
												"value": "onMouseOutCapture"
											},
											{
												"type": "literal",
												"value": "onMouseOver"
											},
											{
												"type": "literal",
												"value": "onMouseOverCapture"
											},
											{
												"type": "literal",
												"value": "onMouseUp"
											},
											{
												"type": "literal",
												"value": "onMouseUpCapture"
											},
											{
												"type": "literal",
												"value": "onSelect"
											},
											{
												"type": "literal",
												"value": "onSelectCapture"
											},
											{
												"type": "literal",
												"value": "onTouchCancel"
											},
											{
												"type": "literal",
												"value": "onTouchCancelCapture"
											},
											{
												"type": "literal",
												"value": "onTouchEnd"
											},
											{
												"type": "literal",
												"value": "onTouchEndCapture"
											},
											{
												"type": "literal",
												"value": "onTouchMove"
											},
											{
												"type": "literal",
												"value": "onTouchMoveCapture"
											},
											{
												"type": "literal",
												"value": "onTouchStart"
											},
											{
												"type": "literal",
												"value": "onTouchStartCapture"
											},
											{
												"type": "literal",
												"value": "onPointerDown"
											},
											{
												"type": "literal",
												"value": "onPointerDownCapture"
											},
											{
												"type": "literal",
												"value": "onPointerMove"
											},
											{
												"type": "literal",
												"value": "onPointerMoveCapture"
											},
											{
												"type": "literal",
												"value": "onPointerUp"
											},
											{
												"type": "literal",
												"value": "onPointerUpCapture"
											},
											{
												"type": "literal",
												"value": "onPointerCancel"
											},
											{
												"type": "literal",
												"value": "onPointerCancelCapture"
											},
											{
												"type": "literal",
												"value": "onPointerEnter"
											},
											{
												"type": "literal",
												"value": "onPointerEnterCapture"
											},
											{
												"type": "literal",
												"value": "onPointerLeave"
											},
											{
												"type": "literal",
												"value": "onPointerLeaveCapture"
											},
											{
												"type": "literal",
												"value": "onPointerOver"
											},
											{
												"type": "literal",
												"value": "onPointerOverCapture"
											},
											{
												"type": "literal",
												"value": "onPointerOut"
											},
											{
												"type": "literal",
												"value": "onPointerOutCapture"
											},
											{
												"type": "literal",
												"value": "onGotPointerCapture"
											},
											{
												"type": "literal",
												"value": "onGotPointerCaptureCapture"
											},
											{
												"type": "literal",
												"value": "onLostPointerCapture"
											},
											{
												"type": "literal",
												"value": "onLostPointerCaptureCapture"
											},
											{
												"type": "literal",
												"value": "onScroll"
											},
											{
												"type": "literal",
												"value": "onScrollCapture"
											},
											{
												"type": "literal",
												"value": "onWheel"
											},
											{
												"type": "literal",
												"value": "onWheelCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationStart"
											},
											{
												"type": "literal",
												"value": "onAnimationStartCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationEnd"
											},
											{
												"type": "literal",
												"value": "onAnimationEndCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationIteration"
											},
											{
												"type": "literal",
												"value": "onAnimationIterationCapture"
											},
											{
												"type": "literal",
												"value": "onTransitionEnd"
											},
											{
												"type": "literal",
												"value": "onTransitionEndCapture"
											},
											{
												"type": "literal",
												"value": "key"
											},
											{
												"type": "literal",
												"value": "list"
											},
											{
												"type": "literal",
												"value": "classID"
											},
											{
												"type": "literal",
												"value": "useMap"
											},
											{
												"type": "literal",
												"value": "wmode"
											},
											{
												"type": "literal",
												"value": "defaultChecked"
											},
											{
												"type": "literal",
												"value": "defaultValue"
											},
											{
												"type": "literal",
												"value": "suppressContentEditableWarning"
											},
											{
												"type": "literal",
												"value": "suppressHydrationWarning"
											},
											{
												"type": "literal",
												"value": "accessKey"
											},
											{
												"type": "literal",
												"value": "contentEditable"
											},
											{
												"type": "literal",
												"value": "contextMenu"
											},
											{
												"type": "literal",
												"value": "dir"
											},
											{
												"type": "literal",
												"value": "draggable"
											},
											{
												"type": "literal",
												"value": "hidden"
											},
											{
												"type": "literal",
												"value": "placeholder"
											},
											{
												"type": "literal",
												"value": "spellCheck"
											},
											{
												"type": "literal",
												"value": "translate"
											},
											{
												"type": "literal",
												"value": "radioGroup"
											},
											{
												"type": "literal",
												"value": "about"
											},
											{
												"type": "literal",
												"value": "datatype"
											},
											{
												"type": "literal",
												"value": "inlist"
											},
											{
												"type": "literal",
												"value": "prefix"
											},
											{
												"type": "literal",
												"value": "property"
											},
											{
												"type": "literal",
												"value": "resource"
											},
											{
												"type": "literal",
												"value": "typeof"
											},
											{
												"type": "literal",
												"value": "vocab"
											},
											{
												"type": "literal",
												"value": "autoCapitalize"
											},
											{
												"type": "literal",
												"value": "autoCorrect"
											},
											{
												"type": "literal",
												"value": "autoSave"
											},
											{
												"type": "literal",
												"value": "itemProp"
											},
											{
												"type": "literal",
												"value": "itemScope"
											},
											{
												"type": "literal",
												"value": "itemType"
											},
											{
												"type": "literal",
												"value": "itemID"
											},
											{
												"type": "literal",
												"value": "itemRef"
											},
											{
												"type": "literal",
												"value": "results"
											},
											{
												"type": "literal",
												"value": "security"
											},
											{
												"type": "literal",
												"value": "unselectable"
											},
											{
												"type": "literal",
												"value": "inputMode"
											},
											{
												"type": "literal",
												"value": "is"
											},
											{
												"type": "literal",
												"value": "download"
											},
											{
												"type": "literal",
												"value": "hrefLang"
											},
											{
												"type": "literal",
												"value": "alt"
											},
											{
												"type": "literal",
												"value": "coords"
											},
											{
												"type": "literal",
												"value": "shape"
											},
											{
												"type": "literal",
												"value": "autoPlay"
											},
											{
												"type": "literal",
												"value": "controls"
											},
											{
												"type": "literal",
												"value": "loop"
											},
											{
												"type": "literal",
												"value": "mediaGroup"
											},
											{
												"type": "literal",
												"value": "muted"
											},
											{
												"type": "literal",
												"value": "playsInline"
											},
											{
												"type": "literal",
												"value": "preload"
											},
											{
												"type": "literal",
												"value": "src"
											},
											{
												"type": "literal",
												"value": "disabled"
											},
											{
												"type": "literal",
												"value": "formAction"
											},
											{
												"type": "literal",
												"value": "formEncType"
											},
											{
												"type": "literal",
												"value": "formMethod"
											},
											{
												"type": "literal",
												"value": "formNoValidate"
											},
											{
												"type": "literal",
												"value": "formTarget"
											},
											{
												"type": "literal",
												"value": "value"
											},
											{
												"type": "literal",
												"value": "dateTime"
											},
											{
												"type": "literal",
												"value": "open"
											},
											{
												"type": "literal",
												"value": "acceptCharset"
											},
											{
												"type": "literal",
												"value": "action"
											},
											{
												"type": "literal",
												"value": "autoComplete"
											},
											{
												"type": "literal",
												"value": "encType"
											},
											{
												"type": "literal",
												"value": "noValidate"
											},
											{
												"type": "literal",
												"value": "manifest"
											},
											{
												"type": "literal",
												"value": "allowFullScreen"
											},
											{
												"type": "literal",
												"value": "allowTransparency"
											},
											{
												"type": "literal",
												"value": "frameBorder"
											},
											{
												"type": "literal",
												"value": "marginHeight"
											},
											{
												"type": "literal",
												"value": "marginWidth"
											},
											{
												"type": "literal",
												"value": "sandbox"
											},
											{
												"type": "literal",
												"value": "scrolling"
											},
											{
												"type": "literal",
												"value": "seamless"
											},
											{
												"type": "literal",
												"value": "srcDoc"
											},
											{
												"type": "literal",
												"value": "sizes"
											},
											{
												"type": "literal",
												"value": "srcSet"
											},
											{
												"type": "literal",
												"value": "async"
											},
											{
												"type": "literal",
												"value": "accept"
											},
											{
												"type": "literal",
												"value": "capture"
											},
											{
												"type": "literal",
												"value": "checked"
											},
											{
												"type": "literal",
												"value": "maxLength"
											},
											{
												"type": "literal",
												"value": "minLength"
											},
											{
												"type": "literal",
												"value": "multiple"
											},
											{
												"type": "literal",
												"value": "readOnly"
											},
											{
												"type": "literal",
												"value": "required"
											},
											{
												"type": "literal",
												"value": "size"
											},
											{
												"type": "literal",
												"value": "step"
											},
											{
												"type": "literal",
												"value": "challenge"
											},
											{
												"type": "literal",
												"value": "keyType"
											},
											{
												"type": "literal",
												"value": "keyParams"
											},
											{
												"type": "literal",
												"value": "htmlFor"
											},
											{
												"type": "literal",
												"value": "integrity"
											},
											{
												"type": "literal",
												"value": "charSet"
											},
											{
												"type": "literal",
												"value": "content"
											},
											{
												"type": "literal",
												"value": "httpEquiv"
											},
											{
												"type": "literal",
												"value": "high"
											},
											{
												"type": "literal",
												"value": "low"
											},
											{
												"type": "literal",
												"value": "optimum"
											},
											{
												"type": "literal",
												"value": "reversed"
											},
											{
												"type": "literal",
												"value": "start"
											},
											{
												"type": "literal",
												"value": "selected"
											},
											{
												"type": "literal",
												"value": "defer"
											},
											{
												"type": "literal",
												"value": "nonce"
											},
											{
												"type": "literal",
												"value": "scoped"
											},
											{
												"type": "literal",
												"value": "cellPadding"
											},
											{
												"type": "literal",
												"value": "cellSpacing"
											},
											{
												"type": "literal",
												"value": "colSpan"
											},
											{
												"type": "literal",
												"value": "headers"
											},
											{
												"type": "literal",
												"value": "rowSpan"
											},
											{
												"type": "literal",
												"value": "scope"
											},
											{
												"type": "literal",
												"value": "cols"
											},
											{
												"type": "literal",
												"value": "rows"
											},
											{
												"type": "literal",
												"value": "wrap"
											},
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "kind"
											},
											{
												"type": "literal",
												"value": "srcLang"
											},
											{
												"type": "literal",
												"value": "poster"
											},
											{
												"type": "literal",
												"value": "error"
											},
											{
												"type": "literal",
												"value": "touched"
											},
											{
												"type": "literal",
												"value": "hint"
											},
											{
												"type": "literal",
												"value": "labelVisuallyHidden"
											},
											{
												"type": "literal",
												"value": "inputPos"
											}
										]
									}
								],
								"name": "Pick"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLInputElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 18,
			"name": "InputSelectionControl",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/InputSelectionControl/InputSelectionControl.tsx",
					"line": 15,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1501,
										"name": "InputSelectionControlProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "cite"
											},
											{
												"type": "literal",
												"value": "data"
											},
											{
												"type": "literal",
												"value": "form"
											},
											{
												"type": "literal",
												"value": "label"
											},
											{
												"type": "literal",
												"value": "slot"
											},
											{
												"type": "literal",
												"value": "span"
											},
											{
												"type": "literal",
												"value": "style"
											},
											{
												"type": "literal",
												"value": "summary"
											},
											{
												"type": "literal",
												"value": "title"
											},
											{
												"type": "literal",
												"value": "pattern"
											},
											{
												"type": "literal",
												"value": "as"
											},
											{
												"type": "literal",
												"value": "children"
											},
											{
												"type": "literal",
												"value": "autoFocus"
											},
											{
												"type": "literal",
												"value": "onFocus"
											},
											{
												"type": "literal",
												"value": "onBlur"
											},
											{
												"type": "literal",
												"value": "onKeyDown"
											},
											{
												"type": "literal",
												"value": "onKeyUp"
											},
											{
												"type": "literal",
												"value": "href"
											},
											{
												"type": "literal",
												"value": "target"
											},
											{
												"type": "literal",
												"value": "rel"
											},
											{
												"type": "literal",
												"value": "aria-expanded"
											},
											{
												"type": "literal",
												"value": "aria-haspopup"
											},
											{
												"type": "literal",
												"value": "aria-controls"
											},
											{
												"type": "literal",
												"value": "aria-pressed"
											},
											{
												"type": "literal",
												"value": "type"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "aria-label"
											},
											{
												"type": "literal",
												"value": "aria-labelledby"
											},
											{
												"type": "literal",
												"value": "aria-describedby"
											},
											{
												"type": "literal",
												"value": "aria-details"
											},
											{
												"type": "literal",
												"value": "className"
											},
											{
												"type": "literal",
												"value": "color"
											},
											{
												"type": "literal",
												"value": "height"
											},
											{
												"type": "literal",
												"value": "lang"
											},
											{
												"type": "literal",
												"value": "max"
											},
											{
												"type": "literal",
												"value": "media"
											},
											{
												"type": "literal",
												"value": "method"
											},
											{
												"type": "literal",
												"value": "min"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "width"
											},
											{
												"type": "literal",
												"value": "role"
											},
											{
												"type": "literal",
												"value": "tabIndex"
											},
											{
												"type": "literal",
												"value": "crossOrigin"
											},
											{
												"type": "literal",
												"value": "aria-activedescendant"
											},
											{
												"type": "literal",
												"value": "aria-atomic"
											},
											{
												"type": "literal",
												"value": "aria-autocomplete"
											},
											{
												"type": "literal",
												"value": "aria-busy"
											},
											{
												"type": "literal",
												"value": "aria-checked"
											},
											{
												"type": "literal",
												"value": "aria-colcount"
											},
											{
												"type": "literal",
												"value": "aria-colindex"
											},
											{
												"type": "literal",
												"value": "aria-colspan"
											},
											{
												"type": "literal",
												"value": "aria-current"
											},
											{
												"type": "literal",
												"value": "aria-disabled"
											},
											{
												"type": "literal",
												"value": "aria-dropeffect"
											},
											{
												"type": "literal",
												"value": "aria-errormessage"
											},
											{
												"type": "literal",
												"value": "aria-flowto"
											},
											{
												"type": "literal",
												"value": "aria-grabbed"
											},
											{
												"type": "literal",
												"value": "aria-hidden"
											},
											{
												"type": "literal",
												"value": "aria-invalid"
											},
											{
												"type": "literal",
												"value": "aria-keyshortcuts"
											},
											{
												"type": "literal",
												"value": "aria-level"
											},
											{
												"type": "literal",
												"value": "aria-live"
											},
											{
												"type": "literal",
												"value": "aria-modal"
											},
											{
												"type": "literal",
												"value": "aria-multiline"
											},
											{
												"type": "literal",
												"value": "aria-multiselectable"
											},
											{
												"type": "literal",
												"value": "aria-orientation"
											},
											{
												"type": "literal",
												"value": "aria-owns"
											},
											{
												"type": "literal",
												"value": "aria-placeholder"
											},
											{
												"type": "literal",
												"value": "aria-posinset"
											},
											{
												"type": "literal",
												"value": "aria-readonly"
											},
											{
												"type": "literal",
												"value": "aria-relevant"
											},
											{
												"type": "literal",
												"value": "aria-required"
											},
											{
												"type": "literal",
												"value": "aria-roledescription"
											},
											{
												"type": "literal",
												"value": "aria-rowcount"
											},
											{
												"type": "literal",
												"value": "aria-rowindex"
											},
											{
												"type": "literal",
												"value": "aria-rowspan"
											},
											{
												"type": "literal",
												"value": "aria-selected"
											},
											{
												"type": "literal",
												"value": "aria-setsize"
											},
											{
												"type": "literal",
												"value": "aria-sort"
											},
											{
												"type": "literal",
												"value": "aria-valuemax"
											},
											{
												"type": "literal",
												"value": "aria-valuemin"
											},
											{
												"type": "literal",
												"value": "aria-valuenow"
											},
											{
												"type": "literal",
												"value": "aria-valuetext"
											},
											{
												"type": "literal",
												"value": "dangerouslySetInnerHTML"
											},
											{
												"type": "literal",
												"value": "onCopy"
											},
											{
												"type": "literal",
												"value": "onCopyCapture"
											},
											{
												"type": "literal",
												"value": "onCut"
											},
											{
												"type": "literal",
												"value": "onCutCapture"
											},
											{
												"type": "literal",
												"value": "onPaste"
											},
											{
												"type": "literal",
												"value": "onPasteCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionEnd"
											},
											{
												"type": "literal",
												"value": "onCompositionEndCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionStart"
											},
											{
												"type": "literal",
												"value": "onCompositionStartCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionUpdate"
											},
											{
												"type": "literal",
												"value": "onCompositionUpdateCapture"
											},
											{
												"type": "literal",
												"value": "onFocusCapture"
											},
											{
												"type": "literal",
												"value": "onBlurCapture"
											},
											{
												"type": "literal",
												"value": "onChange"
											},
											{
												"type": "literal",
												"value": "onChangeCapture"
											},
											{
												"type": "literal",
												"value": "onBeforeInput"
											},
											{
												"type": "literal",
												"value": "onBeforeInputCapture"
											},
											{
												"type": "literal",
												"value": "onInput"
											},
											{
												"type": "literal",
												"value": "onInputCapture"
											},
											{
												"type": "literal",
												"value": "onReset"
											},
											{
												"type": "literal",
												"value": "onResetCapture"
											},
											{
												"type": "literal",
												"value": "onSubmit"
											},
											{
												"type": "literal",
												"value": "onSubmitCapture"
											},
											{
												"type": "literal",
												"value": "onInvalid"
											},
											{
												"type": "literal",
												"value": "onInvalidCapture"
											},
											{
												"type": "literal",
												"value": "onLoad"
											},
											{
												"type": "literal",
												"value": "onLoadCapture"
											},
											{
												"type": "literal",
												"value": "onError"
											},
											{
												"type": "literal",
												"value": "onErrorCapture"
											},
											{
												"type": "literal",
												"value": "onKeyDownCapture"
											},
											{
												"type": "literal",
												"value": "onKeyPress"
											},
											{
												"type": "literal",
												"value": "onKeyPressCapture"
											},
											{
												"type": "literal",
												"value": "onKeyUpCapture"
											},
											{
												"type": "literal",
												"value": "onAbort"
											},
											{
												"type": "literal",
												"value": "onAbortCapture"
											},
											{
												"type": "literal",
												"value": "onCanPlay"
											},
											{
												"type": "literal",
												"value": "onCanPlayCapture"
											},
											{
												"type": "literal",
												"value": "onCanPlayThrough"
											},
											{
												"type": "literal",
												"value": "onCanPlayThroughCapture"
											},
											{
												"type": "literal",
												"value": "onDurationChange"
											},
											{
												"type": "literal",
												"value": "onDurationChangeCapture"
											},
											{
												"type": "literal",
												"value": "onEmptied"
											},
											{
												"type": "literal",
												"value": "onEmptiedCapture"
											},
											{
												"type": "literal",
												"value": "onEncrypted"
											},
											{
												"type": "literal",
												"value": "onEncryptedCapture"
											},
											{
												"type": "literal",
												"value": "onEnded"
											},
											{
												"type": "literal",
												"value": "onEndedCapture"
											},
											{
												"type": "literal",
												"value": "onLoadedData"
											},
											{
												"type": "literal",
												"value": "onLoadedDataCapture"
											},
											{
												"type": "literal",
												"value": "onLoadedMetadata"
											},
											{
												"type": "literal",
												"value": "onLoadedMetadataCapture"
											},
											{
												"type": "literal",
												"value": "onLoadStart"
											},
											{
												"type": "literal",
												"value": "onLoadStartCapture"
											},
											{
												"type": "literal",
												"value": "onPause"
											},
											{
												"type": "literal",
												"value": "onPauseCapture"
											},
											{
												"type": "literal",
												"value": "onPlay"
											},
											{
												"type": "literal",
												"value": "onPlayCapture"
											},
											{
												"type": "literal",
												"value": "onPlaying"
											},
											{
												"type": "literal",
												"value": "onPlayingCapture"
											},
											{
												"type": "literal",
												"value": "onProgress"
											},
											{
												"type": "literal",
												"value": "onProgressCapture"
											},
											{
												"type": "literal",
												"value": "onRateChange"
											},
											{
												"type": "literal",
												"value": "onRateChangeCapture"
											},
											{
												"type": "literal",
												"value": "onSeeked"
											},
											{
												"type": "literal",
												"value": "onSeekedCapture"
											},
											{
												"type": "literal",
												"value": "onSeeking"
											},
											{
												"type": "literal",
												"value": "onSeekingCapture"
											},
											{
												"type": "literal",
												"value": "onStalled"
											},
											{
												"type": "literal",
												"value": "onStalledCapture"
											},
											{
												"type": "literal",
												"value": "onSuspend"
											},
											{
												"type": "literal",
												"value": "onSuspendCapture"
											},
											{
												"type": "literal",
												"value": "onTimeUpdate"
											},
											{
												"type": "literal",
												"value": "onTimeUpdateCapture"
											},
											{
												"type": "literal",
												"value": "onVolumeChange"
											},
											{
												"type": "literal",
												"value": "onVolumeChangeCapture"
											},
											{
												"type": "literal",
												"value": "onWaiting"
											},
											{
												"type": "literal",
												"value": "onWaitingCapture"
											},
											{
												"type": "literal",
												"value": "onAuxClick"
											},
											{
												"type": "literal",
												"value": "onAuxClickCapture"
											},
											{
												"type": "literal",
												"value": "onClick"
											},
											{
												"type": "literal",
												"value": "onClickCapture"
											},
											{
												"type": "literal",
												"value": "onContextMenu"
											},
											{
												"type": "literal",
												"value": "onContextMenuCapture"
											},
											{
												"type": "literal",
												"value": "onDoubleClick"
											},
											{
												"type": "literal",
												"value": "onDoubleClickCapture"
											},
											{
												"type": "literal",
												"value": "onDrag"
											},
											{
												"type": "literal",
												"value": "onDragCapture"
											},
											{
												"type": "literal",
												"value": "onDragEnd"
											},
											{
												"type": "literal",
												"value": "onDragEndCapture"
											},
											{
												"type": "literal",
												"value": "onDragEnter"
											},
											{
												"type": "literal",
												"value": "onDragEnterCapture"
											},
											{
												"type": "literal",
												"value": "onDragExit"
											},
											{
												"type": "literal",
												"value": "onDragExitCapture"
											},
											{
												"type": "literal",
												"value": "onDragLeave"
											},
											{
												"type": "literal",
												"value": "onDragLeaveCapture"
											},
											{
												"type": "literal",
												"value": "onDragOver"
											},
											{
												"type": "literal",
												"value": "onDragOverCapture"
											},
											{
												"type": "literal",
												"value": "onDragStart"
											},
											{
												"type": "literal",
												"value": "onDragStartCapture"
											},
											{
												"type": "literal",
												"value": "onDrop"
											},
											{
												"type": "literal",
												"value": "onDropCapture"
											},
											{
												"type": "literal",
												"value": "onMouseDown"
											},
											{
												"type": "literal",
												"value": "onMouseDownCapture"
											},
											{
												"type": "literal",
												"value": "onMouseEnter"
											},
											{
												"type": "literal",
												"value": "onMouseLeave"
											},
											{
												"type": "literal",
												"value": "onMouseMove"
											},
											{
												"type": "literal",
												"value": "onMouseMoveCapture"
											},
											{
												"type": "literal",
												"value": "onMouseOut"
											},
											{
												"type": "literal",
												"value": "onMouseOutCapture"
											},
											{
												"type": "literal",
												"value": "onMouseOver"
											},
											{
												"type": "literal",
												"value": "onMouseOverCapture"
											},
											{
												"type": "literal",
												"value": "onMouseUp"
											},
											{
												"type": "literal",
												"value": "onMouseUpCapture"
											},
											{
												"type": "literal",
												"value": "onSelect"
											},
											{
												"type": "literal",
												"value": "onSelectCapture"
											},
											{
												"type": "literal",
												"value": "onTouchCancel"
											},
											{
												"type": "literal",
												"value": "onTouchCancelCapture"
											},
											{
												"type": "literal",
												"value": "onTouchEnd"
											},
											{
												"type": "literal",
												"value": "onTouchEndCapture"
											},
											{
												"type": "literal",
												"value": "onTouchMove"
											},
											{
												"type": "literal",
												"value": "onTouchMoveCapture"
											},
											{
												"type": "literal",
												"value": "onTouchStart"
											},
											{
												"type": "literal",
												"value": "onTouchStartCapture"
											},
											{
												"type": "literal",
												"value": "onPointerDown"
											},
											{
												"type": "literal",
												"value": "onPointerDownCapture"
											},
											{
												"type": "literal",
												"value": "onPointerMove"
											},
											{
												"type": "literal",
												"value": "onPointerMoveCapture"
											},
											{
												"type": "literal",
												"value": "onPointerUp"
											},
											{
												"type": "literal",
												"value": "onPointerUpCapture"
											},
											{
												"type": "literal",
												"value": "onPointerCancel"
											},
											{
												"type": "literal",
												"value": "onPointerCancelCapture"
											},
											{
												"type": "literal",
												"value": "onPointerEnter"
											},
											{
												"type": "literal",
												"value": "onPointerEnterCapture"
											},
											{
												"type": "literal",
												"value": "onPointerLeave"
											},
											{
												"type": "literal",
												"value": "onPointerLeaveCapture"
											},
											{
												"type": "literal",
												"value": "onPointerOver"
											},
											{
												"type": "literal",
												"value": "onPointerOverCapture"
											},
											{
												"type": "literal",
												"value": "onPointerOut"
											},
											{
												"type": "literal",
												"value": "onPointerOutCapture"
											},
											{
												"type": "literal",
												"value": "onGotPointerCapture"
											},
											{
												"type": "literal",
												"value": "onGotPointerCaptureCapture"
											},
											{
												"type": "literal",
												"value": "onLostPointerCapture"
											},
											{
												"type": "literal",
												"value": "onLostPointerCaptureCapture"
											},
											{
												"type": "literal",
												"value": "onScroll"
											},
											{
												"type": "literal",
												"value": "onScrollCapture"
											},
											{
												"type": "literal",
												"value": "onWheel"
											},
											{
												"type": "literal",
												"value": "onWheelCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationStart"
											},
											{
												"type": "literal",
												"value": "onAnimationStartCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationEnd"
											},
											{
												"type": "literal",
												"value": "onAnimationEndCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationIteration"
											},
											{
												"type": "literal",
												"value": "onAnimationIterationCapture"
											},
											{
												"type": "literal",
												"value": "onTransitionEnd"
											},
											{
												"type": "literal",
												"value": "onTransitionEndCapture"
											},
											{
												"type": "literal",
												"value": "key"
											},
											{
												"type": "literal",
												"value": "list"
											},
											{
												"type": "literal",
												"value": "classID"
											},
											{
												"type": "literal",
												"value": "useMap"
											},
											{
												"type": "literal",
												"value": "wmode"
											},
											{
												"type": "literal",
												"value": "defaultChecked"
											},
											{
												"type": "literal",
												"value": "defaultValue"
											},
											{
												"type": "literal",
												"value": "suppressContentEditableWarning"
											},
											{
												"type": "literal",
												"value": "suppressHydrationWarning"
											},
											{
												"type": "literal",
												"value": "accessKey"
											},
											{
												"type": "literal",
												"value": "contentEditable"
											},
											{
												"type": "literal",
												"value": "contextMenu"
											},
											{
												"type": "literal",
												"value": "dir"
											},
											{
												"type": "literal",
												"value": "draggable"
											},
											{
												"type": "literal",
												"value": "hidden"
											},
											{
												"type": "literal",
												"value": "placeholder"
											},
											{
												"type": "literal",
												"value": "spellCheck"
											},
											{
												"type": "literal",
												"value": "translate"
											},
											{
												"type": "literal",
												"value": "radioGroup"
											},
											{
												"type": "literal",
												"value": "about"
											},
											{
												"type": "literal",
												"value": "datatype"
											},
											{
												"type": "literal",
												"value": "inlist"
											},
											{
												"type": "literal",
												"value": "prefix"
											},
											{
												"type": "literal",
												"value": "property"
											},
											{
												"type": "literal",
												"value": "resource"
											},
											{
												"type": "literal",
												"value": "typeof"
											},
											{
												"type": "literal",
												"value": "vocab"
											},
											{
												"type": "literal",
												"value": "autoCapitalize"
											},
											{
												"type": "literal",
												"value": "autoCorrect"
											},
											{
												"type": "literal",
												"value": "autoSave"
											},
											{
												"type": "literal",
												"value": "itemProp"
											},
											{
												"type": "literal",
												"value": "itemScope"
											},
											{
												"type": "literal",
												"value": "itemType"
											},
											{
												"type": "literal",
												"value": "itemID"
											},
											{
												"type": "literal",
												"value": "itemRef"
											},
											{
												"type": "literal",
												"value": "results"
											},
											{
												"type": "literal",
												"value": "security"
											},
											{
												"type": "literal",
												"value": "unselectable"
											},
											{
												"type": "literal",
												"value": "inputMode"
											},
											{
												"type": "literal",
												"value": "is"
											},
											{
												"type": "literal",
												"value": "download"
											},
											{
												"type": "literal",
												"value": "hrefLang"
											},
											{
												"type": "literal",
												"value": "alt"
											},
											{
												"type": "literal",
												"value": "coords"
											},
											{
												"type": "literal",
												"value": "shape"
											},
											{
												"type": "literal",
												"value": "autoPlay"
											},
											{
												"type": "literal",
												"value": "controls"
											},
											{
												"type": "literal",
												"value": "loop"
											},
											{
												"type": "literal",
												"value": "mediaGroup"
											},
											{
												"type": "literal",
												"value": "muted"
											},
											{
												"type": "literal",
												"value": "playsInline"
											},
											{
												"type": "literal",
												"value": "preload"
											},
											{
												"type": "literal",
												"value": "src"
											},
											{
												"type": "literal",
												"value": "disabled"
											},
											{
												"type": "literal",
												"value": "formAction"
											},
											{
												"type": "literal",
												"value": "formEncType"
											},
											{
												"type": "literal",
												"value": "formMethod"
											},
											{
												"type": "literal",
												"value": "formNoValidate"
											},
											{
												"type": "literal",
												"value": "formTarget"
											},
											{
												"type": "literal",
												"value": "value"
											},
											{
												"type": "literal",
												"value": "dateTime"
											},
											{
												"type": "literal",
												"value": "open"
											},
											{
												"type": "literal",
												"value": "acceptCharset"
											},
											{
												"type": "literal",
												"value": "action"
											},
											{
												"type": "literal",
												"value": "autoComplete"
											},
											{
												"type": "literal",
												"value": "encType"
											},
											{
												"type": "literal",
												"value": "noValidate"
											},
											{
												"type": "literal",
												"value": "manifest"
											},
											{
												"type": "literal",
												"value": "allowFullScreen"
											},
											{
												"type": "literal",
												"value": "allowTransparency"
											},
											{
												"type": "literal",
												"value": "frameBorder"
											},
											{
												"type": "literal",
												"value": "marginHeight"
											},
											{
												"type": "literal",
												"value": "marginWidth"
											},
											{
												"type": "literal",
												"value": "sandbox"
											},
											{
												"type": "literal",
												"value": "scrolling"
											},
											{
												"type": "literal",
												"value": "seamless"
											},
											{
												"type": "literal",
												"value": "srcDoc"
											},
											{
												"type": "literal",
												"value": "sizes"
											},
											{
												"type": "literal",
												"value": "srcSet"
											},
											{
												"type": "literal",
												"value": "async"
											},
											{
												"type": "literal",
												"value": "accept"
											},
											{
												"type": "literal",
												"value": "capture"
											},
											{
												"type": "literal",
												"value": "checked"
											},
											{
												"type": "literal",
												"value": "maxLength"
											},
											{
												"type": "literal",
												"value": "minLength"
											},
											{
												"type": "literal",
												"value": "multiple"
											},
											{
												"type": "literal",
												"value": "readOnly"
											},
											{
												"type": "literal",
												"value": "required"
											},
											{
												"type": "literal",
												"value": "size"
											},
											{
												"type": "literal",
												"value": "step"
											},
											{
												"type": "literal",
												"value": "challenge"
											},
											{
												"type": "literal",
												"value": "keyType"
											},
											{
												"type": "literal",
												"value": "keyParams"
											},
											{
												"type": "literal",
												"value": "htmlFor"
											},
											{
												"type": "literal",
												"value": "integrity"
											},
											{
												"type": "literal",
												"value": "charSet"
											},
											{
												"type": "literal",
												"value": "content"
											},
											{
												"type": "literal",
												"value": "httpEquiv"
											},
											{
												"type": "literal",
												"value": "high"
											},
											{
												"type": "literal",
												"value": "low"
											},
											{
												"type": "literal",
												"value": "optimum"
											},
											{
												"type": "literal",
												"value": "reversed"
											},
											{
												"type": "literal",
												"value": "start"
											},
											{
												"type": "literal",
												"value": "selected"
											},
											{
												"type": "literal",
												"value": "defer"
											},
											{
												"type": "literal",
												"value": "nonce"
											},
											{
												"type": "literal",
												"value": "scoped"
											},
											{
												"type": "literal",
												"value": "cellPadding"
											},
											{
												"type": "literal",
												"value": "cellSpacing"
											},
											{
												"type": "literal",
												"value": "colSpan"
											},
											{
												"type": "literal",
												"value": "headers"
											},
											{
												"type": "literal",
												"value": "rowSpan"
											},
											{
												"type": "literal",
												"value": "scope"
											},
											{
												"type": "literal",
												"value": "cols"
											},
											{
												"type": "literal",
												"value": "rows"
											},
											{
												"type": "literal",
												"value": "wrap"
											},
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "kind"
											},
											{
												"type": "literal",
												"value": "srcLang"
											},
											{
												"type": "literal",
												"value": "poster"
											},
											{
												"type": "literal",
												"value": "error"
											}
										]
									}
								],
								"name": "Pick"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLInputElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 19,
			"name": "InputText",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/InputText/InputText.tsx",
					"line": 34,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 1866,
								"name": "InputTextProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 20,
			"name": "Label",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Label/Label.tsx",
					"line": 21,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 2167,
						"name": "LabelProps"
					}
				],
				"name": "React.VFC"
			},
			"defaultValue": "..."
		},
		{
			"id": 2564,
			"name": "MenuItem",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Reach UI MenuItem - Decorated with stylable stylesheet."
			},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 118,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 2543,
								"name": "MenuItemProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2563,
			"name": "MenuItems",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Reach UI MenuItems - see Reach docs, custom uses cases so no class provided."
			},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 106,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "MenuItemsProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2566,
			"name": "MenuLink",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Reach UI MenuLink - see Reach docs, custom uses cases so no class provided."
			},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 167,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "MenuItemImplProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "onSelect"
											},
											{
												"type": "literal",
												"value": "isLink"
											}
										]
									}
								],
								"name": "Omit"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2567,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2568,
											"name": "onSelect",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"signatures": [
												{
													"id": 2569,
													"name": "onSelect",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												2568
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLAnchorElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2562,
			"name": "MenuList",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Reach UI MenuList - Decorated with stylable stylesheet."
			},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 91,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 2537,
								"name": "MenuListProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2565,
			"name": "MenuPopover",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "Reach UI MenuPopover - see Reach docs for custom use cases, straight wrap."
			},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 133,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "MenuPopoverProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2839,
			"name": "P",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Text/Text.tsx",
					"line": 135,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "TextExportsProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLBaseElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 22,
			"name": "Table",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Table/Table.tsx",
					"line": 11,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 2840,
								"name": "TableProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 23,
			"name": "TableBody",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/TableBody/TableBody.tsx",
					"line": 4,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 24,
			"name": "TableCell",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/TableCell/TableCell.tsx",
					"line": 14,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "TableCellProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableCellElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 25,
			"name": "TableContainer",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/TableContainer/TableContainer.tsx",
					"line": 8,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 3099,
								"name": "TableContainerProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLBaseElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 26,
			"name": "TableHead",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/TableHead/TableHead.tsx",
					"line": 4,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "HTMLAttributes"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableSectionElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 28,
			"name": "TablePagination",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/TablePagination/TablePagination.tsx",
					"line": 51,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "TablePaginationProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 27,
			"name": "TableRow",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/TableRow/TableRow.tsx",
					"line": 9,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 3357,
								"name": "TableRowProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLTableRowElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 21,
			"name": "Text",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Text/Text.tsx",
					"line": 23,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"id": 2570,
								"name": "TextProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLBaseElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 29,
			"name": "Toolbar",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Toolbar/Toolbar.tsx",
					"line": 11,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "ToolbarProps"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLDivElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 30,
			"name": "VisuallyHidden",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/VisuallyHidden/VisuallyHidden.tsx",
					"line": 17,
					"character": 6
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3615,
										"name": "VisuallyHiddenProps"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "cite"
											},
											{
												"type": "literal",
												"value": "data"
											},
											{
												"type": "literal",
												"value": "form"
											},
											{
												"type": "literal",
												"value": "label"
											},
											{
												"type": "literal",
												"value": "slot"
											},
											{
												"type": "literal",
												"value": "span"
											},
											{
												"type": "literal",
												"value": "style"
											},
											{
												"type": "literal",
												"value": "summary"
											},
											{
												"type": "literal",
												"value": "title"
											},
											{
												"type": "literal",
												"value": "pattern"
											},
											{
												"type": "literal",
												"value": "as"
											},
											{
												"type": "literal",
												"value": "children"
											},
											{
												"type": "literal",
												"value": "autoFocus"
											},
											{
												"type": "literal",
												"value": "onFocus"
											},
											{
												"type": "literal",
												"value": "onBlur"
											},
											{
												"type": "literal",
												"value": "onKeyDown"
											},
											{
												"type": "literal",
												"value": "onKeyUp"
											},
											{
												"type": "literal",
												"value": "href"
											},
											{
												"type": "literal",
												"value": "target"
											},
											{
												"type": "literal",
												"value": "rel"
											},
											{
												"type": "literal",
												"value": "aria-expanded"
											},
											{
												"type": "literal",
												"value": "aria-haspopup"
											},
											{
												"type": "literal",
												"value": "aria-controls"
											},
											{
												"type": "literal",
												"value": "aria-pressed"
											},
											{
												"type": "literal",
												"value": "type"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "aria-label"
											},
											{
												"type": "literal",
												"value": "aria-labelledby"
											},
											{
												"type": "literal",
												"value": "aria-describedby"
											},
											{
												"type": "literal",
												"value": "aria-details"
											},
											{
												"type": "literal",
												"value": "className"
											},
											{
												"type": "literal",
												"value": "color"
											},
											{
												"type": "literal",
												"value": "height"
											},
											{
												"type": "literal",
												"value": "lang"
											},
											{
												"type": "literal",
												"value": "max"
											},
											{
												"type": "literal",
												"value": "media"
											},
											{
												"type": "literal",
												"value": "method"
											},
											{
												"type": "literal",
												"value": "min"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "width"
											},
											{
												"type": "literal",
												"value": "role"
											},
											{
												"type": "literal",
												"value": "tabIndex"
											},
											{
												"type": "literal",
												"value": "crossOrigin"
											},
											{
												"type": "literal",
												"value": "focusable"
											},
											{
												"type": "literal",
												"value": "aria-activedescendant"
											},
											{
												"type": "literal",
												"value": "aria-atomic"
											},
											{
												"type": "literal",
												"value": "aria-autocomplete"
											},
											{
												"type": "literal",
												"value": "aria-busy"
											},
											{
												"type": "literal",
												"value": "aria-checked"
											},
											{
												"type": "literal",
												"value": "aria-colcount"
											},
											{
												"type": "literal",
												"value": "aria-colindex"
											},
											{
												"type": "literal",
												"value": "aria-colspan"
											},
											{
												"type": "literal",
												"value": "aria-current"
											},
											{
												"type": "literal",
												"value": "aria-disabled"
											},
											{
												"type": "literal",
												"value": "aria-dropeffect"
											},
											{
												"type": "literal",
												"value": "aria-errormessage"
											},
											{
												"type": "literal",
												"value": "aria-flowto"
											},
											{
												"type": "literal",
												"value": "aria-grabbed"
											},
											{
												"type": "literal",
												"value": "aria-hidden"
											},
											{
												"type": "literal",
												"value": "aria-invalid"
											},
											{
												"type": "literal",
												"value": "aria-keyshortcuts"
											},
											{
												"type": "literal",
												"value": "aria-level"
											},
											{
												"type": "literal",
												"value": "aria-live"
											},
											{
												"type": "literal",
												"value": "aria-modal"
											},
											{
												"type": "literal",
												"value": "aria-multiline"
											},
											{
												"type": "literal",
												"value": "aria-multiselectable"
											},
											{
												"type": "literal",
												"value": "aria-orientation"
											},
											{
												"type": "literal",
												"value": "aria-owns"
											},
											{
												"type": "literal",
												"value": "aria-placeholder"
											},
											{
												"type": "literal",
												"value": "aria-posinset"
											},
											{
												"type": "literal",
												"value": "aria-readonly"
											},
											{
												"type": "literal",
												"value": "aria-relevant"
											},
											{
												"type": "literal",
												"value": "aria-required"
											},
											{
												"type": "literal",
												"value": "aria-roledescription"
											},
											{
												"type": "literal",
												"value": "aria-rowcount"
											},
											{
												"type": "literal",
												"value": "aria-rowindex"
											},
											{
												"type": "literal",
												"value": "aria-rowspan"
											},
											{
												"type": "literal",
												"value": "aria-selected"
											},
											{
												"type": "literal",
												"value": "aria-setsize"
											},
											{
												"type": "literal",
												"value": "aria-sort"
											},
											{
												"type": "literal",
												"value": "aria-valuemax"
											},
											{
												"type": "literal",
												"value": "aria-valuemin"
											},
											{
												"type": "literal",
												"value": "aria-valuenow"
											},
											{
												"type": "literal",
												"value": "aria-valuetext"
											},
											{
												"type": "literal",
												"value": "dangerouslySetInnerHTML"
											},
											{
												"type": "literal",
												"value": "onCopy"
											},
											{
												"type": "literal",
												"value": "onCopyCapture"
											},
											{
												"type": "literal",
												"value": "onCut"
											},
											{
												"type": "literal",
												"value": "onCutCapture"
											},
											{
												"type": "literal",
												"value": "onPaste"
											},
											{
												"type": "literal",
												"value": "onPasteCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionEnd"
											},
											{
												"type": "literal",
												"value": "onCompositionEndCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionStart"
											},
											{
												"type": "literal",
												"value": "onCompositionStartCapture"
											},
											{
												"type": "literal",
												"value": "onCompositionUpdate"
											},
											{
												"type": "literal",
												"value": "onCompositionUpdateCapture"
											},
											{
												"type": "literal",
												"value": "onFocusCapture"
											},
											{
												"type": "literal",
												"value": "onBlurCapture"
											},
											{
												"type": "literal",
												"value": "onChange"
											},
											{
												"type": "literal",
												"value": "onChangeCapture"
											},
											{
												"type": "literal",
												"value": "onBeforeInput"
											},
											{
												"type": "literal",
												"value": "onBeforeInputCapture"
											},
											{
												"type": "literal",
												"value": "onInput"
											},
											{
												"type": "literal",
												"value": "onInputCapture"
											},
											{
												"type": "literal",
												"value": "onReset"
											},
											{
												"type": "literal",
												"value": "onResetCapture"
											},
											{
												"type": "literal",
												"value": "onSubmit"
											},
											{
												"type": "literal",
												"value": "onSubmitCapture"
											},
											{
												"type": "literal",
												"value": "onInvalid"
											},
											{
												"type": "literal",
												"value": "onInvalidCapture"
											},
											{
												"type": "literal",
												"value": "onLoad"
											},
											{
												"type": "literal",
												"value": "onLoadCapture"
											},
											{
												"type": "literal",
												"value": "onError"
											},
											{
												"type": "literal",
												"value": "onErrorCapture"
											},
											{
												"type": "literal",
												"value": "onKeyDownCapture"
											},
											{
												"type": "literal",
												"value": "onKeyPress"
											},
											{
												"type": "literal",
												"value": "onKeyPressCapture"
											},
											{
												"type": "literal",
												"value": "onKeyUpCapture"
											},
											{
												"type": "literal",
												"value": "onAbort"
											},
											{
												"type": "literal",
												"value": "onAbortCapture"
											},
											{
												"type": "literal",
												"value": "onCanPlay"
											},
											{
												"type": "literal",
												"value": "onCanPlayCapture"
											},
											{
												"type": "literal",
												"value": "onCanPlayThrough"
											},
											{
												"type": "literal",
												"value": "onCanPlayThroughCapture"
											},
											{
												"type": "literal",
												"value": "onDurationChange"
											},
											{
												"type": "literal",
												"value": "onDurationChangeCapture"
											},
											{
												"type": "literal",
												"value": "onEmptied"
											},
											{
												"type": "literal",
												"value": "onEmptiedCapture"
											},
											{
												"type": "literal",
												"value": "onEncrypted"
											},
											{
												"type": "literal",
												"value": "onEncryptedCapture"
											},
											{
												"type": "literal",
												"value": "onEnded"
											},
											{
												"type": "literal",
												"value": "onEndedCapture"
											},
											{
												"type": "literal",
												"value": "onLoadedData"
											},
											{
												"type": "literal",
												"value": "onLoadedDataCapture"
											},
											{
												"type": "literal",
												"value": "onLoadedMetadata"
											},
											{
												"type": "literal",
												"value": "onLoadedMetadataCapture"
											},
											{
												"type": "literal",
												"value": "onLoadStart"
											},
											{
												"type": "literal",
												"value": "onLoadStartCapture"
											},
											{
												"type": "literal",
												"value": "onPause"
											},
											{
												"type": "literal",
												"value": "onPauseCapture"
											},
											{
												"type": "literal",
												"value": "onPlay"
											},
											{
												"type": "literal",
												"value": "onPlayCapture"
											},
											{
												"type": "literal",
												"value": "onPlaying"
											},
											{
												"type": "literal",
												"value": "onPlayingCapture"
											},
											{
												"type": "literal",
												"value": "onProgress"
											},
											{
												"type": "literal",
												"value": "onProgressCapture"
											},
											{
												"type": "literal",
												"value": "onRateChange"
											},
											{
												"type": "literal",
												"value": "onRateChangeCapture"
											},
											{
												"type": "literal",
												"value": "onSeeked"
											},
											{
												"type": "literal",
												"value": "onSeekedCapture"
											},
											{
												"type": "literal",
												"value": "onSeeking"
											},
											{
												"type": "literal",
												"value": "onSeekingCapture"
											},
											{
												"type": "literal",
												"value": "onStalled"
											},
											{
												"type": "literal",
												"value": "onStalledCapture"
											},
											{
												"type": "literal",
												"value": "onSuspend"
											},
											{
												"type": "literal",
												"value": "onSuspendCapture"
											},
											{
												"type": "literal",
												"value": "onTimeUpdate"
											},
											{
												"type": "literal",
												"value": "onTimeUpdateCapture"
											},
											{
												"type": "literal",
												"value": "onVolumeChange"
											},
											{
												"type": "literal",
												"value": "onVolumeChangeCapture"
											},
											{
												"type": "literal",
												"value": "onWaiting"
											},
											{
												"type": "literal",
												"value": "onWaitingCapture"
											},
											{
												"type": "literal",
												"value": "onAuxClick"
											},
											{
												"type": "literal",
												"value": "onAuxClickCapture"
											},
											{
												"type": "literal",
												"value": "onClick"
											},
											{
												"type": "literal",
												"value": "onClickCapture"
											},
											{
												"type": "literal",
												"value": "onContextMenu"
											},
											{
												"type": "literal",
												"value": "onContextMenuCapture"
											},
											{
												"type": "literal",
												"value": "onDoubleClick"
											},
											{
												"type": "literal",
												"value": "onDoubleClickCapture"
											},
											{
												"type": "literal",
												"value": "onDrag"
											},
											{
												"type": "literal",
												"value": "onDragCapture"
											},
											{
												"type": "literal",
												"value": "onDragEnd"
											},
											{
												"type": "literal",
												"value": "onDragEndCapture"
											},
											{
												"type": "literal",
												"value": "onDragEnter"
											},
											{
												"type": "literal",
												"value": "onDragEnterCapture"
											},
											{
												"type": "literal",
												"value": "onDragExit"
											},
											{
												"type": "literal",
												"value": "onDragExitCapture"
											},
											{
												"type": "literal",
												"value": "onDragLeave"
											},
											{
												"type": "literal",
												"value": "onDragLeaveCapture"
											},
											{
												"type": "literal",
												"value": "onDragOver"
											},
											{
												"type": "literal",
												"value": "onDragOverCapture"
											},
											{
												"type": "literal",
												"value": "onDragStart"
											},
											{
												"type": "literal",
												"value": "onDragStartCapture"
											},
											{
												"type": "literal",
												"value": "onDrop"
											},
											{
												"type": "literal",
												"value": "onDropCapture"
											},
											{
												"type": "literal",
												"value": "onMouseDown"
											},
											{
												"type": "literal",
												"value": "onMouseDownCapture"
											},
											{
												"type": "literal",
												"value": "onMouseEnter"
											},
											{
												"type": "literal",
												"value": "onMouseLeave"
											},
											{
												"type": "literal",
												"value": "onMouseMove"
											},
											{
												"type": "literal",
												"value": "onMouseMoveCapture"
											},
											{
												"type": "literal",
												"value": "onMouseOut"
											},
											{
												"type": "literal",
												"value": "onMouseOutCapture"
											},
											{
												"type": "literal",
												"value": "onMouseOver"
											},
											{
												"type": "literal",
												"value": "onMouseOverCapture"
											},
											{
												"type": "literal",
												"value": "onMouseUp"
											},
											{
												"type": "literal",
												"value": "onMouseUpCapture"
											},
											{
												"type": "literal",
												"value": "onSelect"
											},
											{
												"type": "literal",
												"value": "onSelectCapture"
											},
											{
												"type": "literal",
												"value": "onTouchCancel"
											},
											{
												"type": "literal",
												"value": "onTouchCancelCapture"
											},
											{
												"type": "literal",
												"value": "onTouchEnd"
											},
											{
												"type": "literal",
												"value": "onTouchEndCapture"
											},
											{
												"type": "literal",
												"value": "onTouchMove"
											},
											{
												"type": "literal",
												"value": "onTouchMoveCapture"
											},
											{
												"type": "literal",
												"value": "onTouchStart"
											},
											{
												"type": "literal",
												"value": "onTouchStartCapture"
											},
											{
												"type": "literal",
												"value": "onPointerDown"
											},
											{
												"type": "literal",
												"value": "onPointerDownCapture"
											},
											{
												"type": "literal",
												"value": "onPointerMove"
											},
											{
												"type": "literal",
												"value": "onPointerMoveCapture"
											},
											{
												"type": "literal",
												"value": "onPointerUp"
											},
											{
												"type": "literal",
												"value": "onPointerUpCapture"
											},
											{
												"type": "literal",
												"value": "onPointerCancel"
											},
											{
												"type": "literal",
												"value": "onPointerCancelCapture"
											},
											{
												"type": "literal",
												"value": "onPointerEnter"
											},
											{
												"type": "literal",
												"value": "onPointerEnterCapture"
											},
											{
												"type": "literal",
												"value": "onPointerLeave"
											},
											{
												"type": "literal",
												"value": "onPointerLeaveCapture"
											},
											{
												"type": "literal",
												"value": "onPointerOver"
											},
											{
												"type": "literal",
												"value": "onPointerOverCapture"
											},
											{
												"type": "literal",
												"value": "onPointerOut"
											},
											{
												"type": "literal",
												"value": "onPointerOutCapture"
											},
											{
												"type": "literal",
												"value": "onGotPointerCapture"
											},
											{
												"type": "literal",
												"value": "onGotPointerCaptureCapture"
											},
											{
												"type": "literal",
												"value": "onLostPointerCapture"
											},
											{
												"type": "literal",
												"value": "onLostPointerCaptureCapture"
											},
											{
												"type": "literal",
												"value": "onScroll"
											},
											{
												"type": "literal",
												"value": "onScrollCapture"
											},
											{
												"type": "literal",
												"value": "onWheel"
											},
											{
												"type": "literal",
												"value": "onWheelCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationStart"
											},
											{
												"type": "literal",
												"value": "onAnimationStartCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationEnd"
											},
											{
												"type": "literal",
												"value": "onAnimationEndCapture"
											},
											{
												"type": "literal",
												"value": "onAnimationIteration"
											},
											{
												"type": "literal",
												"value": "onAnimationIterationCapture"
											},
											{
												"type": "literal",
												"value": "onTransitionEnd"
											},
											{
												"type": "literal",
												"value": "onTransitionEndCapture"
											},
											{
												"type": "literal",
												"value": "key"
											},
											{
												"type": "literal",
												"value": "list"
											},
											{
												"type": "literal",
												"value": "classID"
											},
											{
												"type": "literal",
												"value": "useMap"
											},
											{
												"type": "literal",
												"value": "wmode"
											},
											{
												"type": "literal",
												"value": "defaultChecked"
											},
											{
												"type": "literal",
												"value": "defaultValue"
											},
											{
												"type": "literal",
												"value": "suppressContentEditableWarning"
											},
											{
												"type": "literal",
												"value": "suppressHydrationWarning"
											},
											{
												"type": "literal",
												"value": "accessKey"
											},
											{
												"type": "literal",
												"value": "contentEditable"
											},
											{
												"type": "literal",
												"value": "contextMenu"
											},
											{
												"type": "literal",
												"value": "dir"
											},
											{
												"type": "literal",
												"value": "draggable"
											},
											{
												"type": "literal",
												"value": "hidden"
											},
											{
												"type": "literal",
												"value": "placeholder"
											},
											{
												"type": "literal",
												"value": "spellCheck"
											},
											{
												"type": "literal",
												"value": "translate"
											},
											{
												"type": "literal",
												"value": "radioGroup"
											},
											{
												"type": "literal",
												"value": "about"
											},
											{
												"type": "literal",
												"value": "datatype"
											},
											{
												"type": "literal",
												"value": "inlist"
											},
											{
												"type": "literal",
												"value": "prefix"
											},
											{
												"type": "literal",
												"value": "property"
											},
											{
												"type": "literal",
												"value": "resource"
											},
											{
												"type": "literal",
												"value": "typeof"
											},
											{
												"type": "literal",
												"value": "vocab"
											},
											{
												"type": "literal",
												"value": "autoCapitalize"
											},
											{
												"type": "literal",
												"value": "autoCorrect"
											},
											{
												"type": "literal",
												"value": "autoSave"
											},
											{
												"type": "literal",
												"value": "itemProp"
											},
											{
												"type": "literal",
												"value": "itemScope"
											},
											{
												"type": "literal",
												"value": "itemType"
											},
											{
												"type": "literal",
												"value": "itemID"
											},
											{
												"type": "literal",
												"value": "itemRef"
											},
											{
												"type": "literal",
												"value": "results"
											},
											{
												"type": "literal",
												"value": "security"
											},
											{
												"type": "literal",
												"value": "unselectable"
											},
											{
												"type": "literal",
												"value": "inputMode"
											},
											{
												"type": "literal",
												"value": "is"
											},
											{
												"type": "literal",
												"value": "download"
											},
											{
												"type": "literal",
												"value": "hrefLang"
											},
											{
												"type": "literal",
												"value": "alt"
											},
											{
												"type": "literal",
												"value": "coords"
											},
											{
												"type": "literal",
												"value": "shape"
											},
											{
												"type": "literal",
												"value": "autoPlay"
											},
											{
												"type": "literal",
												"value": "controls"
											},
											{
												"type": "literal",
												"value": "loop"
											},
											{
												"type": "literal",
												"value": "mediaGroup"
											},
											{
												"type": "literal",
												"value": "muted"
											},
											{
												"type": "literal",
												"value": "playsInline"
											},
											{
												"type": "literal",
												"value": "preload"
											},
											{
												"type": "literal",
												"value": "src"
											},
											{
												"type": "literal",
												"value": "disabled"
											},
											{
												"type": "literal",
												"value": "formAction"
											},
											{
												"type": "literal",
												"value": "formEncType"
											},
											{
												"type": "literal",
												"value": "formMethod"
											},
											{
												"type": "literal",
												"value": "formNoValidate"
											},
											{
												"type": "literal",
												"value": "formTarget"
											},
											{
												"type": "literal",
												"value": "value"
											},
											{
												"type": "literal",
												"value": "dateTime"
											},
											{
												"type": "literal",
												"value": "open"
											},
											{
												"type": "literal",
												"value": "acceptCharset"
											},
											{
												"type": "literal",
												"value": "action"
											},
											{
												"type": "literal",
												"value": "autoComplete"
											},
											{
												"type": "literal",
												"value": "encType"
											},
											{
												"type": "literal",
												"value": "noValidate"
											},
											{
												"type": "literal",
												"value": "manifest"
											},
											{
												"type": "literal",
												"value": "allowFullScreen"
											},
											{
												"type": "literal",
												"value": "allowTransparency"
											},
											{
												"type": "literal",
												"value": "frameBorder"
											},
											{
												"type": "literal",
												"value": "marginHeight"
											},
											{
												"type": "literal",
												"value": "marginWidth"
											},
											{
												"type": "literal",
												"value": "sandbox"
											},
											{
												"type": "literal",
												"value": "scrolling"
											},
											{
												"type": "literal",
												"value": "seamless"
											},
											{
												"type": "literal",
												"value": "srcDoc"
											},
											{
												"type": "literal",
												"value": "sizes"
											},
											{
												"type": "literal",
												"value": "srcSet"
											},
											{
												"type": "literal",
												"value": "async"
											},
											{
												"type": "literal",
												"value": "accept"
											},
											{
												"type": "literal",
												"value": "capture"
											},
											{
												"type": "literal",
												"value": "checked"
											},
											{
												"type": "literal",
												"value": "maxLength"
											},
											{
												"type": "literal",
												"value": "minLength"
											},
											{
												"type": "literal",
												"value": "multiple"
											},
											{
												"type": "literal",
												"value": "readOnly"
											},
											{
												"type": "literal",
												"value": "required"
											},
											{
												"type": "literal",
												"value": "size"
											},
											{
												"type": "literal",
												"value": "step"
											},
											{
												"type": "literal",
												"value": "challenge"
											},
											{
												"type": "literal",
												"value": "keyType"
											},
											{
												"type": "literal",
												"value": "keyParams"
											},
											{
												"type": "literal",
												"value": "htmlFor"
											},
											{
												"type": "literal",
												"value": "integrity"
											},
											{
												"type": "literal",
												"value": "charSet"
											},
											{
												"type": "literal",
												"value": "content"
											},
											{
												"type": "literal",
												"value": "httpEquiv"
											},
											{
												"type": "literal",
												"value": "high"
											},
											{
												"type": "literal",
												"value": "low"
											},
											{
												"type": "literal",
												"value": "optimum"
											},
											{
												"type": "literal",
												"value": "reversed"
											},
											{
												"type": "literal",
												"value": "start"
											},
											{
												"type": "literal",
												"value": "selected"
											},
											{
												"type": "literal",
												"value": "defer"
											},
											{
												"type": "literal",
												"value": "nonce"
											},
											{
												"type": "literal",
												"value": "scoped"
											},
											{
												"type": "literal",
												"value": "cellPadding"
											},
											{
												"type": "literal",
												"value": "cellSpacing"
											},
											{
												"type": "literal",
												"value": "colSpan"
											},
											{
												"type": "literal",
												"value": "headers"
											},
											{
												"type": "literal",
												"value": "rowSpan"
											},
											{
												"type": "literal",
												"value": "scope"
											},
											{
												"type": "literal",
												"value": "cols"
											},
											{
												"type": "literal",
												"value": "rows"
											},
											{
												"type": "literal",
												"value": "wrap"
											},
											{
												"type": "literal",
												"value": "default"
											},
											{
												"type": "literal",
												"value": "kind"
											},
											{
												"type": "literal",
												"value": "srcLang"
											},
											{
												"type": "literal",
												"value": "poster"
											},
											{
												"type": "literal",
												"value": "visuallyHidden"
											}
										]
									}
								],
								"name": "Pick"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLSpanElement"
									}
								],
								"name": "RefAttributes"
							}
						]
					}
				],
				"name": "ForwardRefExoticComponent"
			},
			"defaultValue": "..."
		},
		{
			"id": 2,
			"name": "Button",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Button/Button.tsx",
					"line": 179,
					"character": 6
				}
			],
			"signatures": [
				{
					"id": 3,
					"name": "Button",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 4,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ElementType"
							},
							"default": {
								"type": "literal",
								"value": "button"
							}
						}
					],
					"parameters": [
						{
							"id": 5,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 99,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "ButtonProps"
							}
						},
						{
							"id": 6,
							"name": "ref",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLElement"
									}
								],
								"name": "React.Ref"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor"
									}
								]
							}
						],
						"name": "ReactElement"
					}
				}
			]
		},
		{
			"id": 13,
			"name": "InputBase",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/InputBase/InputBase.tsx",
					"line": 43,
					"character": 6
				}
			],
			"signatures": [
				{
					"id": 14,
					"name": "InputBase",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 15,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "InputBaseInternalProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			]
		},
		{
			"id": 2554,
			"name": "Menu",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 53,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 2555,
					"name": "Menu",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Reach UI Menu - Straight wrap and go of the main menu."
					},
					"parameters": [
						{
							"id": 2556,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "MenuProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			]
		},
		{
			"id": 2557,
			"name": "MenuButton",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/components/Menu/Menu.tsx",
					"line": 72,
					"character": 13
				}
			],
			"signatures": [
				{
					"id": 2558,
					"name": "MenuButton",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 2559,
							"name": "P",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ElementType"
							},
							"default": {
								"type": "literal",
								"value": "button"
							}
						}
					],
					"parameters": [
						{
							"id": 2560,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 99,
								"typeArguments": [
									{
										"type": "reference",
										"name": "P"
									}
								],
								"name": "ButtonProps"
							}
						},
						{
							"id": 2561,
							"name": "ref",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				39,
				45,
				103,
				112,
				372,
				845,
				855,
				1501,
				1130,
				1866,
				2167,
				2543,
				2537,
				3099,
				2840,
				3357,
				2570,
				3615
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				33,
				31,
				44,
				111,
				99,
				2536,
				2542,
				2553,
				2552,
				2535,
				38,
				32,
				37,
				36,
				34,
				35
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				1,
				7,
				8,
				9,
				2833,
				2834,
				2835,
				2836,
				2837,
				2838,
				10,
				11,
				12,
				16,
				17,
				18,
				19,
				20,
				2564,
				2563,
				2566,
				2562,
				2565,
				2839,
				22,
				23,
				24,
				25,
				26,
				28,
				27,
				21,
				29,
				30
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				2,
				13,
				2554,
				2557
			]
		}
	],
	"sources": [
		{
			"fileName": "src/indexLib.ts",
			"line": 6,
			"character": 0
		}
	]
}